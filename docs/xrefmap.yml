### YamlMime:XRefMap
sorted: true
references:
- uid: Automata.Core
  name: Automata.Core
  href: Automata.Core.html
  commentId: N:Automata.Core
  fullName: Automata.Core
  nameWithType: Automata.Core
- uid: Automata.Core.Alang
  name: Automata.Core.Alang
  href: Automata.Core.Alang.html
  commentId: N:Automata.Core.Alang
  fullName: Automata.Core.Alang
  nameWithType: Automata.Core.Alang
- uid: Automata.Core.Alang.AlangCursor
  name: AlangCursor
  href: Automata.Core.Alang.AlangCursor.html
  commentId: T:Automata.Core.Alang.AlangCursor
  fullName: Automata.Core.Alang.AlangCursor
  nameWithType: AlangCursor
- uid: Automata.Core.Alang.AlangCursor.#ctor(System.String)
  name: AlangCursor(string)
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor__ctor_System_String_
  commentId: M:Automata.Core.Alang.AlangCursor.#ctor(System.String)
  name.vb: New(String)
  fullName: Automata.Core.Alang.AlangCursor.AlangCursor(string)
  fullName.vb: Automata.Core.Alang.AlangCursor.New(String)
  nameWithType: AlangCursor.AlangCursor(string)
  nameWithType.vb: AlangCursor.New(String)
- uid: Automata.Core.Alang.AlangCursor.#ctor*
  name: AlangCursor
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor__ctor_
  commentId: Overload:Automata.Core.Alang.AlangCursor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.AlangCursor.AlangCursor
  fullName.vb: Automata.Core.Alang.AlangCursor.New
  nameWithType: AlangCursor.AlangCursor
  nameWithType.vb: AlangCursor.New
- uid: Automata.Core.Alang.AlangCursor.ConsumeAtom
  name: ConsumeAtom()
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ConsumeAtom
  commentId: M:Automata.Core.Alang.AlangCursor.ConsumeAtom
  fullName: Automata.Core.Alang.AlangCursor.ConsumeAtom()
  nameWithType: AlangCursor.ConsumeAtom()
- uid: Automata.Core.Alang.AlangCursor.ConsumeAtom*
  name: ConsumeAtom
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ConsumeAtom_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ConsumeAtom
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ConsumeAtom
  nameWithType: AlangCursor.ConsumeAtom
- uid: Automata.Core.Alang.AlangCursor.First
  name: First
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_First
  commentId: P:Automata.Core.Alang.AlangCursor.First
  fullName: Automata.Core.Alang.AlangCursor.First
  nameWithType: AlangCursor.First
- uid: Automata.Core.Alang.AlangCursor.First*
  name: First
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_First_
  commentId: Overload:Automata.Core.Alang.AlangCursor.First
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.First
  nameWithType: AlangCursor.First
- uid: Automata.Core.Alang.AlangCursor.IsEmpty
  name: IsEmpty
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsEmpty
  commentId: P:Automata.Core.Alang.AlangCursor.IsEmpty
  fullName: Automata.Core.Alang.AlangCursor.IsEmpty
  nameWithType: AlangCursor.IsEmpty
- uid: Automata.Core.Alang.AlangCursor.IsEmpty*
  name: IsEmpty
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsEmpty_
  commentId: Overload:Automata.Core.Alang.AlangCursor.IsEmpty
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.IsEmpty
  nameWithType: AlangCursor.IsEmpty
- uid: Automata.Core.Alang.AlangCursor.IsExpressionStart
  name: IsExpressionStart
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsExpressionStart
  commentId: P:Automata.Core.Alang.AlangCursor.IsExpressionStart
  fullName: Automata.Core.Alang.AlangCursor.IsExpressionStart
  nameWithType: AlangCursor.IsExpressionStart
- uid: Automata.Core.Alang.AlangCursor.IsExpressionStart*
  name: IsExpressionStart
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsExpressionStart_
  commentId: Overload:Automata.Core.Alang.AlangCursor.IsExpressionStart
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.IsExpressionStart
  nameWithType: AlangCursor.IsExpressionStart
- uid: Automata.Core.Alang.AlangCursor.ToString
  name: ToString()
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ToString
  commentId: M:Automata.Core.Alang.AlangCursor.ToString
  fullName: Automata.Core.Alang.AlangCursor.ToString()
  nameWithType: AlangCursor.ToString()
- uid: Automata.Core.Alang.AlangCursor.ToString*
  name: ToString
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ToString_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ToString
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ToString
  nameWithType: AlangCursor.ToString
- uid: Automata.Core.Alang.AlangCursor.TryConsume(System.Char)
  name: TryConsume(char)
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsume_System_Char_
  commentId: M:Automata.Core.Alang.AlangCursor.TryConsume(System.Char)
  name.vb: TryConsume(Char)
  fullName: Automata.Core.Alang.AlangCursor.TryConsume(char)
  fullName.vb: Automata.Core.Alang.AlangCursor.TryConsume(Char)
  nameWithType: AlangCursor.TryConsume(char)
  nameWithType.vb: AlangCursor.TryConsume(Char)
- uid: Automata.Core.Alang.AlangCursor.TryConsume*
  name: TryConsume
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsume_
  commentId: Overload:Automata.Core.Alang.AlangCursor.TryConsume
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.TryConsume
  nameWithType: AlangCursor.TryConsume
- uid: Automata.Core.Alang.AlangCursor.TryConsumeAny(System.Char[])
  name: TryConsumeAny(params char[])
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsumeAny_System_Char___
  commentId: M:Automata.Core.Alang.AlangCursor.TryConsumeAny(System.Char[])
  name.vb: TryConsumeAny(ParamArray Char())
  fullName: Automata.Core.Alang.AlangCursor.TryConsumeAny(params char[])
  fullName.vb: Automata.Core.Alang.AlangCursor.TryConsumeAny(ParamArray Char())
  nameWithType: AlangCursor.TryConsumeAny(params char[])
  nameWithType.vb: AlangCursor.TryConsumeAny(ParamArray Char())
- uid: Automata.Core.Alang.AlangCursor.TryConsumeAny*
  name: TryConsumeAny
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsumeAny_
  commentId: Overload:Automata.Core.Alang.AlangCursor.TryConsumeAny
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.TryConsumeAny
  nameWithType: AlangCursor.TryConsumeAny
- uid: Automata.Core.Alang.AlangExpr
  name: AlangExpr
  href: Automata.Core.Alang.AlangExpr.html
  commentId: T:Automata.Core.Alang.AlangExpr
  fullName: Automata.Core.Alang.AlangExpr
  nameWithType: AlangExpr
- uid: Automata.Core.Alang.AlangExpr.#ctor
  name: AlangExpr()
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr__ctor
  commentId: M:Automata.Core.Alang.AlangExpr.#ctor
  name.vb: New()
  fullName: Automata.Core.Alang.AlangExpr.AlangExpr()
  fullName.vb: Automata.Core.Alang.AlangExpr.New()
  nameWithType: AlangExpr.AlangExpr()
  nameWithType.vb: AlangExpr.New()
- uid: Automata.Core.Alang.AlangExpr.#ctor*
  name: AlangExpr
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr__ctor_
  commentId: Overload:Automata.Core.Alang.AlangExpr.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.AlangExpr.AlangExpr
  fullName.vb: Automata.Core.Alang.AlangExpr.New
  nameWithType: AlangExpr.AlangExpr
  nameWithType.vb: AlangExpr.New
- uid: Automata.Core.Alang.AlangExpr.Empty
  name: Empty
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_Empty
  commentId: P:Automata.Core.Alang.AlangExpr.Empty
  fullName: Automata.Core.Alang.AlangExpr.Empty
  nameWithType: AlangExpr.Empty
- uid: Automata.Core.Alang.AlangExpr.Empty*
  name: Empty
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_Empty_
  commentId: Overload:Automata.Core.Alang.AlangExpr.Empty
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangExpr.Empty
  nameWithType: AlangExpr.Empty
- uid: Automata.Core.Alang.AlangExpr.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_ExpressionString
  commentId: P:Automata.Core.Alang.AlangExpr.ExpressionString
  fullName: Automata.Core.Alang.AlangExpr.ExpressionString
  nameWithType: AlangExpr.ExpressionString
- uid: Automata.Core.Alang.AlangExpr.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_ExpressionString_
  commentId: Overload:Automata.Core.Alang.AlangExpr.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangExpr.ExpressionString
  nameWithType: AlangExpr.ExpressionString
- uid: Automata.Core.Alang.AlangExpr.IsEmpty
  name: IsEmpty
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_IsEmpty
  commentId: P:Automata.Core.Alang.AlangExpr.IsEmpty
  fullName: Automata.Core.Alang.AlangExpr.IsEmpty
  nameWithType: AlangExpr.IsEmpty
- uid: Automata.Core.Alang.AlangExpr.IsEmpty*
  name: IsEmpty
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_IsEmpty_
  commentId: Overload:Automata.Core.Alang.AlangExpr.IsEmpty
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangExpr.IsEmpty
  nameWithType: AlangExpr.IsEmpty
- uid: Automata.Core.Alang.AlangExpr.Param(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name: Param(AlangExpr, AlangExpr)
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_Param_Automata_Core_Alang_AlangExpr_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.AlangExpr.Param(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  fullName: Automata.Core.Alang.AlangExpr.Param(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  nameWithType: AlangExpr.Param(AlangExpr, AlangExpr)
- uid: Automata.Core.Alang.AlangExpr.Param*
  name: Param
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_Param_
  commentId: Overload:Automata.Core.Alang.AlangExpr.Param
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangExpr.Param
  nameWithType: AlangExpr.Param
- uid: Automata.Core.Alang.AlangExpr.Parse(System.String)
  name: Parse(string)
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_Parse_System_String_
  commentId: M:Automata.Core.Alang.AlangExpr.Parse(System.String)
  name.vb: Parse(String)
  fullName: Automata.Core.Alang.AlangExpr.Parse(string)
  fullName.vb: Automata.Core.Alang.AlangExpr.Parse(String)
  nameWithType: AlangExpr.Parse(string)
  nameWithType.vb: AlangExpr.Parse(String)
- uid: Automata.Core.Alang.AlangExpr.Parse*
  name: Parse
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_Parse_
  commentId: Overload:Automata.Core.Alang.AlangExpr.Parse
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangExpr.Parse
  nameWithType: AlangExpr.Parse
- uid: Automata.Core.Alang.AlangExpr.Precedence
  name: Precedence
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_Precedence
  commentId: P:Automata.Core.Alang.AlangExpr.Precedence
  fullName: Automata.Core.Alang.AlangExpr.Precedence
  nameWithType: AlangExpr.Precedence
- uid: Automata.Core.Alang.AlangExpr.Precedence*
  name: Precedence
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_Precedence_
  commentId: Overload:Automata.Core.Alang.AlangExpr.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangExpr.Precedence
  nameWithType: AlangExpr.Precedence
- uid: Automata.Core.Alang.AlangExpr.ToString
  name: ToString()
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_ToString
  commentId: M:Automata.Core.Alang.AlangExpr.ToString
  fullName: Automata.Core.Alang.AlangExpr.ToString()
  nameWithType: AlangExpr.ToString()
- uid: Automata.Core.Alang.AlangExpr.ToString*
  name: ToString
  href: Automata.Core.Alang.AlangExpr.html#Automata_Core_Alang_AlangExpr_ToString_
  commentId: Overload:Automata.Core.Alang.AlangExpr.ToString
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangExpr.ToString
  nameWithType: AlangExpr.ToString
- uid: Automata.Core.Alang.Atom
  name: Atom
  href: Automata.Core.Alang.Atom.html
  commentId: T:Automata.Core.Alang.Atom
  fullName: Automata.Core.Alang.Atom
  nameWithType: Atom
- uid: Automata.Core.Alang.Atom.#ctor(System.String)
  name: Atom(string)
  href: Automata.Core.Alang.Atom.html#Automata_Core_Alang_Atom__ctor_System_String_
  commentId: M:Automata.Core.Alang.Atom.#ctor(System.String)
  name.vb: New(String)
  fullName: Automata.Core.Alang.Atom.Atom(string)
  fullName.vb: Automata.Core.Alang.Atom.New(String)
  nameWithType: Atom.Atom(string)
  nameWithType.vb: Atom.New(String)
- uid: Automata.Core.Alang.Atom.#ctor*
  name: Atom
  href: Automata.Core.Alang.Atom.html#Automata_Core_Alang_Atom__ctor_
  commentId: Overload:Automata.Core.Alang.Atom.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Atom.Atom
  fullName.vb: Automata.Core.Alang.Atom.New
  nameWithType: Atom.Atom
  nameWithType.vb: Atom.New
- uid: Automata.Core.Alang.Atom.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.Atom.html#Automata_Core_Alang_Atom_ExpressionString
  commentId: P:Automata.Core.Alang.Atom.ExpressionString
  fullName: Automata.Core.Alang.Atom.ExpressionString
  nameWithType: Atom.ExpressionString
- uid: Automata.Core.Alang.Atom.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.Atom.html#Automata_Core_Alang_Atom_ExpressionString_
  commentId: Overload:Automata.Core.Alang.Atom.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Atom.ExpressionString
  nameWithType: Atom.ExpressionString
- uid: Automata.Core.Alang.Atom.Precedence
  name: Precedence
  href: Automata.Core.Alang.Atom.html#Automata_Core_Alang_Atom_Precedence
  commentId: P:Automata.Core.Alang.Atom.Precedence
  fullName: Automata.Core.Alang.Atom.Precedence
  nameWithType: Atom.Precedence
- uid: Automata.Core.Alang.Atom.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Atom.html#Automata_Core_Alang_Atom_Precedence_
  commentId: Overload:Automata.Core.Alang.Atom.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Atom.Precedence
  nameWithType: Atom.Precedence
- uid: Automata.Core.Alang.Atom.Symbol
  name: Symbol
  href: Automata.Core.Alang.Atom.html#Automata_Core_Alang_Atom_Symbol
  commentId: P:Automata.Core.Alang.Atom.Symbol
  fullName: Automata.Core.Alang.Atom.Symbol
  nameWithType: Atom.Symbol
- uid: Automata.Core.Alang.Atom.Symbol*
  name: Symbol
  href: Automata.Core.Alang.Atom.html#Automata_Core_Alang_Atom_Symbol_
  commentId: Overload:Automata.Core.Alang.Atom.Symbol
  isSpec: "True"
  fullName: Automata.Core.Alang.Atom.Symbol
  nameWithType: Atom.Symbol
- uid: Automata.Core.Alang.Chars
  name: Chars
  href: Automata.Core.Alang.Chars.html
  commentId: T:Automata.Core.Alang.Chars
  fullName: Automata.Core.Alang.Chars
  nameWithType: Chars
- uid: Automata.Core.Alang.Chars.Complement
  name: Complement
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Complement
  commentId: F:Automata.Core.Alang.Chars.Complement
  fullName: Automata.Core.Alang.Chars.Complement
  nameWithType: Chars.Complement
- uid: Automata.Core.Alang.Chars.Difference
  name: Difference
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Difference
  commentId: F:Automata.Core.Alang.Chars.Difference
  fullName: Automata.Core.Alang.Chars.Difference
  nameWithType: Chars.Difference
- uid: Automata.Core.Alang.Chars.EOI
  name: EOI
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_EOI
  commentId: F:Automata.Core.Alang.Chars.EOI
  fullName: Automata.Core.Alang.Chars.EOI
  nameWithType: Chars.EOI
- uid: Automata.Core.Alang.Chars.Intersection
  name: Intersection
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Intersection
  commentId: F:Automata.Core.Alang.Chars.Intersection
  fullName: Automata.Core.Alang.Chars.Intersection
  nameWithType: Chars.Intersection
- uid: Automata.Core.Alang.Chars.Invalid
  name: Invalid
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Invalid
  commentId: F:Automata.Core.Alang.Chars.Invalid
  fullName: Automata.Core.Alang.Chars.Invalid
  nameWithType: Chars.Invalid
- uid: Automata.Core.Alang.Chars.IsAtomChar(System.Char)
  name: IsAtomChar(char)
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsAtomChar_System_Char_
  commentId: M:Automata.Core.Alang.Chars.IsAtomChar(System.Char)
  name.vb: IsAtomChar(Char)
  fullName: Automata.Core.Alang.Chars.IsAtomChar(char)
  fullName.vb: Automata.Core.Alang.Chars.IsAtomChar(Char)
  nameWithType: Chars.IsAtomChar(char)
  nameWithType.vb: Chars.IsAtomChar(Char)
- uid: Automata.Core.Alang.Chars.IsAtomChar*
  name: IsAtomChar
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsAtomChar_
  commentId: Overload:Automata.Core.Alang.Chars.IsAtomChar
  isSpec: "True"
  fullName: Automata.Core.Alang.Chars.IsAtomChar
  nameWithType: Chars.IsAtomChar
- uid: Automata.Core.Alang.Chars.IsExpressionStart(System.Char)
  name: IsExpressionStart(char)
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsExpressionStart_System_Char_
  commentId: M:Automata.Core.Alang.Chars.IsExpressionStart(System.Char)
  name.vb: IsExpressionStart(Char)
  fullName: Automata.Core.Alang.Chars.IsExpressionStart(char)
  fullName.vb: Automata.Core.Alang.Chars.IsExpressionStart(Char)
  nameWithType: Chars.IsExpressionStart(char)
  nameWithType.vb: Chars.IsExpressionStart(Char)
- uid: Automata.Core.Alang.Chars.IsExpressionStart*
  name: IsExpressionStart
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsExpressionStart_
  commentId: Overload:Automata.Core.Alang.Chars.IsExpressionStart
  isSpec: "True"
  fullName: Automata.Core.Alang.Chars.IsExpressionStart
  nameWithType: Chars.IsExpressionStart
- uid: Automata.Core.Alang.Chars.IsPostfixOp(System.Char)
  name: IsPostfixOp(char)
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsPostfixOp_System_Char_
  commentId: M:Automata.Core.Alang.Chars.IsPostfixOp(System.Char)
  name.vb: IsPostfixOp(Char)
  fullName: Automata.Core.Alang.Chars.IsPostfixOp(char)
  fullName.vb: Automata.Core.Alang.Chars.IsPostfixOp(Char)
  nameWithType: Chars.IsPostfixOp(char)
  nameWithType.vb: Chars.IsPostfixOp(Char)
- uid: Automata.Core.Alang.Chars.IsPostfixOp*
  name: IsPostfixOp
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsPostfixOp_
  commentId: Overload:Automata.Core.Alang.Chars.IsPostfixOp
  isSpec: "True"
  fullName: Automata.Core.Alang.Chars.IsPostfixOp
  nameWithType: Chars.IsPostfixOp
- uid: Automata.Core.Alang.Chars.KleenePlus
  name: KleenePlus
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_KleenePlus
  commentId: F:Automata.Core.Alang.Chars.KleenePlus
  fullName: Automata.Core.Alang.Chars.KleenePlus
  nameWithType: Chars.KleenePlus
- uid: Automata.Core.Alang.Chars.KleeneStar
  name: KleeneStar
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_KleeneStar
  commentId: F:Automata.Core.Alang.Chars.KleeneStar
  fullName: Automata.Core.Alang.Chars.KleeneStar
  nameWithType: Chars.KleeneStar
- uid: Automata.Core.Alang.Chars.LeftParen
  name: LeftParen
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_LeftParen
  commentId: F:Automata.Core.Alang.Chars.LeftParen
  fullName: Automata.Core.Alang.Chars.LeftParen
  nameWithType: Chars.LeftParen
- uid: Automata.Core.Alang.Chars.Option
  name: Option
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Option
  commentId: F:Automata.Core.Alang.Chars.Option
  fullName: Automata.Core.Alang.Chars.Option
  nameWithType: Chars.Option
- uid: Automata.Core.Alang.Chars.RightParen
  name: RightParen
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_RightParen
  commentId: F:Automata.Core.Alang.Chars.RightParen
  fullName: Automata.Core.Alang.Chars.RightParen
  nameWithType: Chars.RightParen
- uid: Automata.Core.Alang.Chars.Union
  name: Union
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Union
  commentId: F:Automata.Core.Alang.Chars.Union
  fullName: Automata.Core.Alang.Chars.Union
  nameWithType: Chars.Union
- uid: Automata.Core.Alang.Complement
  name: Complement
  href: Automata.Core.Alang.Complement.html
  commentId: T:Automata.Core.Alang.Complement
  fullName: Automata.Core.Alang.Complement
  nameWithType: Complement
- uid: Automata.Core.Alang.Complement.#ctor(Automata.Core.Alang.AlangExpr)
  name: Complement(AlangExpr)
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement__ctor_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.Complement.#ctor(Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr)
  fullName: Automata.Core.Alang.Complement.Complement(Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.Complement.New(Automata.Core.Alang.AlangExpr)
  nameWithType: Complement.Complement(AlangExpr)
  nameWithType.vb: Complement.New(AlangExpr)
- uid: Automata.Core.Alang.Complement.#ctor*
  name: Complement
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement__ctor_
  commentId: Overload:Automata.Core.Alang.Complement.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Complement.Complement
  fullName.vb: Automata.Core.Alang.Complement.New
  nameWithType: Complement.Complement
  nameWithType.vb: Complement.New
- uid: Automata.Core.Alang.Complement.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement_ExpressionString
  commentId: P:Automata.Core.Alang.Complement.ExpressionString
  fullName: Automata.Core.Alang.Complement.ExpressionString
  nameWithType: Complement.ExpressionString
- uid: Automata.Core.Alang.Complement.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement_ExpressionString_
  commentId: Overload:Automata.Core.Alang.Complement.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Complement.ExpressionString
  nameWithType: Complement.ExpressionString
- uid: Automata.Core.Alang.Complement.Precedence
  name: Precedence
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement_Precedence
  commentId: P:Automata.Core.Alang.Complement.Precedence
  fullName: Automata.Core.Alang.Complement.Precedence
  nameWithType: Complement.Precedence
- uid: Automata.Core.Alang.Complement.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement_Precedence_
  commentId: Overload:Automata.Core.Alang.Complement.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Complement.Precedence
  nameWithType: Complement.Precedence
- uid: Automata.Core.Alang.Concatenation
  name: Concatenation
  href: Automata.Core.Alang.Concatenation.html
  commentId: T:Automata.Core.Alang.Concatenation
  fullName: Automata.Core.Alang.Concatenation
  nameWithType: Concatenation
- uid: Automata.Core.Alang.Concatenation.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name: Concatenation(AlangExpr, AlangExpr)
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation__ctor_Automata_Core_Alang_AlangExpr_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.Concatenation.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr, AlangExpr)
  fullName: Automata.Core.Alang.Concatenation.Concatenation(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.Concatenation.New(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  nameWithType: Concatenation.Concatenation(AlangExpr, AlangExpr)
  nameWithType.vb: Concatenation.New(AlangExpr, AlangExpr)
- uid: Automata.Core.Alang.Concatenation.#ctor*
  name: Concatenation
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation__ctor_
  commentId: Overload:Automata.Core.Alang.Concatenation.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Concatenation.Concatenation
  fullName.vb: Automata.Core.Alang.Concatenation.New
  nameWithType: Concatenation.Concatenation
  nameWithType.vb: Concatenation.New
- uid: Automata.Core.Alang.Concatenation.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_ExpressionString
  commentId: P:Automata.Core.Alang.Concatenation.ExpressionString
  fullName: Automata.Core.Alang.Concatenation.ExpressionString
  nameWithType: Concatenation.ExpressionString
- uid: Automata.Core.Alang.Concatenation.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_ExpressionString_
  commentId: Overload:Automata.Core.Alang.Concatenation.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Concatenation.ExpressionString
  nameWithType: Concatenation.ExpressionString
- uid: Automata.Core.Alang.Concatenation.Parse(Automata.Core.Alang.AlangCursor@)
  name: Parse(ref AlangCursor)
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_Parse_Automata_Core_Alang_AlangCursor__
  commentId: M:Automata.Core.Alang.Concatenation.Parse(Automata.Core.Alang.AlangCursor@)
  name.vb: Parse(AlangCursor)
  fullName: Automata.Core.Alang.Concatenation.Parse(ref Automata.Core.Alang.AlangCursor)
  fullName.vb: Automata.Core.Alang.Concatenation.Parse(Automata.Core.Alang.AlangCursor)
  nameWithType: Concatenation.Parse(ref AlangCursor)
  nameWithType.vb: Concatenation.Parse(AlangCursor)
- uid: Automata.Core.Alang.Concatenation.Parse*
  name: Parse
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_Parse_
  commentId: Overload:Automata.Core.Alang.Concatenation.Parse
  isSpec: "True"
  fullName: Automata.Core.Alang.Concatenation.Parse
  nameWithType: Concatenation.Parse
- uid: Automata.Core.Alang.Concatenation.Precedence
  name: Precedence
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_Precedence
  commentId: P:Automata.Core.Alang.Concatenation.Precedence
  fullName: Automata.Core.Alang.Concatenation.Precedence
  nameWithType: Concatenation.Precedence
- uid: Automata.Core.Alang.Concatenation.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_Precedence_
  commentId: Overload:Automata.Core.Alang.Concatenation.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Concatenation.Precedence
  nameWithType: Concatenation.Precedence
- uid: Automata.Core.Alang.Difference
  name: Difference
  href: Automata.Core.Alang.Difference.html
  commentId: T:Automata.Core.Alang.Difference
  fullName: Automata.Core.Alang.Difference
  nameWithType: Difference
- uid: Automata.Core.Alang.Difference.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name: Difference(AlangExpr, AlangExpr)
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference__ctor_Automata_Core_Alang_AlangExpr_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.Difference.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr, AlangExpr)
  fullName: Automata.Core.Alang.Difference.Difference(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.Difference.New(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  nameWithType: Difference.Difference(AlangExpr, AlangExpr)
  nameWithType.vb: Difference.New(AlangExpr, AlangExpr)
- uid: Automata.Core.Alang.Difference.#ctor*
  name: Difference
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference__ctor_
  commentId: Overload:Automata.Core.Alang.Difference.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Difference.Difference
  fullName.vb: Automata.Core.Alang.Difference.New
  nameWithType: Difference.Difference
  nameWithType.vb: Difference.New
- uid: Automata.Core.Alang.Difference.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_ExpressionString
  commentId: P:Automata.Core.Alang.Difference.ExpressionString
  fullName: Automata.Core.Alang.Difference.ExpressionString
  nameWithType: Difference.ExpressionString
- uid: Automata.Core.Alang.Difference.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_ExpressionString_
  commentId: Overload:Automata.Core.Alang.Difference.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Difference.ExpressionString
  nameWithType: Difference.ExpressionString
- uid: Automata.Core.Alang.Difference.Parse(Automata.Core.Alang.AlangCursor@)
  name: Parse(ref AlangCursor)
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_Parse_Automata_Core_Alang_AlangCursor__
  commentId: M:Automata.Core.Alang.Difference.Parse(Automata.Core.Alang.AlangCursor@)
  name.vb: Parse(AlangCursor)
  fullName: Automata.Core.Alang.Difference.Parse(ref Automata.Core.Alang.AlangCursor)
  fullName.vb: Automata.Core.Alang.Difference.Parse(Automata.Core.Alang.AlangCursor)
  nameWithType: Difference.Parse(ref AlangCursor)
  nameWithType.vb: Difference.Parse(AlangCursor)
- uid: Automata.Core.Alang.Difference.Parse*
  name: Parse
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_Parse_
  commentId: Overload:Automata.Core.Alang.Difference.Parse
  isSpec: "True"
  fullName: Automata.Core.Alang.Difference.Parse
  nameWithType: Difference.Parse
- uid: Automata.Core.Alang.Difference.Precedence
  name: Precedence
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_Precedence
  commentId: P:Automata.Core.Alang.Difference.Precedence
  fullName: Automata.Core.Alang.Difference.Precedence
  nameWithType: Difference.Precedence
- uid: Automata.Core.Alang.Difference.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_Precedence_
  commentId: Overload:Automata.Core.Alang.Difference.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Difference.Precedence
  nameWithType: Difference.Precedence
- uid: Automata.Core.Alang.InfixBinary
  name: InfixBinary
  href: Automata.Core.Alang.InfixBinary.html
  commentId: T:Automata.Core.Alang.InfixBinary
  fullName: Automata.Core.Alang.InfixBinary
  nameWithType: InfixBinary
- uid: Automata.Core.Alang.InfixBinary.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name: InfixBinary(AlangExpr, AlangExpr)
  href: Automata.Core.Alang.InfixBinary.html#Automata_Core_Alang_InfixBinary__ctor_Automata_Core_Alang_AlangExpr_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.InfixBinary.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr, AlangExpr)
  fullName: Automata.Core.Alang.InfixBinary.InfixBinary(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.InfixBinary.New(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  nameWithType: InfixBinary.InfixBinary(AlangExpr, AlangExpr)
  nameWithType.vb: InfixBinary.New(AlangExpr, AlangExpr)
- uid: Automata.Core.Alang.InfixBinary.#ctor*
  name: InfixBinary
  href: Automata.Core.Alang.InfixBinary.html#Automata_Core_Alang_InfixBinary__ctor_
  commentId: Overload:Automata.Core.Alang.InfixBinary.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.InfixBinary.InfixBinary
  fullName.vb: Automata.Core.Alang.InfixBinary.New
  nameWithType: InfixBinary.InfixBinary
  nameWithType.vb: InfixBinary.New
- uid: Automata.Core.Alang.InfixBinary.Left
  name: Left
  href: Automata.Core.Alang.InfixBinary.html#Automata_Core_Alang_InfixBinary_Left
  commentId: P:Automata.Core.Alang.InfixBinary.Left
  fullName: Automata.Core.Alang.InfixBinary.Left
  nameWithType: InfixBinary.Left
- uid: Automata.Core.Alang.InfixBinary.Left*
  name: Left
  href: Automata.Core.Alang.InfixBinary.html#Automata_Core_Alang_InfixBinary_Left_
  commentId: Overload:Automata.Core.Alang.InfixBinary.Left
  isSpec: "True"
  fullName: Automata.Core.Alang.InfixBinary.Left
  nameWithType: InfixBinary.Left
- uid: Automata.Core.Alang.InfixBinary.Right
  name: Right
  href: Automata.Core.Alang.InfixBinary.html#Automata_Core_Alang_InfixBinary_Right
  commentId: P:Automata.Core.Alang.InfixBinary.Right
  fullName: Automata.Core.Alang.InfixBinary.Right
  nameWithType: InfixBinary.Right
- uid: Automata.Core.Alang.InfixBinary.Right*
  name: Right
  href: Automata.Core.Alang.InfixBinary.html#Automata_Core_Alang_InfixBinary_Right_
  commentId: Overload:Automata.Core.Alang.InfixBinary.Right
  isSpec: "True"
  fullName: Automata.Core.Alang.InfixBinary.Right
  nameWithType: InfixBinary.Right
- uid: Automata.Core.Alang.Intersection
  name: Intersection
  href: Automata.Core.Alang.Intersection.html
  commentId: T:Automata.Core.Alang.Intersection
  fullName: Automata.Core.Alang.Intersection
  nameWithType: Intersection
- uid: Automata.Core.Alang.Intersection.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name: Intersection(AlangExpr, AlangExpr)
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection__ctor_Automata_Core_Alang_AlangExpr_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.Intersection.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr, AlangExpr)
  fullName: Automata.Core.Alang.Intersection.Intersection(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.Intersection.New(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  nameWithType: Intersection.Intersection(AlangExpr, AlangExpr)
  nameWithType.vb: Intersection.New(AlangExpr, AlangExpr)
- uid: Automata.Core.Alang.Intersection.#ctor*
  name: Intersection
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection__ctor_
  commentId: Overload:Automata.Core.Alang.Intersection.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Intersection.Intersection
  fullName.vb: Automata.Core.Alang.Intersection.New
  nameWithType: Intersection.Intersection
  nameWithType.vb: Intersection.New
- uid: Automata.Core.Alang.Intersection.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_ExpressionString
  commentId: P:Automata.Core.Alang.Intersection.ExpressionString
  fullName: Automata.Core.Alang.Intersection.ExpressionString
  nameWithType: Intersection.ExpressionString
- uid: Automata.Core.Alang.Intersection.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_ExpressionString_
  commentId: Overload:Automata.Core.Alang.Intersection.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Intersection.ExpressionString
  nameWithType: Intersection.ExpressionString
- uid: Automata.Core.Alang.Intersection.Parse(Automata.Core.Alang.AlangCursor@)
  name: Parse(ref AlangCursor)
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_Parse_Automata_Core_Alang_AlangCursor__
  commentId: M:Automata.Core.Alang.Intersection.Parse(Automata.Core.Alang.AlangCursor@)
  name.vb: Parse(AlangCursor)
  fullName: Automata.Core.Alang.Intersection.Parse(ref Automata.Core.Alang.AlangCursor)
  fullName.vb: Automata.Core.Alang.Intersection.Parse(Automata.Core.Alang.AlangCursor)
  nameWithType: Intersection.Parse(ref AlangCursor)
  nameWithType.vb: Intersection.Parse(AlangCursor)
- uid: Automata.Core.Alang.Intersection.Parse*
  name: Parse
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_Parse_
  commentId: Overload:Automata.Core.Alang.Intersection.Parse
  isSpec: "True"
  fullName: Automata.Core.Alang.Intersection.Parse
  nameWithType: Intersection.Parse
- uid: Automata.Core.Alang.Intersection.Precedence
  name: Precedence
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_Precedence
  commentId: P:Automata.Core.Alang.Intersection.Precedence
  fullName: Automata.Core.Alang.Intersection.Precedence
  nameWithType: Intersection.Precedence
- uid: Automata.Core.Alang.Intersection.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_Precedence_
  commentId: Overload:Automata.Core.Alang.Intersection.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Intersection.Precedence
  nameWithType: Intersection.Precedence
- uid: Automata.Core.Alang.KleenePlus
  name: KleenePlus
  href: Automata.Core.Alang.KleenePlus.html
  commentId: T:Automata.Core.Alang.KleenePlus
  fullName: Automata.Core.Alang.KleenePlus
  nameWithType: KleenePlus
- uid: Automata.Core.Alang.KleenePlus.#ctor(Automata.Core.Alang.AlangExpr)
  name: KleenePlus(AlangExpr)
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus__ctor_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.KleenePlus.#ctor(Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr)
  fullName: Automata.Core.Alang.KleenePlus.KleenePlus(Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.KleenePlus.New(Automata.Core.Alang.AlangExpr)
  nameWithType: KleenePlus.KleenePlus(AlangExpr)
  nameWithType.vb: KleenePlus.New(AlangExpr)
- uid: Automata.Core.Alang.KleenePlus.#ctor*
  name: KleenePlus
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus__ctor_
  commentId: Overload:Automata.Core.Alang.KleenePlus.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.KleenePlus.KleenePlus
  fullName.vb: Automata.Core.Alang.KleenePlus.New
  nameWithType: KleenePlus.KleenePlus
  nameWithType.vb: KleenePlus.New
- uid: Automata.Core.Alang.KleenePlus.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus_ExpressionString
  commentId: P:Automata.Core.Alang.KleenePlus.ExpressionString
  fullName: Automata.Core.Alang.KleenePlus.ExpressionString
  nameWithType: KleenePlus.ExpressionString
- uid: Automata.Core.Alang.KleenePlus.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus_ExpressionString_
  commentId: Overload:Automata.Core.Alang.KleenePlus.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.KleenePlus.ExpressionString
  nameWithType: KleenePlus.ExpressionString
- uid: Automata.Core.Alang.KleenePlus.Precedence
  name: Precedence
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus_Precedence
  commentId: P:Automata.Core.Alang.KleenePlus.Precedence
  fullName: Automata.Core.Alang.KleenePlus.Precedence
  nameWithType: KleenePlus.Precedence
- uid: Automata.Core.Alang.KleenePlus.Precedence*
  name: Precedence
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus_Precedence_
  commentId: Overload:Automata.Core.Alang.KleenePlus.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.KleenePlus.Precedence
  nameWithType: KleenePlus.Precedence
- uid: Automata.Core.Alang.KleeneStar
  name: KleeneStar
  href: Automata.Core.Alang.KleeneStar.html
  commentId: T:Automata.Core.Alang.KleeneStar
  fullName: Automata.Core.Alang.KleeneStar
  nameWithType: KleeneStar
- uid: Automata.Core.Alang.KleeneStar.#ctor(Automata.Core.Alang.AlangExpr)
  name: KleeneStar(AlangExpr)
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar__ctor_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.KleeneStar.#ctor(Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr)
  fullName: Automata.Core.Alang.KleeneStar.KleeneStar(Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.KleeneStar.New(Automata.Core.Alang.AlangExpr)
  nameWithType: KleeneStar.KleeneStar(AlangExpr)
  nameWithType.vb: KleeneStar.New(AlangExpr)
- uid: Automata.Core.Alang.KleeneStar.#ctor*
  name: KleeneStar
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar__ctor_
  commentId: Overload:Automata.Core.Alang.KleeneStar.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.KleeneStar.KleeneStar
  fullName.vb: Automata.Core.Alang.KleeneStar.New
  nameWithType: KleeneStar.KleeneStar
  nameWithType.vb: KleeneStar.New
- uid: Automata.Core.Alang.KleeneStar.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar_ExpressionString
  commentId: P:Automata.Core.Alang.KleeneStar.ExpressionString
  fullName: Automata.Core.Alang.KleeneStar.ExpressionString
  nameWithType: KleeneStar.ExpressionString
- uid: Automata.Core.Alang.KleeneStar.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar_ExpressionString_
  commentId: Overload:Automata.Core.Alang.KleeneStar.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.KleeneStar.ExpressionString
  nameWithType: KleeneStar.ExpressionString
- uid: Automata.Core.Alang.KleeneStar.Precedence
  name: Precedence
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar_Precedence
  commentId: P:Automata.Core.Alang.KleeneStar.Precedence
  fullName: Automata.Core.Alang.KleeneStar.Precedence
  nameWithType: KleeneStar.Precedence
- uid: Automata.Core.Alang.KleeneStar.Precedence*
  name: Precedence
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar_Precedence_
  commentId: Overload:Automata.Core.Alang.KleeneStar.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.KleeneStar.Precedence
  nameWithType: KleeneStar.Precedence
- uid: Automata.Core.Alang.Option
  name: Option
  href: Automata.Core.Alang.Option.html
  commentId: T:Automata.Core.Alang.Option
  fullName: Automata.Core.Alang.Option
  nameWithType: Option
- uid: Automata.Core.Alang.Option.#ctor(Automata.Core.Alang.AlangExpr)
  name: Option(AlangExpr)
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option__ctor_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.Option.#ctor(Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr)
  fullName: Automata.Core.Alang.Option.Option(Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.Option.New(Automata.Core.Alang.AlangExpr)
  nameWithType: Option.Option(AlangExpr)
  nameWithType.vb: Option.New(AlangExpr)
- uid: Automata.Core.Alang.Option.#ctor*
  name: Option
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option__ctor_
  commentId: Overload:Automata.Core.Alang.Option.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Option.Option
  fullName.vb: Automata.Core.Alang.Option.New
  nameWithType: Option.Option
  nameWithType.vb: Option.New
- uid: Automata.Core.Alang.Option.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option_ExpressionString
  commentId: P:Automata.Core.Alang.Option.ExpressionString
  fullName: Automata.Core.Alang.Option.ExpressionString
  nameWithType: Option.ExpressionString
- uid: Automata.Core.Alang.Option.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option_ExpressionString_
  commentId: Overload:Automata.Core.Alang.Option.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Option.ExpressionString
  nameWithType: Option.ExpressionString
- uid: Automata.Core.Alang.Option.Precedence
  name: Precedence
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option_Precedence
  commentId: P:Automata.Core.Alang.Option.Precedence
  fullName: Automata.Core.Alang.Option.Precedence
  nameWithType: Option.Precedence
- uid: Automata.Core.Alang.Option.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option_Precedence_
  commentId: Overload:Automata.Core.Alang.Option.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Option.Precedence
  nameWithType: Option.Precedence
- uid: Automata.Core.Alang.PostfixUnary
  name: PostfixUnary
  href: Automata.Core.Alang.PostfixUnary.html
  commentId: T:Automata.Core.Alang.PostfixUnary
  fullName: Automata.Core.Alang.PostfixUnary
  nameWithType: PostfixUnary
- uid: Automata.Core.Alang.PostfixUnary.#ctor(Automata.Core.Alang.AlangExpr)
  name: PostfixUnary(AlangExpr)
  href: Automata.Core.Alang.PostfixUnary.html#Automata_Core_Alang_PostfixUnary__ctor_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.PostfixUnary.#ctor(Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr)
  fullName: Automata.Core.Alang.PostfixUnary.PostfixUnary(Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.PostfixUnary.New(Automata.Core.Alang.AlangExpr)
  nameWithType: PostfixUnary.PostfixUnary(AlangExpr)
  nameWithType.vb: PostfixUnary.New(AlangExpr)
- uid: Automata.Core.Alang.PostfixUnary.#ctor*
  name: PostfixUnary
  href: Automata.Core.Alang.PostfixUnary.html#Automata_Core_Alang_PostfixUnary__ctor_
  commentId: Overload:Automata.Core.Alang.PostfixUnary.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.PostfixUnary.PostfixUnary
  fullName.vb: Automata.Core.Alang.PostfixUnary.New
  nameWithType: PostfixUnary.PostfixUnary
  nameWithType.vb: PostfixUnary.New
- uid: Automata.Core.Alang.PostfixUnary.Operand
  name: Operand
  href: Automata.Core.Alang.PostfixUnary.html#Automata_Core_Alang_PostfixUnary_Operand
  commentId: P:Automata.Core.Alang.PostfixUnary.Operand
  fullName: Automata.Core.Alang.PostfixUnary.Operand
  nameWithType: PostfixUnary.Operand
- uid: Automata.Core.Alang.PostfixUnary.Operand*
  name: Operand
  href: Automata.Core.Alang.PostfixUnary.html#Automata_Core_Alang_PostfixUnary_Operand_
  commentId: Overload:Automata.Core.Alang.PostfixUnary.Operand
  isSpec: "True"
  fullName: Automata.Core.Alang.PostfixUnary.Operand
  nameWithType: PostfixUnary.Operand
- uid: Automata.Core.Alang.PostfixUnary.ParsePostfix(Automata.Core.Alang.AlangCursor@)
  name: ParsePostfix(ref AlangCursor)
  href: Automata.Core.Alang.PostfixUnary.html#Automata_Core_Alang_PostfixUnary_ParsePostfix_Automata_Core_Alang_AlangCursor__
  commentId: M:Automata.Core.Alang.PostfixUnary.ParsePostfix(Automata.Core.Alang.AlangCursor@)
  name.vb: ParsePostfix(AlangCursor)
  fullName: Automata.Core.Alang.PostfixUnary.ParsePostfix(ref Automata.Core.Alang.AlangCursor)
  fullName.vb: Automata.Core.Alang.PostfixUnary.ParsePostfix(Automata.Core.Alang.AlangCursor)
  nameWithType: PostfixUnary.ParsePostfix(ref AlangCursor)
  nameWithType.vb: PostfixUnary.ParsePostfix(AlangCursor)
- uid: Automata.Core.Alang.PostfixUnary.ParsePostfix*
  name: ParsePostfix
  href: Automata.Core.Alang.PostfixUnary.html#Automata_Core_Alang_PostfixUnary_ParsePostfix_
  commentId: Overload:Automata.Core.Alang.PostfixUnary.ParsePostfix
  isSpec: "True"
  fullName: Automata.Core.Alang.PostfixUnary.ParsePostfix
  nameWithType: PostfixUnary.ParsePostfix
- uid: Automata.Core.Alang.Union
  name: Union
  href: Automata.Core.Alang.Union.html
  commentId: T:Automata.Core.Alang.Union
  fullName: Automata.Core.Alang.Union
  nameWithType: Union
- uid: Automata.Core.Alang.Union.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name: Union(AlangExpr, AlangExpr)
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union__ctor_Automata_Core_Alang_AlangExpr_Automata_Core_Alang_AlangExpr_
  commentId: M:Automata.Core.Alang.Union.#ctor(Automata.Core.Alang.AlangExpr,Automata.Core.Alang.AlangExpr)
  name.vb: New(AlangExpr, AlangExpr)
  fullName: Automata.Core.Alang.Union.Union(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  fullName.vb: Automata.Core.Alang.Union.New(Automata.Core.Alang.AlangExpr, Automata.Core.Alang.AlangExpr)
  nameWithType: Union.Union(AlangExpr, AlangExpr)
  nameWithType.vb: Union.New(AlangExpr, AlangExpr)
- uid: Automata.Core.Alang.Union.#ctor*
  name: Union
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union__ctor_
  commentId: Overload:Automata.Core.Alang.Union.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Union.Union
  fullName.vb: Automata.Core.Alang.Union.New
  nameWithType: Union.Union
  nameWithType.vb: Union.New
- uid: Automata.Core.Alang.Union.ExpressionString
  name: ExpressionString
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_ExpressionString
  commentId: P:Automata.Core.Alang.Union.ExpressionString
  fullName: Automata.Core.Alang.Union.ExpressionString
  nameWithType: Union.ExpressionString
- uid: Automata.Core.Alang.Union.ExpressionString*
  name: ExpressionString
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_ExpressionString_
  commentId: Overload:Automata.Core.Alang.Union.ExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Union.ExpressionString
  nameWithType: Union.ExpressionString
- uid: Automata.Core.Alang.Union.Parse(Automata.Core.Alang.AlangCursor@)
  name: Parse(ref AlangCursor)
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_Parse_Automata_Core_Alang_AlangCursor__
  commentId: M:Automata.Core.Alang.Union.Parse(Automata.Core.Alang.AlangCursor@)
  name.vb: Parse(AlangCursor)
  fullName: Automata.Core.Alang.Union.Parse(ref Automata.Core.Alang.AlangCursor)
  fullName.vb: Automata.Core.Alang.Union.Parse(Automata.Core.Alang.AlangCursor)
  nameWithType: Union.Parse(ref AlangCursor)
  nameWithType.vb: Union.Parse(AlangCursor)
- uid: Automata.Core.Alang.Union.Parse*
  name: Parse
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_Parse_
  commentId: Overload:Automata.Core.Alang.Union.Parse
  isSpec: "True"
  fullName: Automata.Core.Alang.Union.Parse
  nameWithType: Union.Parse
- uid: Automata.Core.Alang.Union.Precedence
  name: Precedence
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_Precedence
  commentId: P:Automata.Core.Alang.Union.Precedence
  fullName: Automata.Core.Alang.Union.Precedence
  nameWithType: Union.Precedence
- uid: Automata.Core.Alang.Union.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_Precedence_
  commentId: Overload:Automata.Core.Alang.Union.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Union.Precedence
  nameWithType: Union.Precedence
- uid: Automata.Core.Alphabets
  name: Automata.Core.Alphabets
  href: Automata.Core.Alphabets.html
  commentId: N:Automata.Core.Alphabets
  fullName: Automata.Core.Alphabets
  nameWithType: Automata.Core.Alphabets
- uid: Automata.Core.Alphabets.CanonicalAlphabet
  name: CanonicalAlphabet
  href: Automata.Core.Alphabets.CanonicalAlphabet.html
  commentId: T:Automata.Core.Alphabets.CanonicalAlphabet
  fullName: Automata.Core.Alphabets.CanonicalAlphabet
  nameWithType: CanonicalAlphabet
- uid: Automata.Core.Alphabets.CanonicalAlphabet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  name: CanonicalAlphabet(IEnumerable<string>)
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet__ctor_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.Alphabets.CanonicalAlphabet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  name.vb: New(IEnumerable(Of String))
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.CanonicalAlphabet(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.New(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: CanonicalAlphabet.CanonicalAlphabet(IEnumerable<string>)
  nameWithType.vb: CanonicalAlphabet.New(IEnumerable(Of String))
- uid: Automata.Core.Alphabets.CanonicalAlphabet.#ctor*
  name: CanonicalAlphabet
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet__ctor_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.CanonicalAlphabet
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.New
  nameWithType: CanonicalAlphabet.CanonicalAlphabet
  nameWithType.vb: CanonicalAlphabet.New
- uid: Automata.Core.Alphabets.CanonicalAlphabet.CanonicalStringComparer
  name: CanonicalStringComparer
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_CanonicalStringComparer
  commentId: P:Automata.Core.Alphabets.CanonicalAlphabet.CanonicalStringComparer
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.CanonicalStringComparer
  nameWithType: CanonicalAlphabet.CanonicalStringComparer
- uid: Automata.Core.Alphabets.CanonicalAlphabet.CanonicalStringComparer*
  name: CanonicalStringComparer
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_CanonicalStringComparer_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.CanonicalStringComparer
  isSpec: "True"
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.CanonicalStringComparer
  nameWithType: CanonicalAlphabet.CanonicalStringComparer
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Count
  name: Count
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Count
  commentId: P:Automata.Core.Alphabets.CanonicalAlphabet.Count
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.Count
  nameWithType: CanonicalAlphabet.Count
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Count*
  name: Count
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Count_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.Count
  isSpec: "True"
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.Count
  nameWithType: CanonicalAlphabet.Count
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Empty
  name: Empty
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Empty
  commentId: P:Automata.Core.Alphabets.CanonicalAlphabet.Empty
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.Empty
  nameWithType: CanonicalAlphabet.Empty
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Empty*
  name: Empty
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Empty_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.Empty
  isSpec: "True"
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.Empty
  nameWithType: CanonicalAlphabet.Empty
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Equals(Automata.Core.Alphabets.CanonicalAlphabet)
  name: Equals(CanonicalAlphabet?)
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Equals_Automata_Core_Alphabets_CanonicalAlphabet_
  commentId: M:Automata.Core.Alphabets.CanonicalAlphabet.Equals(Automata.Core.Alphabets.CanonicalAlphabet)
  name.vb: Equals(CanonicalAlphabet)
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.Equals(Automata.Core.Alphabets.CanonicalAlphabet?)
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.Equals(Automata.Core.Alphabets.CanonicalAlphabet)
  nameWithType: CanonicalAlphabet.Equals(CanonicalAlphabet?)
  nameWithType.vb: CanonicalAlphabet.Equals(CanonicalAlphabet)
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Equals(System.Object)
  name: Equals(object?)
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Equals_System_Object_
  commentId: M:Automata.Core.Alphabets.CanonicalAlphabet.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.Equals(object?)
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.Equals(Object)
  nameWithType: CanonicalAlphabet.Equals(object?)
  nameWithType.vb: CanonicalAlphabet.Equals(Object)
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Equals*
  name: Equals
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Equals_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.Equals
  isSpec: "True"
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.Equals
  nameWithType: CanonicalAlphabet.Equals
- uid: Automata.Core.Alphabets.CanonicalAlphabet.GetHashCode
  name: GetHashCode()
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_GetHashCode
  commentId: M:Automata.Core.Alphabets.CanonicalAlphabet.GetHashCode
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.GetHashCode()
  nameWithType: CanonicalAlphabet.GetHashCode()
- uid: Automata.Core.Alphabets.CanonicalAlphabet.GetHashCode*
  name: GetHashCode
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_GetHashCode_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.GetHashCode
  isSpec: "True"
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.GetHashCode
  nameWithType: CanonicalAlphabet.GetHashCode
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Item(System.Int32)
  name: this[int]
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Item_System_Int32_
  commentId: P:Automata.Core.Alphabets.CanonicalAlphabet.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.this[int]
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.this[](Integer)
  nameWithType: CanonicalAlphabet.this[int]
  nameWithType.vb: CanonicalAlphabet.this[](Integer)
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Item(System.String)
  name: this[string]
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Item_System_String_
  commentId: P:Automata.Core.Alphabets.CanonicalAlphabet.Item(System.String)
  name.vb: this[](String)
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.this[string]
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.this[](String)
  nameWithType: CanonicalAlphabet.this[string]
  nameWithType.vb: CanonicalAlphabet.this[](String)
- uid: Automata.Core.Alphabets.CanonicalAlphabet.Item*
  name: this
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_Item_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.this
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.this[]
  nameWithType: CanonicalAlphabet.this
  nameWithType.vb: CanonicalAlphabet.this[]
- uid: Automata.Core.Alphabets.CanonicalAlphabet.ToString
  name: ToString()
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_ToString
  commentId: M:Automata.Core.Alphabets.CanonicalAlphabet.ToString
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.ToString()
  nameWithType: CanonicalAlphabet.ToString()
- uid: Automata.Core.Alphabets.CanonicalAlphabet.ToString*
  name: ToString
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_ToString_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.ToString
  isSpec: "True"
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.ToString
  nameWithType: CanonicalAlphabet.ToString
- uid: Automata.Core.Alphabets.CanonicalAlphabet.ToStringExpanded
  name: ToStringExpanded()
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_ToStringExpanded
  commentId: M:Automata.Core.Alphabets.CanonicalAlphabet.ToStringExpanded
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.ToStringExpanded()
  nameWithType: CanonicalAlphabet.ToStringExpanded()
- uid: Automata.Core.Alphabets.CanonicalAlphabet.ToStringExpanded*
  name: ToStringExpanded
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_ToStringExpanded_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.ToStringExpanded
  isSpec: "True"
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.ToStringExpanded
  nameWithType: CanonicalAlphabet.ToStringExpanded
- uid: Automata.Core.Alphabets.CanonicalAlphabet.op_Equality(Automata.Core.Alphabets.CanonicalAlphabet,Automata.Core.Alphabets.CanonicalAlphabet)
  name: operator ==(CanonicalAlphabet, CanonicalAlphabet)
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_op_Equality_Automata_Core_Alphabets_CanonicalAlphabet_Automata_Core_Alphabets_CanonicalAlphabet_
  commentId: M:Automata.Core.Alphabets.CanonicalAlphabet.op_Equality(Automata.Core.Alphabets.CanonicalAlphabet,Automata.Core.Alphabets.CanonicalAlphabet)
  name.vb: =(CanonicalAlphabet, CanonicalAlphabet)
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.operator ==(Automata.Core.Alphabets.CanonicalAlphabet, Automata.Core.Alphabets.CanonicalAlphabet)
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.=(Automata.Core.Alphabets.CanonicalAlphabet, Automata.Core.Alphabets.CanonicalAlphabet)
  nameWithType: CanonicalAlphabet.operator ==(CanonicalAlphabet, CanonicalAlphabet)
  nameWithType.vb: CanonicalAlphabet.=(CanonicalAlphabet, CanonicalAlphabet)
- uid: Automata.Core.Alphabets.CanonicalAlphabet.op_Equality*
  name: operator ==
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_op_Equality_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.operator ==
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.=
  nameWithType: CanonicalAlphabet.operator ==
  nameWithType.vb: CanonicalAlphabet.=
- uid: Automata.Core.Alphabets.CanonicalAlphabet.op_Inequality(Automata.Core.Alphabets.CanonicalAlphabet,Automata.Core.Alphabets.CanonicalAlphabet)
  name: operator !=(CanonicalAlphabet, CanonicalAlphabet)
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_op_Inequality_Automata_Core_Alphabets_CanonicalAlphabet_Automata_Core_Alphabets_CanonicalAlphabet_
  commentId: M:Automata.Core.Alphabets.CanonicalAlphabet.op_Inequality(Automata.Core.Alphabets.CanonicalAlphabet,Automata.Core.Alphabets.CanonicalAlphabet)
  name.vb: <>(CanonicalAlphabet, CanonicalAlphabet)
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.operator !=(Automata.Core.Alphabets.CanonicalAlphabet, Automata.Core.Alphabets.CanonicalAlphabet)
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.<>(Automata.Core.Alphabets.CanonicalAlphabet, Automata.Core.Alphabets.CanonicalAlphabet)
  nameWithType: CanonicalAlphabet.operator !=(CanonicalAlphabet, CanonicalAlphabet)
  nameWithType.vb: CanonicalAlphabet.<>(CanonicalAlphabet, CanonicalAlphabet)
- uid: Automata.Core.Alphabets.CanonicalAlphabet.op_Inequality*
  name: operator !=
  href: Automata.Core.Alphabets.CanonicalAlphabet.html#Automata_Core_Alphabets_CanonicalAlphabet_op_Inequality_
  commentId: Overload:Automata.Core.Alphabets.CanonicalAlphabet.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Automata.Core.Alphabets.CanonicalAlphabet.operator !=
  fullName.vb: Automata.Core.Alphabets.CanonicalAlphabet.<>
  nameWithType: CanonicalAlphabet.operator !=
  nameWithType.vb: CanonicalAlphabet.<>
- uid: Automata.Core.Alphabets.IAlphabet
  name: IAlphabet
  href: Automata.Core.Alphabets.IAlphabet.html
  commentId: T:Automata.Core.Alphabets.IAlphabet
  fullName: Automata.Core.Alphabets.IAlphabet
  nameWithType: IAlphabet
- uid: Automata.Core.Alphabets.IAlphabet.Count
  name: Count
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_Count
  commentId: P:Automata.Core.Alphabets.IAlphabet.Count
  fullName: Automata.Core.Alphabets.IAlphabet.Count
  nameWithType: IAlphabet.Count
- uid: Automata.Core.Alphabets.IAlphabet.Count*
  name: Count
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_Count_
  commentId: Overload:Automata.Core.Alphabets.IAlphabet.Count
  isSpec: "True"
  fullName: Automata.Core.Alphabets.IAlphabet.Count
  nameWithType: IAlphabet.Count
- uid: Automata.Core.Alphabets.IAlphabet.Item(System.Int32)
  name: this[int]
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_Item_System_Int32_
  commentId: P:Automata.Core.Alphabets.IAlphabet.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Automata.Core.Alphabets.IAlphabet.this[int]
  fullName.vb: Automata.Core.Alphabets.IAlphabet.this[](Integer)
  nameWithType: IAlphabet.this[int]
  nameWithType.vb: IAlphabet.this[](Integer)
- uid: Automata.Core.Alphabets.IAlphabet.Item(System.String)
  name: this[string]
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_Item_System_String_
  commentId: P:Automata.Core.Alphabets.IAlphabet.Item(System.String)
  name.vb: this[](String)
  fullName: Automata.Core.Alphabets.IAlphabet.this[string]
  fullName.vb: Automata.Core.Alphabets.IAlphabet.this[](String)
  nameWithType: IAlphabet.this[string]
  nameWithType.vb: IAlphabet.this[](String)
- uid: Automata.Core.Alphabets.IAlphabet.Item*
  name: this
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_Item_
  commentId: Overload:Automata.Core.Alphabets.IAlphabet.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Automata.Core.Alphabets.IAlphabet.this
  fullName.vb: Automata.Core.Alphabets.IAlphabet.this[]
  nameWithType: IAlphabet.this
  nameWithType.vb: IAlphabet.this[]
- uid: Automata.Core.Alphabets.IAlphabet.ToString
  name: ToString()
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_ToString
  commentId: M:Automata.Core.Alphabets.IAlphabet.ToString
  fullName: Automata.Core.Alphabets.IAlphabet.ToString()
  nameWithType: IAlphabet.ToString()
- uid: Automata.Core.Alphabets.IAlphabet.ToString*
  name: ToString
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_ToString_
  commentId: Overload:Automata.Core.Alphabets.IAlphabet.ToString
  isSpec: "True"
  fullName: Automata.Core.Alphabets.IAlphabet.ToString
  nameWithType: IAlphabet.ToString
- uid: Automata.Core.Alphabets.IAlphabet.ToStringExpanded
  name: ToStringExpanded()
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_ToStringExpanded
  commentId: M:Automata.Core.Alphabets.IAlphabet.ToStringExpanded
  fullName: Automata.Core.Alphabets.IAlphabet.ToStringExpanded()
  nameWithType: IAlphabet.ToStringExpanded()
- uid: Automata.Core.Alphabets.IAlphabet.ToStringExpanded*
  name: ToStringExpanded
  href: Automata.Core.Alphabets.IAlphabet.html#Automata_Core_Alphabets_IAlphabet_ToStringExpanded_
  commentId: Overload:Automata.Core.Alphabets.IAlphabet.ToStringExpanded
  isSpec: "True"
  fullName: Automata.Core.Alphabets.IAlphabet.ToStringExpanded
  nameWithType: IAlphabet.ToStringExpanded
- uid: Automata.Core.Alphabets.MutableAlphabet
  name: MutableAlphabet
  href: Automata.Core.Alphabets.MutableAlphabet.html
  commentId: T:Automata.Core.Alphabets.MutableAlphabet
  fullName: Automata.Core.Alphabets.MutableAlphabet
  nameWithType: MutableAlphabet
- uid: Automata.Core.Alphabets.MutableAlphabet.#ctor
  name: MutableAlphabet()
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet__ctor
  commentId: M:Automata.Core.Alphabets.MutableAlphabet.#ctor
  name.vb: New()
  fullName: Automata.Core.Alphabets.MutableAlphabet.MutableAlphabet()
  fullName.vb: Automata.Core.Alphabets.MutableAlphabet.New()
  nameWithType: MutableAlphabet.MutableAlphabet()
  nameWithType.vb: MutableAlphabet.New()
- uid: Automata.Core.Alphabets.MutableAlphabet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  name: MutableAlphabet(IEnumerable<string>)
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet__ctor_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.Alphabets.MutableAlphabet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  name.vb: New(IEnumerable(Of String))
  fullName: Automata.Core.Alphabets.MutableAlphabet.MutableAlphabet(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.Alphabets.MutableAlphabet.New(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: MutableAlphabet.MutableAlphabet(IEnumerable<string>)
  nameWithType.vb: MutableAlphabet.New(IEnumerable(Of String))
- uid: Automata.Core.Alphabets.MutableAlphabet.#ctor*
  name: MutableAlphabet
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet__ctor_
  commentId: Overload:Automata.Core.Alphabets.MutableAlphabet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alphabets.MutableAlphabet.MutableAlphabet
  fullName.vb: Automata.Core.Alphabets.MutableAlphabet.New
  nameWithType: MutableAlphabet.MutableAlphabet
  nameWithType.vb: MutableAlphabet.New
- uid: Automata.Core.Alphabets.MutableAlphabet.AddAll(System.Collections.Generic.IEnumerable{System.String})
  name: AddAll(IEnumerable<string>)
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_AddAll_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.Alphabets.MutableAlphabet.AddAll(System.Collections.Generic.IEnumerable{System.String})
  name.vb: AddAll(IEnumerable(Of String))
  fullName: Automata.Core.Alphabets.MutableAlphabet.AddAll(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.Alphabets.MutableAlphabet.AddAll(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: MutableAlphabet.AddAll(IEnumerable<string>)
  nameWithType.vb: MutableAlphabet.AddAll(IEnumerable(Of String))
- uid: Automata.Core.Alphabets.MutableAlphabet.AddAll*
  name: AddAll
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_AddAll_
  commentId: Overload:Automata.Core.Alphabets.MutableAlphabet.AddAll
  isSpec: "True"
  fullName: Automata.Core.Alphabets.MutableAlphabet.AddAll
  nameWithType: MutableAlphabet.AddAll
- uid: Automata.Core.Alphabets.MutableAlphabet.Count
  name: Count
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_Count
  commentId: P:Automata.Core.Alphabets.MutableAlphabet.Count
  fullName: Automata.Core.Alphabets.MutableAlphabet.Count
  nameWithType: MutableAlphabet.Count
- uid: Automata.Core.Alphabets.MutableAlphabet.Count*
  name: Count
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_Count_
  commentId: Overload:Automata.Core.Alphabets.MutableAlphabet.Count
  isSpec: "True"
  fullName: Automata.Core.Alphabets.MutableAlphabet.Count
  nameWithType: MutableAlphabet.Count
- uid: Automata.Core.Alphabets.MutableAlphabet.GetOrAdd(System.String)
  name: GetOrAdd(string)
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_GetOrAdd_System_String_
  commentId: M:Automata.Core.Alphabets.MutableAlphabet.GetOrAdd(System.String)
  name.vb: GetOrAdd(String)
  fullName: Automata.Core.Alphabets.MutableAlphabet.GetOrAdd(string)
  fullName.vb: Automata.Core.Alphabets.MutableAlphabet.GetOrAdd(String)
  nameWithType: MutableAlphabet.GetOrAdd(string)
  nameWithType.vb: MutableAlphabet.GetOrAdd(String)
- uid: Automata.Core.Alphabets.MutableAlphabet.GetOrAdd*
  name: GetOrAdd
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_GetOrAdd_
  commentId: Overload:Automata.Core.Alphabets.MutableAlphabet.GetOrAdd
  isSpec: "True"
  fullName: Automata.Core.Alphabets.MutableAlphabet.GetOrAdd
  nameWithType: MutableAlphabet.GetOrAdd
- uid: Automata.Core.Alphabets.MutableAlphabet.Item(System.Int32)
  name: this[int]
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_Item_System_Int32_
  commentId: P:Automata.Core.Alphabets.MutableAlphabet.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Automata.Core.Alphabets.MutableAlphabet.this[int]
  fullName.vb: Automata.Core.Alphabets.MutableAlphabet.this[](Integer)
  nameWithType: MutableAlphabet.this[int]
  nameWithType.vb: MutableAlphabet.this[](Integer)
- uid: Automata.Core.Alphabets.MutableAlphabet.Item(System.String)
  name: this[string]
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_Item_System_String_
  commentId: P:Automata.Core.Alphabets.MutableAlphabet.Item(System.String)
  name.vb: this[](String)
  fullName: Automata.Core.Alphabets.MutableAlphabet.this[string]
  fullName.vb: Automata.Core.Alphabets.MutableAlphabet.this[](String)
  nameWithType: MutableAlphabet.this[string]
  nameWithType.vb: MutableAlphabet.this[](String)
- uid: Automata.Core.Alphabets.MutableAlphabet.Item*
  name: this
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_Item_
  commentId: Overload:Automata.Core.Alphabets.MutableAlphabet.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Automata.Core.Alphabets.MutableAlphabet.this
  fullName.vb: Automata.Core.Alphabets.MutableAlphabet.this[]
  nameWithType: MutableAlphabet.this
  nameWithType.vb: MutableAlphabet.this[]
- uid: Automata.Core.Alphabets.MutableAlphabet.ToString
  name: ToString()
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_ToString
  commentId: M:Automata.Core.Alphabets.MutableAlphabet.ToString
  fullName: Automata.Core.Alphabets.MutableAlphabet.ToString()
  nameWithType: MutableAlphabet.ToString()
- uid: Automata.Core.Alphabets.MutableAlphabet.ToString*
  name: ToString
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_ToString_
  commentId: Overload:Automata.Core.Alphabets.MutableAlphabet.ToString
  isSpec: "True"
  fullName: Automata.Core.Alphabets.MutableAlphabet.ToString
  nameWithType: MutableAlphabet.ToString
- uid: Automata.Core.Alphabets.MutableAlphabet.ToStringExpanded
  name: ToStringExpanded()
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_ToStringExpanded
  commentId: M:Automata.Core.Alphabets.MutableAlphabet.ToStringExpanded
  fullName: Automata.Core.Alphabets.MutableAlphabet.ToStringExpanded()
  nameWithType: MutableAlphabet.ToStringExpanded()
- uid: Automata.Core.Alphabets.MutableAlphabet.ToStringExpanded*
  name: ToStringExpanded
  href: Automata.Core.Alphabets.MutableAlphabet.html#Automata_Core_Alphabets_MutableAlphabet_ToStringExpanded_
  commentId: Overload:Automata.Core.Alphabets.MutableAlphabet.ToStringExpanded
  isSpec: "True"
  fullName: Automata.Core.Alphabets.MutableAlphabet.ToStringExpanded
  nameWithType: MutableAlphabet.ToStringExpanded
- uid: Automata.Core.Cfa
  name: Cfa
  href: Automata.Core.Cfa.html
  commentId: T:Automata.Core.Cfa
  fullName: Automata.Core.Cfa
  nameWithType: Cfa
- uid: Automata.Core.Cfa.#ctor(Automata.Core.IFsa)
  name: Cfa(IFsa)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa__ctor_Automata_Core_IFsa_
  commentId: M:Automata.Core.Cfa.#ctor(Automata.Core.IFsa)
  name.vb: New(IFsa)
  fullName: Automata.Core.Cfa.Cfa(Automata.Core.IFsa)
  fullName.vb: Automata.Core.Cfa.New(Automata.Core.IFsa)
  nameWithType: Cfa.Cfa(IFsa)
  nameWithType.vb: Cfa.New(IFsa)
- uid: Automata.Core.Cfa.#ctor*
  name: Cfa
  href: Automata.Core.Cfa.html#Automata_Core_Cfa__ctor_
  commentId: Overload:Automata.Core.Cfa.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Cfa.Cfa
  fullName.vb: Automata.Core.Cfa.New
  nameWithType: Cfa.Cfa
  nameWithType.vb: Cfa.New
- uid: Automata.Core.Cfa.Alphabet
  name: Alphabet
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_Alphabet
  commentId: P:Automata.Core.Cfa.Alphabet
  fullName: Automata.Core.Cfa.Alphabet
  nameWithType: Cfa.Alphabet
- uid: Automata.Core.Cfa.Alphabet*
  name: Alphabet
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_Alphabet_
  commentId: Overload:Automata.Core.Cfa.Alphabet
  isSpec: "True"
  fullName: Automata.Core.Cfa.Alphabet
  nameWithType: Cfa.Alphabet
- uid: Automata.Core.Cfa.EpsilonTransitions
  name: EpsilonTransitions()
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_EpsilonTransitions
  commentId: M:Automata.Core.Cfa.EpsilonTransitions
  fullName: Automata.Core.Cfa.EpsilonTransitions()
  nameWithType: Cfa.EpsilonTransitions()
- uid: Automata.Core.Cfa.EpsilonTransitions*
  name: EpsilonTransitions
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_EpsilonTransitions_
  commentId: Overload:Automata.Core.Cfa.EpsilonTransitions
  isSpec: "True"
  fullName: Automata.Core.Cfa.EpsilonTransitions
  nameWithType: Cfa.EpsilonTransitions
- uid: Automata.Core.Cfa.Equals(Automata.Core.Cfa)
  name: Equals(Cfa?)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_Equals_Automata_Core_Cfa_
  commentId: M:Automata.Core.Cfa.Equals(Automata.Core.Cfa)
  name.vb: Equals(Cfa)
  fullName: Automata.Core.Cfa.Equals(Automata.Core.Cfa?)
  fullName.vb: Automata.Core.Cfa.Equals(Automata.Core.Cfa)
  nameWithType: Cfa.Equals(Cfa?)
  nameWithType.vb: Cfa.Equals(Cfa)
- uid: Automata.Core.Cfa.Equals(System.Object)
  name: Equals(object?)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_Equals_System_Object_
  commentId: M:Automata.Core.Cfa.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Automata.Core.Cfa.Equals(object?)
  fullName.vb: Automata.Core.Cfa.Equals(Object)
  nameWithType: Cfa.Equals(object?)
  nameWithType.vb: Cfa.Equals(Object)
- uid: Automata.Core.Cfa.Equals*
  name: Equals
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_Equals_
  commentId: Overload:Automata.Core.Cfa.Equals
  isSpec: "True"
  fullName: Automata.Core.Cfa.Equals
  nameWithType: Cfa.Equals
- uid: Automata.Core.Cfa.FinalStates
  name: FinalStates
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_FinalStates
  commentId: F:Automata.Core.Cfa.FinalStates
  fullName: Automata.Core.Cfa.FinalStates
  nameWithType: Cfa.FinalStates
- uid: Automata.Core.Cfa.GetEnumerator
  name: GetEnumerator()
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_GetEnumerator
  commentId: M:Automata.Core.Cfa.GetEnumerator
  fullName: Automata.Core.Cfa.GetEnumerator()
  nameWithType: Cfa.GetEnumerator()
- uid: Automata.Core.Cfa.GetEnumerator*
  name: GetEnumerator
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_GetEnumerator_
  commentId: Overload:Automata.Core.Cfa.GetEnumerator
  isSpec: "True"
  fullName: Automata.Core.Cfa.GetEnumerator
  nameWithType: Cfa.GetEnumerator
- uid: Automata.Core.Cfa.GetHashCode
  name: GetHashCode()
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_GetHashCode
  commentId: M:Automata.Core.Cfa.GetHashCode
  fullName: Automata.Core.Cfa.GetHashCode()
  nameWithType: Cfa.GetHashCode()
- uid: Automata.Core.Cfa.GetHashCode*
  name: GetHashCode
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_GetHashCode_
  commentId: Overload:Automata.Core.Cfa.GetHashCode
  isSpec: "True"
  fullName: Automata.Core.Cfa.GetHashCode
  nameWithType: Cfa.GetHashCode
- uid: Automata.Core.Cfa.InitialState
  name: InitialState
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_InitialState
  commentId: P:Automata.Core.Cfa.InitialState
  fullName: Automata.Core.Cfa.InitialState
  nameWithType: Cfa.InitialState
- uid: Automata.Core.Cfa.InitialState*
  name: InitialState
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_InitialState_
  commentId: Overload:Automata.Core.Cfa.InitialState
  isSpec: "True"
  fullName: Automata.Core.Cfa.InitialState
  nameWithType: Cfa.InitialState
- uid: Automata.Core.Cfa.IsEmpty
  name: IsEmpty
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_IsEmpty
  commentId: P:Automata.Core.Cfa.IsEmpty
  fullName: Automata.Core.Cfa.IsEmpty
  nameWithType: Cfa.IsEmpty
- uid: Automata.Core.Cfa.IsEmpty*
  name: IsEmpty
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_IsEmpty_
  commentId: Overload:Automata.Core.Cfa.IsEmpty
  isSpec: "True"
  fullName: Automata.Core.Cfa.IsEmpty
  nameWithType: Cfa.IsEmpty
- uid: Automata.Core.Cfa.IsEpsilonFree
  name: IsEpsilonFree
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_IsEpsilonFree
  commentId: P:Automata.Core.Cfa.IsEpsilonFree
  fullName: Automata.Core.Cfa.IsEpsilonFree
  nameWithType: Cfa.IsEpsilonFree
- uid: Automata.Core.Cfa.IsEpsilonFree*
  name: IsEpsilonFree
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_IsEpsilonFree_
  commentId: Overload:Automata.Core.Cfa.IsEpsilonFree
  isSpec: "True"
  fullName: Automata.Core.Cfa.IsEpsilonFree
  nameWithType: Cfa.IsEpsilonFree
- uid: Automata.Core.Cfa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_IsFinal_System_Int32_
  commentId: M:Automata.Core.Cfa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.Cfa.IsFinal(int)
  fullName.vb: Automata.Core.Cfa.IsFinal(Integer)
  nameWithType: Cfa.IsFinal(int)
  nameWithType.vb: Cfa.IsFinal(Integer)
- uid: Automata.Core.Cfa.IsFinal*
  name: IsFinal
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_IsFinal_
  commentId: Overload:Automata.Core.Cfa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.Cfa.IsFinal
  nameWithType: Cfa.IsFinal
- uid: Automata.Core.Cfa.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_IsInitial_System_Int32_
  commentId: M:Automata.Core.Cfa.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.Cfa.IsInitial(int)
  fullName.vb: Automata.Core.Cfa.IsInitial(Integer)
  nameWithType: Cfa.IsInitial(int)
  nameWithType.vb: Cfa.IsInitial(Integer)
- uid: Automata.Core.Cfa.IsInitial*
  name: IsInitial
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_IsInitial_
  commentId: Overload:Automata.Core.Cfa.IsInitial
  isSpec: "True"
  fullName: Automata.Core.Cfa.IsInitial
  nameWithType: Cfa.IsInitial
- uid: Automata.Core.Cfa.State(System.Int32)
  name: State(int)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_State_System_Int32_
  commentId: M:Automata.Core.Cfa.State(System.Int32)
  name.vb: State(Integer)
  fullName: Automata.Core.Cfa.State(int)
  fullName.vb: Automata.Core.Cfa.State(Integer)
  nameWithType: Cfa.State(int)
  nameWithType.vb: Cfa.State(Integer)
- uid: Automata.Core.Cfa.State*
  name: State
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_State_
  commentId: Overload:Automata.Core.Cfa.State
  isSpec: "True"
  fullName: Automata.Core.Cfa.State
  nameWithType: Cfa.State
- uid: Automata.Core.Cfa.StateCount
  name: StateCount
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_StateCount
  commentId: F:Automata.Core.Cfa.StateCount
  fullName: Automata.Core.Cfa.StateCount
  nameWithType: Cfa.StateCount
- uid: Automata.Core.Cfa.SymbolicTransitions
  name: SymbolicTransitions()
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_SymbolicTransitions
  commentId: M:Automata.Core.Cfa.SymbolicTransitions
  fullName: Automata.Core.Cfa.SymbolicTransitions()
  nameWithType: Cfa.SymbolicTransitions()
- uid: Automata.Core.Cfa.SymbolicTransitions*
  name: SymbolicTransitions
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_SymbolicTransitions_
  commentId: Overload:Automata.Core.Cfa.SymbolicTransitions
  isSpec: "True"
  fullName: Automata.Core.Cfa.SymbolicTransitions
  nameWithType: Cfa.SymbolicTransitions
- uid: Automata.Core.Cfa.Transition(System.Int32,System.Int32)
  name: Transition(int, int)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_Transition_System_Int32_System_Int32_
  commentId: M:Automata.Core.Cfa.Transition(System.Int32,System.Int32)
  name.vb: Transition(Integer, Integer)
  fullName: Automata.Core.Cfa.Transition(int, int)
  fullName.vb: Automata.Core.Cfa.Transition(Integer, Integer)
  nameWithType: Cfa.Transition(int, int)
  nameWithType.vb: Cfa.Transition(Integer, Integer)
- uid: Automata.Core.Cfa.Transition*
  name: Transition
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_Transition_
  commentId: Overload:Automata.Core.Cfa.Transition
  isSpec: "True"
  fullName: Automata.Core.Cfa.Transition
  nameWithType: Cfa.Transition
- uid: Automata.Core.Cfa.TransitionCount
  name: TransitionCount
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_TransitionCount
  commentId: P:Automata.Core.Cfa.TransitionCount
  fullName: Automata.Core.Cfa.TransitionCount
  nameWithType: Cfa.TransitionCount
- uid: Automata.Core.Cfa.TransitionCount*
  name: TransitionCount
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_TransitionCount_
  commentId: Overload:Automata.Core.Cfa.TransitionCount
  isSpec: "True"
  fullName: Automata.Core.Cfa.TransitionCount
  nameWithType: Cfa.TransitionCount
- uid: Automata.Core.Cfa.op_Equality(Automata.Core.Cfa,Automata.Core.Cfa)
  name: operator ==(Cfa, Cfa)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_op_Equality_Automata_Core_Cfa_Automata_Core_Cfa_
  commentId: M:Automata.Core.Cfa.op_Equality(Automata.Core.Cfa,Automata.Core.Cfa)
  name.vb: =(Cfa, Cfa)
  fullName: Automata.Core.Cfa.operator ==(Automata.Core.Cfa, Automata.Core.Cfa)
  fullName.vb: Automata.Core.Cfa.=(Automata.Core.Cfa, Automata.Core.Cfa)
  nameWithType: Cfa.operator ==(Cfa, Cfa)
  nameWithType.vb: Cfa.=(Cfa, Cfa)
- uid: Automata.Core.Cfa.op_Equality*
  name: operator ==
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_op_Equality_
  commentId: Overload:Automata.Core.Cfa.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Automata.Core.Cfa.operator ==
  fullName.vb: Automata.Core.Cfa.=
  nameWithType: Cfa.operator ==
  nameWithType.vb: Cfa.=
- uid: Automata.Core.Cfa.op_Inequality(Automata.Core.Cfa,Automata.Core.Cfa)
  name: operator !=(Cfa, Cfa)
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_op_Inequality_Automata_Core_Cfa_Automata_Core_Cfa_
  commentId: M:Automata.Core.Cfa.op_Inequality(Automata.Core.Cfa,Automata.Core.Cfa)
  name.vb: <>(Cfa, Cfa)
  fullName: Automata.Core.Cfa.operator !=(Automata.Core.Cfa, Automata.Core.Cfa)
  fullName.vb: Automata.Core.Cfa.<>(Automata.Core.Cfa, Automata.Core.Cfa)
  nameWithType: Cfa.operator !=(Cfa, Cfa)
  nameWithType.vb: Cfa.<>(Cfa, Cfa)
- uid: Automata.Core.Cfa.op_Inequality*
  name: operator !=
  href: Automata.Core.Cfa.html#Automata_Core_Cfa_op_Inequality_
  commentId: Overload:Automata.Core.Cfa.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Automata.Core.Cfa.operator !=
  fullName.vb: Automata.Core.Cfa.<>
  nameWithType: Cfa.operator !=
  nameWithType.vb: Cfa.<>
- uid: Automata.Core.Constants
  name: Constants
  href: Automata.Core.Constants.html
  commentId: T:Automata.Core.Constants
  fullName: Automata.Core.Constants
  nameWithType: Constants
- uid: Automata.Core.Constants.InvalidState
  name: InvalidState
  href: Automata.Core.Constants.html#Automata_Core_Constants_InvalidState
  commentId: F:Automata.Core.Constants.InvalidState
  fullName: Automata.Core.Constants.InvalidState
  nameWithType: Constants.InvalidState
- uid: Automata.Core.Constants.InvalidSymbolIndex
  name: InvalidSymbolIndex
  href: Automata.Core.Constants.html#Automata_Core_Constants_InvalidSymbolIndex
  commentId: F:Automata.Core.Constants.InvalidSymbolIndex
  fullName: Automata.Core.Constants.InvalidSymbolIndex
  nameWithType: Constants.InvalidSymbolIndex
- uid: Automata.Core.Dfa
  name: Dfa
  href: Automata.Core.Dfa.html
  commentId: T:Automata.Core.Dfa
  fullName: Automata.Core.Dfa
  nameWithType: Dfa
- uid: Automata.Core.Dfa.#ctor
  name: Dfa()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa__ctor
  commentId: M:Automata.Core.Dfa.#ctor
  name.vb: New()
  fullName: Automata.Core.Dfa.Dfa()
  fullName.vb: Automata.Core.Dfa.New()
  nameWithType: Dfa.Dfa()
  nameWithType.vb: Dfa.New()
- uid: Automata.Core.Dfa.#ctor(Automata.Core.Alphabets.MutableAlphabet)
  name: Dfa(MutableAlphabet)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa__ctor_Automata_Core_Alphabets_MutableAlphabet_
  commentId: M:Automata.Core.Dfa.#ctor(Automata.Core.Alphabets.MutableAlphabet)
  name.vb: New(MutableAlphabet)
  fullName: Automata.Core.Dfa.Dfa(Automata.Core.Alphabets.MutableAlphabet)
  fullName.vb: Automata.Core.Dfa.New(Automata.Core.Alphabets.MutableAlphabet)
  nameWithType: Dfa.Dfa(MutableAlphabet)
  nameWithType.vb: Dfa.New(MutableAlphabet)
- uid: Automata.Core.Dfa.#ctor*
  name: Dfa
  href: Automata.Core.Dfa.html#Automata_Core_Dfa__ctor_
  commentId: Overload:Automata.Core.Dfa.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Dfa.Dfa
  fullName.vb: Automata.Core.Dfa.New
  nameWithType: Dfa.Dfa
  nameWithType.vb: Dfa.New
- uid: Automata.Core.Dfa.Accepts(System.Collections.Generic.IEnumerable{System.String})
  name: Accepts(IEnumerable<string>)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Accepts_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.Dfa.Accepts(System.Collections.Generic.IEnumerable{System.String})
  name.vb: Accepts(IEnumerable(Of String))
  fullName: Automata.Core.Dfa.Accepts(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.Dfa.Accepts(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: Dfa.Accepts(IEnumerable<string>)
  nameWithType.vb: Dfa.Accepts(IEnumerable(Of String))
- uid: Automata.Core.Dfa.Accepts*
  name: Accepts
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Accepts_
  commentId: Overload:Automata.Core.Dfa.Accepts
  isSpec: "True"
  fullName: Automata.Core.Dfa.Accepts
  nameWithType: Dfa.Accepts
- uid: Automata.Core.Dfa.Add(Automata.Core.Transition)
  name: Add(Transition)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Add_Automata_Core_Transition_
  commentId: M:Automata.Core.Dfa.Add(Automata.Core.Transition)
  fullName: Automata.Core.Dfa.Add(Automata.Core.Transition)
  nameWithType: Dfa.Add(Transition)
- uid: Automata.Core.Dfa.Add*
  name: Add
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Add_
  commentId: Overload:Automata.Core.Dfa.Add
  isSpec: "True"
  fullName: Automata.Core.Dfa.Add
  nameWithType: Dfa.Add
- uid: Automata.Core.Dfa.Alphabet
  name: Alphabet
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Alphabet
  commentId: P:Automata.Core.Dfa.Alphabet
  fullName: Automata.Core.Dfa.Alphabet
  nameWithType: Dfa.Alphabet
- uid: Automata.Core.Dfa.Alphabet*
  name: Alphabet
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Alphabet_
  commentId: Overload:Automata.Core.Dfa.Alphabet
  isSpec: "True"
  fullName: Automata.Core.Dfa.Alphabet
  nameWithType: Dfa.Alphabet
- uid: Automata.Core.Dfa.EpsilonTransitions
  name: EpsilonTransitions()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_EpsilonTransitions
  commentId: M:Automata.Core.Dfa.EpsilonTransitions
  fullName: Automata.Core.Dfa.EpsilonTransitions()
  nameWithType: Dfa.EpsilonTransitions()
- uid: Automata.Core.Dfa.EpsilonTransitions*
  name: EpsilonTransitions
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_EpsilonTransitions_
  commentId: Overload:Automata.Core.Dfa.EpsilonTransitions
  isSpec: "True"
  fullName: Automata.Core.Dfa.EpsilonTransitions
  nameWithType: Dfa.EpsilonTransitions
- uid: Automata.Core.Dfa.FinalStates
  name: FinalStates
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_FinalStates
  commentId: P:Automata.Core.Dfa.FinalStates
  fullName: Automata.Core.Dfa.FinalStates
  nameWithType: Dfa.FinalStates
- uid: Automata.Core.Dfa.FinalStates*
  name: FinalStates
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_FinalStates_
  commentId: Overload:Automata.Core.Dfa.FinalStates
  isSpec: "True"
  fullName: Automata.Core.Dfa.FinalStates
  nameWithType: Dfa.FinalStates
- uid: Automata.Core.Dfa.InitialState
  name: InitialState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_InitialState
  commentId: P:Automata.Core.Dfa.InitialState
  fullName: Automata.Core.Dfa.InitialState
  nameWithType: Dfa.InitialState
- uid: Automata.Core.Dfa.InitialState*
  name: InitialState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_InitialState_
  commentId: Overload:Automata.Core.Dfa.InitialState
  isSpec: "True"
  fullName: Automata.Core.Dfa.InitialState
  nameWithType: Dfa.InitialState
- uid: Automata.Core.Dfa.IsEmpty
  name: IsEmpty
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsEmpty
  commentId: P:Automata.Core.Dfa.IsEmpty
  fullName: Automata.Core.Dfa.IsEmpty
  nameWithType: Dfa.IsEmpty
- uid: Automata.Core.Dfa.IsEmpty*
  name: IsEmpty
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsEmpty_
  commentId: Overload:Automata.Core.Dfa.IsEmpty
  isSpec: "True"
  fullName: Automata.Core.Dfa.IsEmpty
  nameWithType: Dfa.IsEmpty
- uid: Automata.Core.Dfa.IsEpsilonFree
  name: IsEpsilonFree
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsEpsilonFree
  commentId: P:Automata.Core.Dfa.IsEpsilonFree
  fullName: Automata.Core.Dfa.IsEpsilonFree
  nameWithType: Dfa.IsEpsilonFree
- uid: Automata.Core.Dfa.IsEpsilonFree*
  name: IsEpsilonFree
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsEpsilonFree_
  commentId: Overload:Automata.Core.Dfa.IsEpsilonFree
  isSpec: "True"
  fullName: Automata.Core.Dfa.IsEpsilonFree
  nameWithType: Dfa.IsEpsilonFree
- uid: Automata.Core.Dfa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsFinal_System_Int32_
  commentId: M:Automata.Core.Dfa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.Dfa.IsFinal(int)
  fullName.vb: Automata.Core.Dfa.IsFinal(Integer)
  nameWithType: Dfa.IsFinal(int)
  nameWithType.vb: Dfa.IsFinal(Integer)
- uid: Automata.Core.Dfa.IsFinal*
  name: IsFinal
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsFinal_
  commentId: Overload:Automata.Core.Dfa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.Dfa.IsFinal
  nameWithType: Dfa.IsFinal
- uid: Automata.Core.Dfa.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsInitial_System_Int32_
  commentId: M:Automata.Core.Dfa.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.Dfa.IsInitial(int)
  fullName.vb: Automata.Core.Dfa.IsInitial(Integer)
  nameWithType: Dfa.IsInitial(int)
  nameWithType.vb: Dfa.IsInitial(Integer)
- uid: Automata.Core.Dfa.IsInitial*
  name: IsInitial
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsInitial_
  commentId: Overload:Automata.Core.Dfa.IsInitial
  isSpec: "True"
  fullName: Automata.Core.Dfa.IsInitial
  nameWithType: Dfa.IsInitial
- uid: Automata.Core.Dfa.MaxState
  name: MaxState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_MaxState
  commentId: P:Automata.Core.Dfa.MaxState
  fullName: Automata.Core.Dfa.MaxState
  nameWithType: Dfa.MaxState
- uid: Automata.Core.Dfa.MaxState*
  name: MaxState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_MaxState_
  commentId: Overload:Automata.Core.Dfa.MaxState
  isSpec: "True"
  fullName: Automata.Core.Dfa.MaxState
  nameWithType: Dfa.MaxState
- uid: Automata.Core.Dfa.Minimized
  name: Minimized()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Minimized
  commentId: M:Automata.Core.Dfa.Minimized
  fullName: Automata.Core.Dfa.Minimized()
  nameWithType: Dfa.Minimized()
- uid: Automata.Core.Dfa.Minimized*
  name: Minimized
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Minimized_
  commentId: Overload:Automata.Core.Dfa.Minimized
  isSpec: "True"
  fullName: Automata.Core.Dfa.Minimized
  nameWithType: Dfa.Minimized
- uid: Automata.Core.Dfa.ReachableState(System.Int32,System.Int32)
  name: ReachableState(int, int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_ReachableState_System_Int32_System_Int32_
  commentId: M:Automata.Core.Dfa.ReachableState(System.Int32,System.Int32)
  name.vb: ReachableState(Integer, Integer)
  fullName: Automata.Core.Dfa.ReachableState(int, int)
  fullName.vb: Automata.Core.Dfa.ReachableState(Integer, Integer)
  nameWithType: Dfa.ReachableState(int, int)
  nameWithType.vb: Dfa.ReachableState(Integer, Integer)
- uid: Automata.Core.Dfa.ReachableState*
  name: ReachableState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_ReachableState_
  commentId: Overload:Automata.Core.Dfa.ReachableState
  isSpec: "True"
  fullName: Automata.Core.Dfa.ReachableState
  nameWithType: Dfa.ReachableState
- uid: Automata.Core.Dfa.Reversed
  name: Reversed()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Reversed
  commentId: M:Automata.Core.Dfa.Reversed
  fullName: Automata.Core.Dfa.Reversed()
  nameWithType: Dfa.Reversed()
- uid: Automata.Core.Dfa.Reversed*
  name: Reversed
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Reversed_
  commentId: Overload:Automata.Core.Dfa.Reversed
  isSpec: "True"
  fullName: Automata.Core.Dfa.Reversed
  nameWithType: Dfa.Reversed
- uid: Automata.Core.Dfa.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name: SetFinal(IEnumerable<int>, bool)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetFinal_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_
  commentId: M:Automata.Core.Dfa.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name.vb: SetFinal(IEnumerable(Of Integer), Boolean)
  fullName: Automata.Core.Dfa.SetFinal(System.Collections.Generic.IEnumerable<int>, bool)
  fullName.vb: Automata.Core.Dfa.SetFinal(System.Collections.Generic.IEnumerable(Of Integer), Boolean)
  nameWithType: Dfa.SetFinal(IEnumerable<int>, bool)
  nameWithType.vb: Dfa.SetFinal(IEnumerable(Of Integer), Boolean)
- uid: Automata.Core.Dfa.SetFinal(System.Int32,System.Boolean)
  name: SetFinal(int, bool)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetFinal_System_Int32_System_Boolean_
  commentId: M:Automata.Core.Dfa.SetFinal(System.Int32,System.Boolean)
  name.vb: SetFinal(Integer, Boolean)
  fullName: Automata.Core.Dfa.SetFinal(int, bool)
  fullName.vb: Automata.Core.Dfa.SetFinal(Integer, Boolean)
  nameWithType: Dfa.SetFinal(int, bool)
  nameWithType.vb: Dfa.SetFinal(Integer, Boolean)
- uid: Automata.Core.Dfa.SetFinal*
  name: SetFinal
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetFinal_
  commentId: Overload:Automata.Core.Dfa.SetFinal
  isSpec: "True"
  fullName: Automata.Core.Dfa.SetFinal
  nameWithType: Dfa.SetFinal
- uid: Automata.Core.Dfa.SetInitial(System.Int32)
  name: SetInitial(int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetInitial_System_Int32_
  commentId: M:Automata.Core.Dfa.SetInitial(System.Int32)
  name.vb: SetInitial(Integer)
  fullName: Automata.Core.Dfa.SetInitial(int)
  fullName.vb: Automata.Core.Dfa.SetInitial(Integer)
  nameWithType: Dfa.SetInitial(int)
  nameWithType.vb: Dfa.SetInitial(Integer)
- uid: Automata.Core.Dfa.SetInitial*
  name: SetInitial
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetInitial_
  commentId: Overload:Automata.Core.Dfa.SetInitial
  isSpec: "True"
  fullName: Automata.Core.Dfa.SetInitial
  nameWithType: Dfa.SetInitial
- uid: Automata.Core.Dfa.State(System.Int32)
  name: State(int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_State_System_Int32_
  commentId: M:Automata.Core.Dfa.State(System.Int32)
  name.vb: State(Integer)
  fullName: Automata.Core.Dfa.State(int)
  fullName.vb: Automata.Core.Dfa.State(Integer)
  nameWithType: Dfa.State(int)
  nameWithType.vb: Dfa.State(Integer)
- uid: Automata.Core.Dfa.State*
  name: State
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_State_
  commentId: Overload:Automata.Core.Dfa.State
  isSpec: "True"
  fullName: Automata.Core.Dfa.State
  nameWithType: Dfa.State
- uid: Automata.Core.Dfa.SymbolicTransitions
  name: SymbolicTransitions()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SymbolicTransitions
  commentId: M:Automata.Core.Dfa.SymbolicTransitions
  fullName: Automata.Core.Dfa.SymbolicTransitions()
  nameWithType: Dfa.SymbolicTransitions()
- uid: Automata.Core.Dfa.SymbolicTransitions*
  name: SymbolicTransitions
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SymbolicTransitions_
  commentId: Overload:Automata.Core.Dfa.SymbolicTransitions
  isSpec: "True"
  fullName: Automata.Core.Dfa.SymbolicTransitions
  nameWithType: Dfa.SymbolicTransitions
- uid: Automata.Core.Dfa.ToCFA
  name: ToCFA()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_ToCFA
  commentId: M:Automata.Core.Dfa.ToCFA
  fullName: Automata.Core.Dfa.ToCFA()
  nameWithType: Dfa.ToCFA()
- uid: Automata.Core.Dfa.ToCFA*
  name: ToCFA
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_ToCFA_
  commentId: Overload:Automata.Core.Dfa.ToCFA
  isSpec: "True"
  fullName: Automata.Core.Dfa.ToCFA
  nameWithType: Dfa.ToCFA
- uid: Automata.Core.Dfa.ToNFA
  name: ToNFA()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_ToNFA
  commentId: M:Automata.Core.Dfa.ToNFA
  fullName: Automata.Core.Dfa.ToNFA()
  nameWithType: Dfa.ToNFA()
- uid: Automata.Core.Dfa.ToNFA*
  name: ToNFA
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_ToNFA_
  commentId: Overload:Automata.Core.Dfa.ToNFA
  isSpec: "True"
  fullName: Automata.Core.Dfa.ToNFA
  nameWithType: Dfa.ToNFA
- uid: Automata.Core.Dfa.Transition(System.Int32,System.Int32)
  name: Transition(int, int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Transition_System_Int32_System_Int32_
  commentId: M:Automata.Core.Dfa.Transition(System.Int32,System.Int32)
  name.vb: Transition(Integer, Integer)
  fullName: Automata.Core.Dfa.Transition(int, int)
  fullName.vb: Automata.Core.Dfa.Transition(Integer, Integer)
  nameWithType: Dfa.Transition(int, int)
  nameWithType.vb: Dfa.Transition(Integer, Integer)
- uid: Automata.Core.Dfa.Transition*
  name: Transition
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Transition_
  commentId: Overload:Automata.Core.Dfa.Transition
  isSpec: "True"
  fullName: Automata.Core.Dfa.Transition
  nameWithType: Dfa.Transition
- uid: Automata.Core.Dfa.Transitions(System.Int32)
  name: Transitions(int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Transitions_System_Int32_
  commentId: M:Automata.Core.Dfa.Transitions(System.Int32)
  name.vb: Transitions(Integer)
  fullName: Automata.Core.Dfa.Transitions(int)
  fullName.vb: Automata.Core.Dfa.Transitions(Integer)
  nameWithType: Dfa.Transitions(int)
  nameWithType.vb: Dfa.Transitions(Integer)
- uid: Automata.Core.Dfa.Transitions*
  name: Transitions
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Transitions_
  commentId: Overload:Automata.Core.Dfa.Transitions
  isSpec: "True"
  fullName: Automata.Core.Dfa.Transitions
  nameWithType: Dfa.Transitions
- uid: Automata.Core.Dfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.Transition})
  name: UnionWith(IEnumerable<Transition>)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_UnionWith_System_Collections_Generic_IEnumerable_Automata_Core_Transition__
  commentId: M:Automata.Core.Dfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.Transition})
  name.vb: UnionWith(IEnumerable(Of Transition))
  fullName: Automata.Core.Dfa.UnionWith(System.Collections.Generic.IEnumerable<Automata.Core.Transition>)
  fullName.vb: Automata.Core.Dfa.UnionWith(System.Collections.Generic.IEnumerable(Of Automata.Core.Transition))
  nameWithType: Dfa.UnionWith(IEnumerable<Transition>)
  nameWithType.vb: Dfa.UnionWith(IEnumerable(Of Transition))
- uid: Automata.Core.Dfa.UnionWith*
  name: UnionWith
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_UnionWith_
  commentId: Overload:Automata.Core.Dfa.UnionWith
  isSpec: "True"
  fullName: Automata.Core.Dfa.UnionWith
  nameWithType: Dfa.UnionWith
- uid: Automata.Core.EpsilonTransition
  name: EpsilonTransition
  href: Automata.Core.EpsilonTransition.html
  commentId: T:Automata.Core.EpsilonTransition
  fullName: Automata.Core.EpsilonTransition
  nameWithType: EpsilonTransition
- uid: Automata.Core.EpsilonTransition.#ctor(System.Int32,System.Int32)
  name: EpsilonTransition(int, int)
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition__ctor_System_Int32_System_Int32_
  commentId: M:Automata.Core.EpsilonTransition.#ctor(System.Int32,System.Int32)
  name.vb: New(Integer, Integer)
  fullName: Automata.Core.EpsilonTransition.EpsilonTransition(int, int)
  fullName.vb: Automata.Core.EpsilonTransition.New(Integer, Integer)
  nameWithType: EpsilonTransition.EpsilonTransition(int, int)
  nameWithType.vb: EpsilonTransition.New(Integer, Integer)
- uid: Automata.Core.EpsilonTransition.#ctor*
  name: EpsilonTransition
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition__ctor_
  commentId: Overload:Automata.Core.EpsilonTransition.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.EpsilonTransition.EpsilonTransition
  fullName.vb: Automata.Core.EpsilonTransition.New
  nameWithType: EpsilonTransition.EpsilonTransition
  nameWithType.vb: EpsilonTransition.New
- uid: Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  name: CompareTo(EpsilonTransition)
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_CompareTo_Automata_Core_EpsilonTransition_
  commentId: M:Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  fullName: Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  nameWithType: EpsilonTransition.CompareTo(EpsilonTransition)
- uid: Automata.Core.EpsilonTransition.CompareTo*
  name: CompareTo
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_CompareTo_
  commentId: Overload:Automata.Core.EpsilonTransition.CompareTo
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.CompareTo
  nameWithType: EpsilonTransition.CompareTo
- uid: Automata.Core.EpsilonTransition.Epsilon
  name: Epsilon
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Epsilon
  commentId: F:Automata.Core.EpsilonTransition.Epsilon
  fullName: Automata.Core.EpsilonTransition.Epsilon
  nameWithType: EpsilonTransition.Epsilon
- uid: Automata.Core.EpsilonTransition.FromState
  name: FromState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_FromState
  commentId: P:Automata.Core.EpsilonTransition.FromState
  fullName: Automata.Core.EpsilonTransition.FromState
  nameWithType: EpsilonTransition.FromState
- uid: Automata.Core.EpsilonTransition.FromState*
  name: FromState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_FromState_
  commentId: Overload:Automata.Core.EpsilonTransition.FromState
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.FromState
  nameWithType: EpsilonTransition.FromState
- uid: Automata.Core.EpsilonTransition.MaxTrans(System.Int32)
  name: MaxTrans(int)
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_MaxTrans_System_Int32_
  commentId: M:Automata.Core.EpsilonTransition.MaxTrans(System.Int32)
  name.vb: MaxTrans(Integer)
  fullName: Automata.Core.EpsilonTransition.MaxTrans(int)
  fullName.vb: Automata.Core.EpsilonTransition.MaxTrans(Integer)
  nameWithType: EpsilonTransition.MaxTrans(int)
  nameWithType.vb: EpsilonTransition.MaxTrans(Integer)
- uid: Automata.Core.EpsilonTransition.MaxTrans*
  name: MaxTrans
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_MaxTrans_
  commentId: Overload:Automata.Core.EpsilonTransition.MaxTrans
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.MaxTrans
  nameWithType: EpsilonTransition.MaxTrans
- uid: Automata.Core.EpsilonTransition.MinTrans(System.Int32)
  name: MinTrans(int)
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_MinTrans_System_Int32_
  commentId: M:Automata.Core.EpsilonTransition.MinTrans(System.Int32)
  name.vb: MinTrans(Integer)
  fullName: Automata.Core.EpsilonTransition.MinTrans(int)
  fullName.vb: Automata.Core.EpsilonTransition.MinTrans(Integer)
  nameWithType: EpsilonTransition.MinTrans(int)
  nameWithType.vb: EpsilonTransition.MinTrans(Integer)
- uid: Automata.Core.EpsilonTransition.MinTrans*
  name: MinTrans
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_MinTrans_
  commentId: Overload:Automata.Core.EpsilonTransition.MinTrans
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.MinTrans
  nameWithType: EpsilonTransition.MinTrans
- uid: Automata.Core.EpsilonTransition.Reverse
  name: Reverse()
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Reverse
  commentId: M:Automata.Core.EpsilonTransition.Reverse
  fullName: Automata.Core.EpsilonTransition.Reverse()
  nameWithType: EpsilonTransition.Reverse()
- uid: Automata.Core.EpsilonTransition.Reverse*
  name: Reverse
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Reverse_
  commentId: Overload:Automata.Core.EpsilonTransition.Reverse
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.Reverse
  nameWithType: EpsilonTransition.Reverse
- uid: Automata.Core.EpsilonTransition.ToState
  name: ToState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_ToState
  commentId: P:Automata.Core.EpsilonTransition.ToState
  fullName: Automata.Core.EpsilonTransition.ToState
  nameWithType: EpsilonTransition.ToState
- uid: Automata.Core.EpsilonTransition.ToState*
  name: ToState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_ToState_
  commentId: Overload:Automata.Core.EpsilonTransition.ToState
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.ToState
  nameWithType: EpsilonTransition.ToState
- uid: Automata.Core.IDfa
  name: IDfa
  href: Automata.Core.IDfa.html
  commentId: T:Automata.Core.IDfa
  fullName: Automata.Core.IDfa
  nameWithType: IDfa
- uid: Automata.Core.IDfa.InitialState
  name: InitialState
  href: Automata.Core.IDfa.html#Automata_Core_IDfa_InitialState
  commentId: P:Automata.Core.IDfa.InitialState
  fullName: Automata.Core.IDfa.InitialState
  nameWithType: IDfa.InitialState
- uid: Automata.Core.IDfa.InitialState*
  name: InitialState
  href: Automata.Core.IDfa.html#Automata_Core_IDfa_InitialState_
  commentId: Overload:Automata.Core.IDfa.InitialState
  isSpec: "True"
  fullName: Automata.Core.IDfa.InitialState
  nameWithType: IDfa.InitialState
- uid: Automata.Core.IDfa.State(System.Int32)
  name: State(int)
  href: Automata.Core.IDfa.html#Automata_Core_IDfa_State_System_Int32_
  commentId: M:Automata.Core.IDfa.State(System.Int32)
  name.vb: State(Integer)
  fullName: Automata.Core.IDfa.State(int)
  fullName.vb: Automata.Core.IDfa.State(Integer)
  nameWithType: IDfa.State(int)
  nameWithType.vb: IDfa.State(Integer)
- uid: Automata.Core.IDfa.State*
  name: State
  href: Automata.Core.IDfa.html#Automata_Core_IDfa_State_
  commentId: Overload:Automata.Core.IDfa.State
  isSpec: "True"
  fullName: Automata.Core.IDfa.State
  nameWithType: IDfa.State
- uid: Automata.Core.IFsa
  name: IFsa
  href: Automata.Core.IFsa.html
  commentId: T:Automata.Core.IFsa
  fullName: Automata.Core.IFsa
  nameWithType: IFsa
- uid: Automata.Core.IFsa.Alphabet
  name: Alphabet
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_Alphabet
  commentId: P:Automata.Core.IFsa.Alphabet
  fullName: Automata.Core.IFsa.Alphabet
  nameWithType: IFsa.Alphabet
- uid: Automata.Core.IFsa.Alphabet*
  name: Alphabet
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_Alphabet_
  commentId: Overload:Automata.Core.IFsa.Alphabet
  isSpec: "True"
  fullName: Automata.Core.IFsa.Alphabet
  nameWithType: IFsa.Alphabet
- uid: Automata.Core.IFsa.EpsilonTransitions
  name: EpsilonTransitions()
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_EpsilonTransitions
  commentId: M:Automata.Core.IFsa.EpsilonTransitions
  fullName: Automata.Core.IFsa.EpsilonTransitions()
  nameWithType: IFsa.EpsilonTransitions()
- uid: Automata.Core.IFsa.EpsilonTransitions*
  name: EpsilonTransitions
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_EpsilonTransitions_
  commentId: Overload:Automata.Core.IFsa.EpsilonTransitions
  isSpec: "True"
  fullName: Automata.Core.IFsa.EpsilonTransitions
  nameWithType: IFsa.EpsilonTransitions
- uid: Automata.Core.IFsa.IsEmpty
  name: IsEmpty
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsEmpty
  commentId: P:Automata.Core.IFsa.IsEmpty
  fullName: Automata.Core.IFsa.IsEmpty
  nameWithType: IFsa.IsEmpty
- uid: Automata.Core.IFsa.IsEmpty*
  name: IsEmpty
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsEmpty_
  commentId: Overload:Automata.Core.IFsa.IsEmpty
  isSpec: "True"
  fullName: Automata.Core.IFsa.IsEmpty
  nameWithType: IFsa.IsEmpty
- uid: Automata.Core.IFsa.IsEpsilonFree
  name: IsEpsilonFree
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsEpsilonFree
  commentId: P:Automata.Core.IFsa.IsEpsilonFree
  fullName: Automata.Core.IFsa.IsEpsilonFree
  nameWithType: IFsa.IsEpsilonFree
- uid: Automata.Core.IFsa.IsEpsilonFree*
  name: IsEpsilonFree
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsEpsilonFree_
  commentId: Overload:Automata.Core.IFsa.IsEpsilonFree
  isSpec: "True"
  fullName: Automata.Core.IFsa.IsEpsilonFree
  nameWithType: IFsa.IsEpsilonFree
- uid: Automata.Core.IFsa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsFinal_System_Int32_
  commentId: M:Automata.Core.IFsa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.IFsa.IsFinal(int)
  fullName.vb: Automata.Core.IFsa.IsFinal(Integer)
  nameWithType: IFsa.IsFinal(int)
  nameWithType.vb: IFsa.IsFinal(Integer)
- uid: Automata.Core.IFsa.IsFinal*
  name: IsFinal
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsFinal_
  commentId: Overload:Automata.Core.IFsa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.IFsa.IsFinal
  nameWithType: IFsa.IsFinal
- uid: Automata.Core.IFsa.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsInitial_System_Int32_
  commentId: M:Automata.Core.IFsa.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.IFsa.IsInitial(int)
  fullName.vb: Automata.Core.IFsa.IsInitial(Integer)
  nameWithType: IFsa.IsInitial(int)
  nameWithType.vb: IFsa.IsInitial(Integer)
- uid: Automata.Core.IFsa.IsInitial*
  name: IsInitial
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsInitial_
  commentId: Overload:Automata.Core.IFsa.IsInitial
  isSpec: "True"
  fullName: Automata.Core.IFsa.IsInitial
  nameWithType: IFsa.IsInitial
- uid: Automata.Core.IFsa.SymbolicTransitions
  name: SymbolicTransitions()
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_SymbolicTransitions
  commentId: M:Automata.Core.IFsa.SymbolicTransitions
  fullName: Automata.Core.IFsa.SymbolicTransitions()
  nameWithType: IFsa.SymbolicTransitions()
- uid: Automata.Core.IFsa.SymbolicTransitions*
  name: SymbolicTransitions
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_SymbolicTransitions_
  commentId: Overload:Automata.Core.IFsa.SymbolicTransitions
  isSpec: "True"
  fullName: Automata.Core.IFsa.SymbolicTransitions
  nameWithType: IFsa.SymbolicTransitions
- uid: Automata.Core.IntSet
  name: IntSet
  href: Automata.Core.IntSet.html
  commentId: T:Automata.Core.IntSet
  fullName: Automata.Core.IntSet
  nameWithType: IntSet
- uid: Automata.Core.IntSet.#ctor(System.Collections.Generic.HashSet{System.Int32})
  name: IntSet(HashSet<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_System_Collections_Generic_HashSet_System_Int32__
  commentId: M:Automata.Core.IntSet.#ctor(System.Collections.Generic.HashSet{System.Int32})
  name.vb: New(HashSet(Of Integer))
  fullName: Automata.Core.IntSet.IntSet(System.Collections.Generic.HashSet<int>)
  fullName.vb: Automata.Core.IntSet.New(System.Collections.Generic.HashSet(Of Integer))
  nameWithType: IntSet.IntSet(HashSet<int>)
  nameWithType.vb: IntSet.New(HashSet(Of Integer))
- uid: Automata.Core.IntSet.#ctor(System.Collections.Generic.IEnumerable{System.Int32})
  name: IntSet(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.#ctor(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: New(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IntSet(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.New(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IntSet(IEnumerable<int>)
  nameWithType.vb: IntSet.New(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.#ctor(System.Collections.Generic.ISet{System.Int32})
  name: IntSet(ISet<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_System_Collections_Generic_ISet_System_Int32__
  commentId: M:Automata.Core.IntSet.#ctor(System.Collections.Generic.ISet{System.Int32})
  name.vb: New(ISet(Of Integer))
  fullName: Automata.Core.IntSet.IntSet(System.Collections.Generic.ISet<int>)
  fullName.vb: Automata.Core.IntSet.New(System.Collections.Generic.ISet(Of Integer))
  nameWithType: IntSet.IntSet(ISet<int>)
  nameWithType.vb: IntSet.New(ISet(Of Integer))
- uid: Automata.Core.IntSet.#ctor*
  name: IntSet
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_
  commentId: Overload:Automata.Core.IntSet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.IntSet.IntSet
  fullName.vb: Automata.Core.IntSet.New
  nameWithType: IntSet.IntSet
  nameWithType.vb: IntSet.New
- uid: Automata.Core.IntSet.Contains(System.Int32)
  name: Contains(int)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Contains_System_Int32_
  commentId: M:Automata.Core.IntSet.Contains(System.Int32)
  name.vb: Contains(Integer)
  fullName: Automata.Core.IntSet.Contains(int)
  fullName.vb: Automata.Core.IntSet.Contains(Integer)
  nameWithType: IntSet.Contains(int)
  nameWithType.vb: IntSet.Contains(Integer)
- uid: Automata.Core.IntSet.Contains*
  name: Contains
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Contains_
  commentId: Overload:Automata.Core.IntSet.Contains
  isSpec: "True"
  fullName: Automata.Core.IntSet.Contains
  nameWithType: IntSet.Contains
- uid: Automata.Core.IntSet.Count
  name: Count
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Count
  commentId: P:Automata.Core.IntSet.Count
  fullName: Automata.Core.IntSet.Count
  nameWithType: IntSet.Count
- uid: Automata.Core.IntSet.Count*
  name: Count
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Count_
  commentId: Overload:Automata.Core.IntSet.Count
  isSpec: "True"
  fullName: Automata.Core.IntSet.Count
  nameWithType: IntSet.Count
- uid: Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  name: Equals(IntSet?)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_Automata_Core_IntSet_
  commentId: M:Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  name.vb: Equals(IntSet)
  fullName: Automata.Core.IntSet.Equals(Automata.Core.IntSet?)
  fullName.vb: Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  nameWithType: IntSet.Equals(IntSet?)
  nameWithType.vb: IntSet.Equals(IntSet)
- uid: Automata.Core.IntSet.Equals(System.Object)
  name: Equals(object?)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_System_Object_
  commentId: M:Automata.Core.IntSet.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Automata.Core.IntSet.Equals(object?)
  fullName.vb: Automata.Core.IntSet.Equals(Object)
  nameWithType: IntSet.Equals(object?)
  nameWithType.vb: IntSet.Equals(Object)
- uid: Automata.Core.IntSet.Equals*
  name: Equals
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_
  commentId: Overload:Automata.Core.IntSet.Equals
  isSpec: "True"
  fullName: Automata.Core.IntSet.Equals
  nameWithType: IntSet.Equals
- uid: Automata.Core.IntSet.GetEnumerator
  name: GetEnumerator()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetEnumerator
  commentId: M:Automata.Core.IntSet.GetEnumerator
  fullName: Automata.Core.IntSet.GetEnumerator()
  nameWithType: IntSet.GetEnumerator()
- uid: Automata.Core.IntSet.GetEnumerator*
  name: GetEnumerator
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetEnumerator_
  commentId: Overload:Automata.Core.IntSet.GetEnumerator
  isSpec: "True"
  fullName: Automata.Core.IntSet.GetEnumerator
  nameWithType: IntSet.GetEnumerator
- uid: Automata.Core.IntSet.GetHashCode
  name: GetHashCode()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetHashCode
  commentId: M:Automata.Core.IntSet.GetHashCode
  fullName: Automata.Core.IntSet.GetHashCode()
  nameWithType: IntSet.GetHashCode()
- uid: Automata.Core.IntSet.GetHashCode*
  name: GetHashCode
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetHashCode_
  commentId: Overload:Automata.Core.IntSet.GetHashCode
  isSpec: "True"
  fullName: Automata.Core.IntSet.GetHashCode
  nameWithType: IntSet.GetHashCode
- uid: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsProperSubsetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSubsetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsProperSubsetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsProperSubsetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsProperSubsetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSubsetOf_
  commentId: Overload:Automata.Core.IntSet.IsProperSubsetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsProperSubsetOf
  nameWithType: IntSet.IsProperSubsetOf
- uid: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsProperSupersetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSupersetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsProperSupersetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsProperSupersetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsProperSupersetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSupersetOf_
  commentId: Overload:Automata.Core.IntSet.IsProperSupersetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsProperSupersetOf
  nameWithType: IntSet.IsProperSupersetOf
- uid: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsSubsetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSubsetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsSubsetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsSubsetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsSubsetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsSubsetOf*
  name: IsSubsetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSubsetOf_
  commentId: Overload:Automata.Core.IntSet.IsSubsetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsSubsetOf
  nameWithType: IntSet.IsSubsetOf
- uid: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsSupersetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSupersetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsSupersetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsSupersetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsSupersetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsSupersetOf*
  name: IsSupersetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSupersetOf_
  commentId: Overload:Automata.Core.IntSet.IsSupersetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsSupersetOf
  nameWithType: IntSet.IsSupersetOf
- uid: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable{System.Int32})
  name: Overlaps(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Overlaps_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Overlaps(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.Overlaps(IEnumerable<int>)
  nameWithType.vb: IntSet.Overlaps(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.Overlaps*
  name: Overlaps
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Overlaps_
  commentId: Overload:Automata.Core.IntSet.Overlaps
  isSpec: "True"
  fullName: Automata.Core.IntSet.Overlaps
  nameWithType: IntSet.Overlaps
- uid: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable{System.Int32})
  name: SetEquals(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_SetEquals_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: SetEquals(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.SetEquals(IEnumerable<int>)
  nameWithType.vb: IntSet.SetEquals(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.SetEquals*
  name: SetEquals
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_SetEquals_
  commentId: Overload:Automata.Core.IntSet.SetEquals
  isSpec: "True"
  fullName: Automata.Core.IntSet.SetEquals
  nameWithType: IntSet.SetEquals
- uid: Automata.Core.IntSet.ToString
  name: ToString()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_ToString
  commentId: M:Automata.Core.IntSet.ToString
  fullName: Automata.Core.IntSet.ToString()
  nameWithType: IntSet.ToString()
- uid: Automata.Core.IntSet.ToString*
  name: ToString
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_ToString_
  commentId: Overload:Automata.Core.IntSet.ToString
  isSpec: "True"
  fullName: Automata.Core.IntSet.ToString
  nameWithType: IntSet.ToString
- uid: Automata.Core.Nfa
  name: Nfa
  href: Automata.Core.Nfa.html
  commentId: T:Automata.Core.Nfa
  fullName: Automata.Core.Nfa
  nameWithType: Nfa
- uid: Automata.Core.Nfa.#ctor
  name: Nfa()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa__ctor
  commentId: M:Automata.Core.Nfa.#ctor
  name.vb: New()
  fullName: Automata.Core.Nfa.Nfa()
  fullName.vb: Automata.Core.Nfa.New()
  nameWithType: Nfa.Nfa()
  nameWithType.vb: Nfa.New()
- uid: Automata.Core.Nfa.#ctor(Automata.Core.Alphabets.MutableAlphabet)
  name: Nfa(MutableAlphabet)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa__ctor_Automata_Core_Alphabets_MutableAlphabet_
  commentId: M:Automata.Core.Nfa.#ctor(Automata.Core.Alphabets.MutableAlphabet)
  name.vb: New(MutableAlphabet)
  fullName: Automata.Core.Nfa.Nfa(Automata.Core.Alphabets.MutableAlphabet)
  fullName.vb: Automata.Core.Nfa.New(Automata.Core.Alphabets.MutableAlphabet)
  nameWithType: Nfa.Nfa(MutableAlphabet)
  nameWithType.vb: Nfa.New(MutableAlphabet)
- uid: Automata.Core.Nfa.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name: Nfa(IEnumerable<IEnumerable<string>>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa__ctor_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___
  commentId: M:Automata.Core.Nfa.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name.vb: New(IEnumerable(Of IEnumerable(Of String)))
  fullName: Automata.Core.Nfa.Nfa(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>)
  fullName.vb: Automata.Core.Nfa.New(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)))
  nameWithType: Nfa.Nfa(IEnumerable<IEnumerable<string>>)
  nameWithType.vb: Nfa.New(IEnumerable(Of IEnumerable(Of String)))
- uid: Automata.Core.Nfa.#ctor*
  name: Nfa
  href: Automata.Core.Nfa.html#Automata_Core_Nfa__ctor_
  commentId: Overload:Automata.Core.Nfa.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Nfa.Nfa
  fullName.vb: Automata.Core.Nfa.New
  nameWithType: Nfa.Nfa
  nameWithType.vb: Nfa.New
- uid: Automata.Core.Nfa.Add(Automata.Core.EpsilonTransition)
  name: Add(EpsilonTransition)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Add_Automata_Core_EpsilonTransition_
  commentId: M:Automata.Core.Nfa.Add(Automata.Core.EpsilonTransition)
  fullName: Automata.Core.Nfa.Add(Automata.Core.EpsilonTransition)
  nameWithType: Nfa.Add(EpsilonTransition)
- uid: Automata.Core.Nfa.Add(Automata.Core.Transition)
  name: Add(Transition)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Add_Automata_Core_Transition_
  commentId: M:Automata.Core.Nfa.Add(Automata.Core.Transition)
  fullName: Automata.Core.Nfa.Add(Automata.Core.Transition)
  nameWithType: Nfa.Add(Transition)
- uid: Automata.Core.Nfa.Add*
  name: Add
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Add_
  commentId: Overload:Automata.Core.Nfa.Add
  isSpec: "True"
  fullName: Automata.Core.Nfa.Add
  nameWithType: Nfa.Add
- uid: Automata.Core.Nfa.Alphabet
  name: Alphabet
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Alphabet
  commentId: P:Automata.Core.Nfa.Alphabet
  fullName: Automata.Core.Nfa.Alphabet
  nameWithType: Nfa.Alphabet
- uid: Automata.Core.Nfa.Alphabet*
  name: Alphabet
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Alphabet_
  commentId: Overload:Automata.Core.Nfa.Alphabet
  isSpec: "True"
  fullName: Automata.Core.Nfa.Alphabet
  nameWithType: Nfa.Alphabet
- uid: Automata.Core.Nfa.AvailableSymbols(System.Collections.Generic.IEnumerable{System.Int32})
  name: AvailableSymbols(IEnumerable<int>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_AvailableSymbols_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.Nfa.AvailableSymbols(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: AvailableSymbols(IEnumerable(Of Integer))
  fullName: Automata.Core.Nfa.AvailableSymbols(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.Nfa.AvailableSymbols(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: Nfa.AvailableSymbols(IEnumerable<int>)
  nameWithType.vb: Nfa.AvailableSymbols(IEnumerable(Of Integer))
- uid: Automata.Core.Nfa.AvailableSymbols*
  name: AvailableSymbols
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_AvailableSymbols_
  commentId: Overload:Automata.Core.Nfa.AvailableSymbols
  isSpec: "True"
  fullName: Automata.Core.Nfa.AvailableSymbols
  nameWithType: Nfa.AvailableSymbols
- uid: Automata.Core.Nfa.FinalStates
  name: FinalStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_FinalStates
  commentId: P:Automata.Core.Nfa.FinalStates
  fullName: Automata.Core.Nfa.FinalStates
  nameWithType: Nfa.FinalStates
- uid: Automata.Core.Nfa.FinalStates*
  name: FinalStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_FinalStates_
  commentId: Overload:Automata.Core.Nfa.FinalStates
  isSpec: "True"
  fullName: Automata.Core.Nfa.FinalStates
  nameWithType: Nfa.FinalStates
- uid: Automata.Core.Nfa.InitialStates
  name: InitialStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_InitialStates
  commentId: P:Automata.Core.Nfa.InitialStates
  fullName: Automata.Core.Nfa.InitialStates
  nameWithType: Nfa.InitialStates
- uid: Automata.Core.Nfa.InitialStates*
  name: InitialStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_InitialStates_
  commentId: Overload:Automata.Core.Nfa.InitialStates
  isSpec: "True"
  fullName: Automata.Core.Nfa.InitialStates
  nameWithType: Nfa.InitialStates
- uid: Automata.Core.Nfa.IsEmpty
  name: IsEmpty
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsEmpty
  commentId: P:Automata.Core.Nfa.IsEmpty
  fullName: Automata.Core.Nfa.IsEmpty
  nameWithType: Nfa.IsEmpty
- uid: Automata.Core.Nfa.IsEmpty*
  name: IsEmpty
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsEmpty_
  commentId: Overload:Automata.Core.Nfa.IsEmpty
  isSpec: "True"
  fullName: Automata.Core.Nfa.IsEmpty
  nameWithType: Nfa.IsEmpty
- uid: Automata.Core.Nfa.IsEpsilonFree
  name: IsEpsilonFree
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsEpsilonFree
  commentId: P:Automata.Core.Nfa.IsEpsilonFree
  fullName: Automata.Core.Nfa.IsEpsilonFree
  nameWithType: Nfa.IsEpsilonFree
- uid: Automata.Core.Nfa.IsEpsilonFree*
  name: IsEpsilonFree
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsEpsilonFree_
  commentId: Overload:Automata.Core.Nfa.IsEpsilonFree
  isSpec: "True"
  fullName: Automata.Core.Nfa.IsEpsilonFree
  nameWithType: Nfa.IsEpsilonFree
- uid: Automata.Core.Nfa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsFinal_System_Int32_
  commentId: M:Automata.Core.Nfa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.Nfa.IsFinal(int)
  fullName.vb: Automata.Core.Nfa.IsFinal(Integer)
  nameWithType: Nfa.IsFinal(int)
  nameWithType.vb: Nfa.IsFinal(Integer)
- uid: Automata.Core.Nfa.IsFinal*
  name: IsFinal
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsFinal_
  commentId: Overload:Automata.Core.Nfa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.Nfa.IsFinal
  nameWithType: Nfa.IsFinal
- uid: Automata.Core.Nfa.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsInitial_System_Int32_
  commentId: M:Automata.Core.Nfa.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.Nfa.IsInitial(int)
  fullName.vb: Automata.Core.Nfa.IsInitial(Integer)
  nameWithType: Nfa.IsInitial(int)
  nameWithType.vb: Nfa.IsInitial(Integer)
- uid: Automata.Core.Nfa.IsInitial*
  name: IsInitial
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsInitial_
  commentId: Overload:Automata.Core.Nfa.IsInitial
  isSpec: "True"
  fullName: Automata.Core.Nfa.IsInitial
  nameWithType: Nfa.IsInitial
- uid: Automata.Core.Nfa.MaxState
  name: MaxState
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_MaxState
  commentId: P:Automata.Core.Nfa.MaxState
  fullName: Automata.Core.Nfa.MaxState
  nameWithType: Nfa.MaxState
- uid: Automata.Core.Nfa.MaxState*
  name: MaxState
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_MaxState_
  commentId: Overload:Automata.Core.Nfa.MaxState
  isSpec: "True"
  fullName: Automata.Core.Nfa.MaxState
  nameWithType: Nfa.MaxState
- uid: Automata.Core.Nfa.ReachableStates(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)
  name: ReachableStates(IEnumerable<int>, int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStates_System_Collections_Generic_IEnumerable_System_Int32__System_Int32_
  commentId: M:Automata.Core.Nfa.ReachableStates(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)
  name.vb: ReachableStates(IEnumerable(Of Integer), Integer)
  fullName: Automata.Core.Nfa.ReachableStates(System.Collections.Generic.IEnumerable<int>, int)
  fullName.vb: Automata.Core.Nfa.ReachableStates(System.Collections.Generic.IEnumerable(Of Integer), Integer)
  nameWithType: Nfa.ReachableStates(IEnumerable<int>, int)
  nameWithType.vb: Nfa.ReachableStates(IEnumerable(Of Integer), Integer)
- uid: Automata.Core.Nfa.ReachableStates*
  name: ReachableStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStates_
  commentId: Overload:Automata.Core.Nfa.ReachableStates
  isSpec: "True"
  fullName: Automata.Core.Nfa.ReachableStates
  nameWithType: Nfa.ReachableStates
- uid: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet{System.Int32})
  name: ReachableStatesOnEpsilonInPlace(HashSet<int>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnEpsilonInPlace_System_Collections_Generic_HashSet_System_Int32__
  commentId: M:Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet{System.Int32})
  name.vb: ReachableStatesOnEpsilonInPlace(HashSet(Of Integer))
  fullName: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet<int>)
  fullName.vb: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet(Of Integer))
  nameWithType: Nfa.ReachableStatesOnEpsilonInPlace(HashSet<int>)
  nameWithType.vb: Nfa.ReachableStatesOnEpsilonInPlace(HashSet(Of Integer))
- uid: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace*
  name: ReachableStatesOnEpsilonInPlace
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnEpsilonInPlace_
  commentId: Overload:Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace
  isSpec: "True"
  fullName: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace
  nameWithType: Nfa.ReachableStatesOnEpsilonInPlace
- uid: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon(System.Int32)
  name: ReachableStatesOnSingleEpsilon(int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnSingleEpsilon_System_Int32_
  commentId: M:Automata.Core.Nfa.ReachableStatesOnSingleEpsilon(System.Int32)
  name.vb: ReachableStatesOnSingleEpsilon(Integer)
  fullName: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon(int)
  fullName.vb: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon(Integer)
  nameWithType: Nfa.ReachableStatesOnSingleEpsilon(int)
  nameWithType.vb: Nfa.ReachableStatesOnSingleEpsilon(Integer)
- uid: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon*
  name: ReachableStatesOnSingleEpsilon
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnSingleEpsilon_
  commentId: Overload:Automata.Core.Nfa.ReachableStatesOnSingleEpsilon
  isSpec: "True"
  fullName: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon
  nameWithType: Nfa.ReachableStatesOnSingleEpsilon
- uid: Automata.Core.Nfa.ReachableStatesOnSingleSymbol(System.Int32,System.Int32)
  name: ReachableStatesOnSingleSymbol(int, int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnSingleSymbol_System_Int32_System_Int32_
  commentId: M:Automata.Core.Nfa.ReachableStatesOnSingleSymbol(System.Int32,System.Int32)
  name.vb: ReachableStatesOnSingleSymbol(Integer, Integer)
  fullName: Automata.Core.Nfa.ReachableStatesOnSingleSymbol(int, int)
  fullName.vb: Automata.Core.Nfa.ReachableStatesOnSingleSymbol(Integer, Integer)
  nameWithType: Nfa.ReachableStatesOnSingleSymbol(int, int)
  nameWithType.vb: Nfa.ReachableStatesOnSingleSymbol(Integer, Integer)
- uid: Automata.Core.Nfa.ReachableStatesOnSingleSymbol*
  name: ReachableStatesOnSingleSymbol
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnSingleSymbol_
  commentId: Overload:Automata.Core.Nfa.ReachableStatesOnSingleSymbol
  isSpec: "True"
  fullName: Automata.Core.Nfa.ReachableStatesOnSingleSymbol
  nameWithType: Nfa.ReachableStatesOnSingleSymbol
- uid: Automata.Core.Nfa.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name: SetFinal(IEnumerable<int>, bool)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetFinal_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_
  commentId: M:Automata.Core.Nfa.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name.vb: SetFinal(IEnumerable(Of Integer), Boolean)
  fullName: Automata.Core.Nfa.SetFinal(System.Collections.Generic.IEnumerable<int>, bool)
  fullName.vb: Automata.Core.Nfa.SetFinal(System.Collections.Generic.IEnumerable(Of Integer), Boolean)
  nameWithType: Nfa.SetFinal(IEnumerable<int>, bool)
  nameWithType.vb: Nfa.SetFinal(IEnumerable(Of Integer), Boolean)
- uid: Automata.Core.Nfa.SetFinal(System.Int32,System.Boolean)
  name: SetFinal(int, bool)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetFinal_System_Int32_System_Boolean_
  commentId: M:Automata.Core.Nfa.SetFinal(System.Int32,System.Boolean)
  name.vb: SetFinal(Integer, Boolean)
  fullName: Automata.Core.Nfa.SetFinal(int, bool)
  fullName.vb: Automata.Core.Nfa.SetFinal(Integer, Boolean)
  nameWithType: Nfa.SetFinal(int, bool)
  nameWithType.vb: Nfa.SetFinal(Integer, Boolean)
- uid: Automata.Core.Nfa.SetFinal*
  name: SetFinal
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetFinal_
  commentId: Overload:Automata.Core.Nfa.SetFinal
  isSpec: "True"
  fullName: Automata.Core.Nfa.SetFinal
  nameWithType: Nfa.SetFinal
- uid: Automata.Core.Nfa.SetInitial(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name: SetInitial(IEnumerable<int>, bool)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetInitial_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_
  commentId: M:Automata.Core.Nfa.SetInitial(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name.vb: SetInitial(IEnumerable(Of Integer), Boolean)
  fullName: Automata.Core.Nfa.SetInitial(System.Collections.Generic.IEnumerable<int>, bool)
  fullName.vb: Automata.Core.Nfa.SetInitial(System.Collections.Generic.IEnumerable(Of Integer), Boolean)
  nameWithType: Nfa.SetInitial(IEnumerable<int>, bool)
  nameWithType.vb: Nfa.SetInitial(IEnumerable(Of Integer), Boolean)
- uid: Automata.Core.Nfa.SetInitial(System.Int32,System.Boolean)
  name: SetInitial(int, bool)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetInitial_System_Int32_System_Boolean_
  commentId: M:Automata.Core.Nfa.SetInitial(System.Int32,System.Boolean)
  name.vb: SetInitial(Integer, Boolean)
  fullName: Automata.Core.Nfa.SetInitial(int, bool)
  fullName.vb: Automata.Core.Nfa.SetInitial(Integer, Boolean)
  nameWithType: Nfa.SetInitial(int, bool)
  nameWithType.vb: Nfa.SetInitial(Integer, Boolean)
- uid: Automata.Core.Nfa.SetInitial*
  name: SetInitial
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetInitial_
  commentId: Overload:Automata.Core.Nfa.SetInitial
  isSpec: "True"
  fullName: Automata.Core.Nfa.SetInitial
  nameWithType: Nfa.SetInitial
- uid: Automata.Core.Nfa.ToCfa
  name: ToCfa()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ToCfa
  commentId: M:Automata.Core.Nfa.ToCfa
  fullName: Automata.Core.Nfa.ToCfa()
  nameWithType: Nfa.ToCfa()
- uid: Automata.Core.Nfa.ToCfa*
  name: ToCfa
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ToCfa_
  commentId: Overload:Automata.Core.Nfa.ToCfa
  isSpec: "True"
  fullName: Automata.Core.Nfa.ToCfa
  nameWithType: Nfa.ToCfa
- uid: Automata.Core.Nfa.ToDfa
  name: ToDfa()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ToDfa
  commentId: M:Automata.Core.Nfa.ToDfa
  fullName: Automata.Core.Nfa.ToDfa()
  nameWithType: Nfa.ToDfa()
- uid: Automata.Core.Nfa.ToDfa*
  name: ToDfa
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ToDfa_
  commentId: Overload:Automata.Core.Nfa.ToDfa
  isSpec: "True"
  fullName: Automata.Core.Nfa.ToDfa
  nameWithType: Nfa.ToDfa
- uid: Automata.Core.Nfa.ToMinimizedDFA
  name: ToMinimizedDFA()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ToMinimizedDFA
  commentId: M:Automata.Core.Nfa.ToMinimizedDFA
  fullName: Automata.Core.Nfa.ToMinimizedDFA()
  nameWithType: Nfa.ToMinimizedDFA()
- uid: Automata.Core.Nfa.ToMinimizedDFA*
  name: ToMinimizedDFA
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ToMinimizedDFA_
  commentId: Overload:Automata.Core.Nfa.ToMinimizedDFA
  isSpec: "True"
  fullName: Automata.Core.Nfa.ToMinimizedDFA
  nameWithType: Nfa.ToMinimizedDFA
- uid: Automata.Core.Nfa.Transitions(System.Int32)
  name: Transitions(int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Transitions_System_Int32_
  commentId: M:Automata.Core.Nfa.Transitions(System.Int32)
  name.vb: Transitions(Integer)
  fullName: Automata.Core.Nfa.Transitions(int)
  fullName.vb: Automata.Core.Nfa.Transitions(Integer)
  nameWithType: Nfa.Transitions(int)
  nameWithType.vb: Nfa.Transitions(Integer)
- uid: Automata.Core.Nfa.Transitions(System.Int32,System.Int32)
  name: Transitions(int, int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Transitions_System_Int32_System_Int32_
  commentId: M:Automata.Core.Nfa.Transitions(System.Int32,System.Int32)
  name.vb: Transitions(Integer, Integer)
  fullName: Automata.Core.Nfa.Transitions(int, int)
  fullName.vb: Automata.Core.Nfa.Transitions(Integer, Integer)
  nameWithType: Nfa.Transitions(int, int)
  nameWithType.vb: Nfa.Transitions(Integer, Integer)
- uid: Automata.Core.Nfa.Transitions*
  name: Transitions
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Transitions_
  commentId: Overload:Automata.Core.Nfa.Transitions
  isSpec: "True"
  fullName: Automata.Core.Nfa.Transitions
  nameWithType: Nfa.Transitions
- uid: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.EpsilonTransition})
  name: UnionWith(IEnumerable<EpsilonTransition>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_System_Collections_Generic_IEnumerable_Automata_Core_EpsilonTransition__
  commentId: M:Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.EpsilonTransition})
  name.vb: UnionWith(IEnumerable(Of EpsilonTransition))
  fullName: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable<Automata.Core.EpsilonTransition>)
  fullName.vb: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable(Of Automata.Core.EpsilonTransition))
  nameWithType: Nfa.UnionWith(IEnumerable<EpsilonTransition>)
  nameWithType.vb: Nfa.UnionWith(IEnumerable(Of EpsilonTransition))
- uid: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.Transition})
  name: UnionWith(IEnumerable<Transition>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_System_Collections_Generic_IEnumerable_Automata_Core_Transition__
  commentId: M:Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.Transition})
  name.vb: UnionWith(IEnumerable(Of Transition))
  fullName: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable<Automata.Core.Transition>)
  fullName.vb: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable(Of Automata.Core.Transition))
  nameWithType: Nfa.UnionWith(IEnumerable<Transition>)
  nameWithType.vb: Nfa.UnionWith(IEnumerable(Of Transition))
- uid: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name: UnionWith(IEnumerable<IEnumerable<string>>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___
  commentId: M:Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name.vb: UnionWith(IEnumerable(Of IEnumerable(Of String)))
  fullName: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>)
  fullName.vb: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)))
  nameWithType: Nfa.UnionWith(IEnumerable<IEnumerable<string>>)
  nameWithType.vb: Nfa.UnionWith(IEnumerable(Of IEnumerable(Of String)))
- uid: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  name: UnionWith(IEnumerable<string>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  name.vb: UnionWith(IEnumerable(Of String))
  fullName: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: Nfa.UnionWith(IEnumerable<string>)
  nameWithType.vb: Nfa.UnionWith(IEnumerable(Of String))
- uid: Automata.Core.Nfa.UnionWith*
  name: UnionWith
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_
  commentId: Overload:Automata.Core.Nfa.UnionWith
  isSpec: "True"
  fullName: Automata.Core.Nfa.UnionWith
  nameWithType: Nfa.UnionWith
- uid: Automata.Core.Operations
  name: Automata.Core.Operations
  href: Automata.Core.Operations.html
  commentId: N:Automata.Core.Operations
  fullName: Automata.Core.Operations
  nameWithType: Automata.Core.Operations
- uid: Automata.Core.Operations.Determinize
  name: Determinize
  href: Automata.Core.Operations.Determinize.html
  commentId: T:Automata.Core.Operations.Determinize
  fullName: Automata.Core.Operations.Determinize
  nameWithType: Determinize
- uid: Automata.Core.Operations.Determinize.ToDfa(Automata.Core.Nfa)
  name: ToDfa(Nfa)
  href: Automata.Core.Operations.Determinize.html#Automata_Core_Operations_Determinize_ToDfa_Automata_Core_Nfa_
  commentId: M:Automata.Core.Operations.Determinize.ToDfa(Automata.Core.Nfa)
  fullName: Automata.Core.Operations.Determinize.ToDfa(Automata.Core.Nfa)
  nameWithType: Determinize.ToDfa(Nfa)
- uid: Automata.Core.Operations.Determinize.ToDfa*
  name: ToDfa
  href: Automata.Core.Operations.Determinize.html#Automata_Core_Operations_Determinize_ToDfa_
  commentId: Overload:Automata.Core.Operations.Determinize.ToDfa
  isSpec: "True"
  fullName: Automata.Core.Operations.Determinize.ToDfa
  nameWithType: Determinize.ToDfa
- uid: Automata.Core.Operations.Intersect
  name: Intersect
  href: Automata.Core.Operations.Intersect.html
  commentId: T:Automata.Core.Operations.Intersect
  fullName: Automata.Core.Operations.Intersect
  nameWithType: Intersect
- uid: Automata.Core.Operations.Intersect.Intersection(Automata.Core.IDfa,Automata.Core.IDfa)
  name: Intersection(IDfa, IDfa)
  href: Automata.Core.Operations.Intersect.html#Automata_Core_Operations_Intersect_Intersection_Automata_Core_IDfa_Automata_Core_IDfa_
  commentId: M:Automata.Core.Operations.Intersect.Intersection(Automata.Core.IDfa,Automata.Core.IDfa)
  fullName: Automata.Core.Operations.Intersect.Intersection(Automata.Core.IDfa, Automata.Core.IDfa)
  nameWithType: Intersect.Intersection(IDfa, IDfa)
- uid: Automata.Core.Operations.Intersect.Intersection*
  name: Intersection
  href: Automata.Core.Operations.Intersect.html#Automata_Core_Operations_Intersect_Intersection_
  commentId: Overload:Automata.Core.Operations.Intersect.Intersection
  isSpec: "True"
  fullName: Automata.Core.Operations.Intersect.Intersection
  nameWithType: Intersect.Intersection
- uid: Automata.Core.StateView
  name: StateView
  href: Automata.Core.StateView.html
  commentId: T:Automata.Core.StateView
  fullName: Automata.Core.StateView
  nameWithType: StateView
- uid: Automata.Core.StateView.#ctor(System.Int32,Automata.Core.Transition[])
  name: StateView(int, Transition[])
  href: Automata.Core.StateView.html#Automata_Core_StateView__ctor_System_Int32_Automata_Core_Transition___
  commentId: M:Automata.Core.StateView.#ctor(System.Int32,Automata.Core.Transition[])
  name.vb: New(Integer, Transition())
  fullName: Automata.Core.StateView.StateView(int, Automata.Core.Transition[])
  fullName.vb: Automata.Core.StateView.New(Integer, Automata.Core.Transition())
  nameWithType: StateView.StateView(int, Transition[])
  nameWithType.vb: StateView.New(Integer, Transition())
- uid: Automata.Core.StateView.#ctor(System.Int32,System.ReadOnlySpan{Automata.Core.Transition})
  name: StateView(int, ReadOnlySpan<Transition>)
  href: Automata.Core.StateView.html#Automata_Core_StateView__ctor_System_Int32_System_ReadOnlySpan_Automata_Core_Transition__
  commentId: M:Automata.Core.StateView.#ctor(System.Int32,System.ReadOnlySpan{Automata.Core.Transition})
  name.vb: New(Integer, ReadOnlySpan(Of Transition))
  fullName: Automata.Core.StateView.StateView(int, System.ReadOnlySpan<Automata.Core.Transition>)
  fullName.vb: Automata.Core.StateView.New(Integer, System.ReadOnlySpan(Of Automata.Core.Transition))
  nameWithType: StateView.StateView(int, ReadOnlySpan<Transition>)
  nameWithType.vb: StateView.New(Integer, ReadOnlySpan(Of Transition))
- uid: Automata.Core.StateView.#ctor*
  name: StateView
  href: Automata.Core.StateView.html#Automata_Core_StateView__ctor_
  commentId: Overload:Automata.Core.StateView.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.StateView.StateView
  fullName.vb: Automata.Core.StateView.New
  nameWithType: StateView.StateView
  nameWithType.vb: StateView.New
- uid: Automata.Core.StateView.State
  name: State
  href: Automata.Core.StateView.html#Automata_Core_StateView_State
  commentId: P:Automata.Core.StateView.State
  fullName: Automata.Core.StateView.State
  nameWithType: StateView.State
- uid: Automata.Core.StateView.State*
  name: State
  href: Automata.Core.StateView.html#Automata_Core_StateView_State_
  commentId: Overload:Automata.Core.StateView.State
  isSpec: "True"
  fullName: Automata.Core.StateView.State
  nameWithType: StateView.State
- uid: Automata.Core.StateView.Transition(System.Int32)
  name: Transition(int)
  href: Automata.Core.StateView.html#Automata_Core_StateView_Transition_System_Int32_
  commentId: M:Automata.Core.StateView.Transition(System.Int32)
  name.vb: Transition(Integer)
  fullName: Automata.Core.StateView.Transition(int)
  fullName.vb: Automata.Core.StateView.Transition(Integer)
  nameWithType: StateView.Transition(int)
  nameWithType.vb: StateView.Transition(Integer)
- uid: Automata.Core.StateView.Transition*
  name: Transition
  href: Automata.Core.StateView.html#Automata_Core_StateView_Transition_
  commentId: Overload:Automata.Core.StateView.Transition
  isSpec: "True"
  fullName: Automata.Core.StateView.Transition
  nameWithType: StateView.Transition
- uid: Automata.Core.StateView.Transitions
  name: Transitions
  href: Automata.Core.StateView.html#Automata_Core_StateView_Transitions
  commentId: F:Automata.Core.StateView.Transitions
  fullName: Automata.Core.StateView.Transitions
  nameWithType: StateView.Transitions
- uid: Automata.Core.Transition
  name: Transition
  href: Automata.Core.Transition.html
  commentId: T:Automata.Core.Transition
  fullName: Automata.Core.Transition
  nameWithType: Transition
- uid: Automata.Core.Transition.#ctor
  name: Transition()
  href: Automata.Core.Transition.html#Automata_Core_Transition__ctor
  commentId: M:Automata.Core.Transition.#ctor
  name.vb: New()
  fullName: Automata.Core.Transition.Transition()
  fullName.vb: Automata.Core.Transition.New()
  nameWithType: Transition.Transition()
  nameWithType.vb: Transition.New()
- uid: Automata.Core.Transition.#ctor(System.Int32,System.Int32,System.Int32)
  name: Transition(int, int, int)
  href: Automata.Core.Transition.html#Automata_Core_Transition__ctor_System_Int32_System_Int32_System_Int32_
  commentId: M:Automata.Core.Transition.#ctor(System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer)
  fullName: Automata.Core.Transition.Transition(int, int, int)
  fullName.vb: Automata.Core.Transition.New(Integer, Integer, Integer)
  nameWithType: Transition.Transition(int, int, int)
  nameWithType.vb: Transition.New(Integer, Integer, Integer)
- uid: Automata.Core.Transition.#ctor*
  name: Transition
  href: Automata.Core.Transition.html#Automata_Core_Transition__ctor_
  commentId: Overload:Automata.Core.Transition.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Transition.Transition
  fullName.vb: Automata.Core.Transition.New
  nameWithType: Transition.Transition
  nameWithType.vb: Transition.New
- uid: Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  name: CompareTo(Transition)
  href: Automata.Core.Transition.html#Automata_Core_Transition_CompareTo_Automata_Core_Transition_
  commentId: M:Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  fullName: Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  nameWithType: Transition.CompareTo(Transition)
- uid: Automata.Core.Transition.CompareTo*
  name: CompareTo
  href: Automata.Core.Transition.html#Automata_Core_Transition_CompareTo_
  commentId: Overload:Automata.Core.Transition.CompareTo
  isSpec: "True"
  fullName: Automata.Core.Transition.CompareTo
  nameWithType: Transition.CompareTo
- uid: Automata.Core.Transition.FromState
  name: FromState
  href: Automata.Core.Transition.html#Automata_Core_Transition_FromState
  commentId: P:Automata.Core.Transition.FromState
  fullName: Automata.Core.Transition.FromState
  nameWithType: Transition.FromState
- uid: Automata.Core.Transition.FromState*
  name: FromState
  href: Automata.Core.Transition.html#Automata_Core_Transition_FromState_
  commentId: Overload:Automata.Core.Transition.FromState
  isSpec: "True"
  fullName: Automata.Core.Transition.FromState
  nameWithType: Transition.FromState
- uid: Automata.Core.Transition.Invalid
  name: Invalid
  href: Automata.Core.Transition.html#Automata_Core_Transition_Invalid
  commentId: P:Automata.Core.Transition.Invalid
  fullName: Automata.Core.Transition.Invalid
  nameWithType: Transition.Invalid
- uid: Automata.Core.Transition.Invalid*
  name: Invalid
  href: Automata.Core.Transition.html#Automata_Core_Transition_Invalid_
  commentId: Overload:Automata.Core.Transition.Invalid
  isSpec: "True"
  fullName: Automata.Core.Transition.Invalid
  nameWithType: Transition.Invalid
- uid: Automata.Core.Transition.IsInvalid
  name: IsInvalid
  href: Automata.Core.Transition.html#Automata_Core_Transition_IsInvalid
  commentId: P:Automata.Core.Transition.IsInvalid
  fullName: Automata.Core.Transition.IsInvalid
  nameWithType: Transition.IsInvalid
- uid: Automata.Core.Transition.IsInvalid*
  name: IsInvalid
  href: Automata.Core.Transition.html#Automata_Core_Transition_IsInvalid_
  commentId: Overload:Automata.Core.Transition.IsInvalid
  isSpec: "True"
  fullName: Automata.Core.Transition.IsInvalid
  nameWithType: Transition.IsInvalid
- uid: Automata.Core.Transition.MaxTrans(System.Int32,System.Int32)
  name: MaxTrans(int, int)
  href: Automata.Core.Transition.html#Automata_Core_Transition_MaxTrans_System_Int32_System_Int32_
  commentId: M:Automata.Core.Transition.MaxTrans(System.Int32,System.Int32)
  name.vb: MaxTrans(Integer, Integer)
  fullName: Automata.Core.Transition.MaxTrans(int, int)
  fullName.vb: Automata.Core.Transition.MaxTrans(Integer, Integer)
  nameWithType: Transition.MaxTrans(int, int)
  nameWithType.vb: Transition.MaxTrans(Integer, Integer)
- uid: Automata.Core.Transition.MaxTrans*
  name: MaxTrans
  href: Automata.Core.Transition.html#Automata_Core_Transition_MaxTrans_
  commentId: Overload:Automata.Core.Transition.MaxTrans
  isSpec: "True"
  fullName: Automata.Core.Transition.MaxTrans
  nameWithType: Transition.MaxTrans
- uid: Automata.Core.Transition.MinTrans(System.Int32,System.Int32)
  name: MinTrans(int, int)
  href: Automata.Core.Transition.html#Automata_Core_Transition_MinTrans_System_Int32_System_Int32_
  commentId: M:Automata.Core.Transition.MinTrans(System.Int32,System.Int32)
  name.vb: MinTrans(Integer, Integer)
  fullName: Automata.Core.Transition.MinTrans(int, int)
  fullName.vb: Automata.Core.Transition.MinTrans(Integer, Integer)
  nameWithType: Transition.MinTrans(int, int)
  nameWithType.vb: Transition.MinTrans(Integer, Integer)
- uid: Automata.Core.Transition.MinTrans*
  name: MinTrans
  href: Automata.Core.Transition.html#Automata_Core_Transition_MinTrans_
  commentId: Overload:Automata.Core.Transition.MinTrans
  isSpec: "True"
  fullName: Automata.Core.Transition.MinTrans
  nameWithType: Transition.MinTrans
- uid: Automata.Core.Transition.Reverse
  name: Reverse()
  href: Automata.Core.Transition.html#Automata_Core_Transition_Reverse
  commentId: M:Automata.Core.Transition.Reverse
  fullName: Automata.Core.Transition.Reverse()
  nameWithType: Transition.Reverse()
- uid: Automata.Core.Transition.Reverse*
  name: Reverse
  href: Automata.Core.Transition.html#Automata_Core_Transition_Reverse_
  commentId: Overload:Automata.Core.Transition.Reverse
  isSpec: "True"
  fullName: Automata.Core.Transition.Reverse
  nameWithType: Transition.Reverse
- uid: Automata.Core.Transition.Symbol
  name: Symbol
  href: Automata.Core.Transition.html#Automata_Core_Transition_Symbol
  commentId: P:Automata.Core.Transition.Symbol
  fullName: Automata.Core.Transition.Symbol
  nameWithType: Transition.Symbol
- uid: Automata.Core.Transition.Symbol*
  name: Symbol
  href: Automata.Core.Transition.html#Automata_Core_Transition_Symbol_
  commentId: Overload:Automata.Core.Transition.Symbol
  isSpec: "True"
  fullName: Automata.Core.Transition.Symbol
  nameWithType: Transition.Symbol
- uid: Automata.Core.Transition.ToState
  name: ToState
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToState
  commentId: P:Automata.Core.Transition.ToState
  fullName: Automata.Core.Transition.ToState
  nameWithType: Transition.ToState
- uid: Automata.Core.Transition.ToState*
  name: ToState
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToState_
  commentId: Overload:Automata.Core.Transition.ToState
  isSpec: "True"
  fullName: Automata.Core.Transition.ToState
  nameWithType: Transition.ToState
- uid: Automata.Core.Transition.ToString
  name: ToString()
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToString
  commentId: M:Automata.Core.Transition.ToString
  fullName: Automata.Core.Transition.ToString()
  nameWithType: Transition.ToString()
- uid: Automata.Core.Transition.ToString*
  name: ToString
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToString_
  commentId: Overload:Automata.Core.Transition.ToString
  isSpec: "True"
  fullName: Automata.Core.Transition.ToString
  nameWithType: Transition.ToString
- uid: Automata.Visualization
  name: Automata.Visualization
  href: Automata.Visualization.html
  commentId: N:Automata.Visualization
  fullName: Automata.Visualization
  nameWithType: Automata.Visualization
- uid: Automata.Visualization.GraphFactory
  name: GraphFactory
  href: Automata.Visualization.GraphFactory.html
  commentId: T:Automata.Visualization.GraphFactory
  fullName: Automata.Visualization.GraphFactory
  nameWithType: GraphFactory
- uid: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.IFsa,System.Boolean,Microsoft.Msagl.Drawing.LayerDirection,System.Boolean)
  name: CreateGraph(IFsa, bool, LayerDirection, bool)
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_Automata_Core_IFsa_System_Boolean_Microsoft_Msagl_Drawing_LayerDirection_System_Boolean_
  commentId: M:Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.IFsa,System.Boolean,Microsoft.Msagl.Drawing.LayerDirection,System.Boolean)
  name.vb: CreateGraph(IFsa, Boolean, LayerDirection, Boolean)
  fullName: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.IFsa, bool, Microsoft.Msagl.Drawing.LayerDirection, bool)
  fullName.vb: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.IFsa, Boolean, Microsoft.Msagl.Drawing.LayerDirection, Boolean)
  nameWithType: GraphFactory.CreateGraph(IFsa, bool, LayerDirection, bool)
  nameWithType.vb: GraphFactory.CreateGraph(IFsa, Boolean, LayerDirection, Boolean)
- uid: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)
  name: CreateGraph(IEnumerable<IEnumerable<string>>, bool)
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___System_Boolean_
  commentId: M:Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)
  name.vb: CreateGraph(IEnumerable(Of IEnumerable(Of String)), Boolean)
  fullName: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>, bool)
  fullName.vb: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)), Boolean)
  nameWithType: GraphFactory.CreateGraph(IEnumerable<IEnumerable<string>>, bool)
  nameWithType.vb: GraphFactory.CreateGraph(IEnumerable(Of IEnumerable(Of String)), Boolean)
- uid: Automata.Visualization.GraphFactory.CreateGraph*
  name: CreateGraph
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_
  commentId: Overload:Automata.Visualization.GraphFactory.CreateGraph
  isSpec: "True"
  fullName: Automata.Visualization.GraphFactory.CreateGraph
  nameWithType: GraphFactory.CreateGraph
- uid: Automata.Visualization.GraphView
  name: GraphView
  href: Automata.Visualization.GraphView.html
  commentId: T:Automata.Visualization.GraphView
  fullName: Automata.Visualization.GraphView
  nameWithType: GraphView
- uid: Automata.Visualization.GraphView.Dispose(System.Boolean)
  name: Dispose(bool)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Dispose_System_Boolean_
  commentId: M:Automata.Visualization.GraphView.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: Automata.Visualization.GraphView.Dispose(bool)
  fullName.vb: Automata.Visualization.GraphView.Dispose(Boolean)
  nameWithType: GraphView.Dispose(bool)
  nameWithType.vb: GraphView.Dispose(Boolean)
- uid: Automata.Visualization.GraphView.Dispose*
  name: Dispose
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Dispose_
  commentId: Overload:Automata.Visualization.GraphView.Dispose
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.Dispose
  nameWithType: GraphView.Dispose
- uid: Automata.Visualization.GraphView.Invoke(System.Action)
  name: Invoke(Action)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Invoke_System_Action_
  commentId: M:Automata.Visualization.GraphView.Invoke(System.Action)
  fullName: Automata.Visualization.GraphView.Invoke(System.Action)
  nameWithType: GraphView.Invoke(Action)
- uid: Automata.Visualization.GraphView.Invoke*
  name: Invoke
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Invoke_
  commentId: Overload:Automata.Visualization.GraphView.Invoke
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.Invoke
  nameWithType: GraphView.Invoke
- uid: Automata.Visualization.GraphView.OpenNew
  name: OpenNew()
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew
  commentId: M:Automata.Visualization.GraphView.OpenNew
  fullName: Automata.Visualization.GraphView.OpenNew()
  nameWithType: GraphView.OpenNew()
- uid: Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  name: OpenNew(Graph)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew_Microsoft_Msagl_Drawing_Graph_
  commentId: M:Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  fullName: Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  nameWithType: GraphView.OpenNew(Graph)
- uid: Automata.Visualization.GraphView.OpenNew*
  name: OpenNew
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew_
  commentId: Overload:Automata.Visualization.GraphView.OpenNew
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.OpenNew
  nameWithType: GraphView.OpenNew
- uid: Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  name: SetGraph(Graph)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_SetGraph_Microsoft_Msagl_Drawing_Graph_
  commentId: M:Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  fullName: Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  nameWithType: GraphView.SetGraph(Graph)
- uid: Automata.Visualization.GraphView.SetGraph*
  name: SetGraph
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_SetGraph_
  commentId: Overload:Automata.Visualization.GraphView.SetGraph
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.SetGraph
  nameWithType: GraphView.SetGraph
