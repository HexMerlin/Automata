### YamlMime:XRefMap
sorted: true
references:
- uid: Automata.Core
  name: Automata.Core
  href: Automata.Core.html
  commentId: N:Automata.Core
  fullName: Automata.Core
  nameWithType: Automata.Core
- uid: Automata.Core.Alang
  name: Automata.Core.Alang
  href: Automata.Core.Alang.html
  commentId: N:Automata.Core.Alang
  fullName: Automata.Core.Alang
  nameWithType: Automata.Core.Alang
- uid: Automata.Core.Alang.AlangCursor
  name: AlangCursor
  href: Automata.Core.Alang.AlangCursor.html
  commentId: T:Automata.Core.Alang.AlangCursor
  fullName: Automata.Core.Alang.AlangCursor
  nameWithType: AlangCursor
- uid: Automata.Core.Alang.AlangCursor.#ctor(System.String)
  name: AlangCursor(string)
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor__ctor_System_String_
  commentId: M:Automata.Core.Alang.AlangCursor.#ctor(System.String)
  name.vb: New(String)
  fullName: Automata.Core.Alang.AlangCursor.AlangCursor(string)
  fullName.vb: Automata.Core.Alang.AlangCursor.New(String)
  nameWithType: AlangCursor.AlangCursor(string)
  nameWithType.vb: AlangCursor.New(String)
- uid: Automata.Core.Alang.AlangCursor.#ctor*
  name: AlangCursor
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor__ctor_
  commentId: Overload:Automata.Core.Alang.AlangCursor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.AlangCursor.AlangCursor
  fullName.vb: Automata.Core.Alang.AlangCursor.New
  nameWithType: AlangCursor.AlangCursor
  nameWithType.vb: AlangCursor.New
- uid: Automata.Core.Alang.AlangCursor.ConsumeSymbol
  name: ConsumeSymbol()
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ConsumeSymbol
  commentId: M:Automata.Core.Alang.AlangCursor.ConsumeSymbol
  fullName: Automata.Core.Alang.AlangCursor.ConsumeSymbol()
  nameWithType: AlangCursor.ConsumeSymbol()
- uid: Automata.Core.Alang.AlangCursor.ConsumeSymbol*
  name: ConsumeSymbol
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ConsumeSymbol_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ConsumeSymbol
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ConsumeSymbol
  nameWithType: AlangCursor.ConsumeSymbol
- uid: Automata.Core.Alang.AlangCursor.CursorIndex
  name: CursorIndex
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_CursorIndex
  commentId: P:Automata.Core.Alang.AlangCursor.CursorIndex
  fullName: Automata.Core.Alang.AlangCursor.CursorIndex
  nameWithType: AlangCursor.CursorIndex
- uid: Automata.Core.Alang.AlangCursor.CursorIndex*
  name: CursorIndex
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_CursorIndex_
  commentId: Overload:Automata.Core.Alang.AlangCursor.CursorIndex
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.CursorIndex
  nameWithType: AlangCursor.CursorIndex
- uid: Automata.Core.Alang.AlangCursor.Is(System.Char)
  name: Is(char)
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_Is_System_Char_
  commentId: M:Automata.Core.Alang.AlangCursor.Is(System.Char)
  name.vb: Is(Char)
  fullName: Automata.Core.Alang.AlangCursor.Is(char)
  fullName.vb: Automata.Core.Alang.AlangCursor.Is(Char)
  nameWithType: AlangCursor.Is(char)
  nameWithType.vb: AlangCursor.Is(Char)
- uid: Automata.Core.Alang.AlangCursor.Is*
  name: Is
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_Is_
  commentId: Overload:Automata.Core.Alang.AlangCursor.Is
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.Is
  nameWithType: AlangCursor.Is
- uid: Automata.Core.Alang.AlangCursor.IsEmpty
  name: IsEmpty
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsEmpty
  commentId: P:Automata.Core.Alang.AlangCursor.IsEmpty
  fullName: Automata.Core.Alang.AlangCursor.IsEmpty
  nameWithType: AlangCursor.IsEmpty
- uid: Automata.Core.Alang.AlangCursor.IsEmpty*
  name: IsEmpty
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsEmpty_
  commentId: Overload:Automata.Core.Alang.AlangCursor.IsEmpty
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.IsEmpty
  nameWithType: AlangCursor.IsEmpty
- uid: Automata.Core.Alang.AlangCursor.IsExpressionStart
  name: IsExpressionStart
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsExpressionStart
  commentId: P:Automata.Core.Alang.AlangCursor.IsExpressionStart
  fullName: Automata.Core.Alang.AlangCursor.IsExpressionStart
  nameWithType: AlangCursor.IsExpressionStart
- uid: Automata.Core.Alang.AlangCursor.IsExpressionStart*
  name: IsExpressionStart
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsExpressionStart_
  commentId: Overload:Automata.Core.Alang.AlangCursor.IsExpressionStart
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.IsExpressionStart
  nameWithType: AlangCursor.IsExpressionStart
- uid: Automata.Core.Alang.AlangCursor.IsNot(System.Char)
  name: IsNot(char)
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsNot_System_Char_
  commentId: M:Automata.Core.Alang.AlangCursor.IsNot(System.Char)
  name.vb: IsNot(Char)
  fullName: Automata.Core.Alang.AlangCursor.IsNot(char)
  fullName.vb: Automata.Core.Alang.AlangCursor.IsNot(Char)
  nameWithType: AlangCursor.IsNot(char)
  nameWithType.vb: AlangCursor.IsNot(Char)
- uid: Automata.Core.Alang.AlangCursor.IsNot*
  name: IsNot
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_IsNot_
  commentId: Overload:Automata.Core.Alang.AlangCursor.IsNot
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.IsNot
  nameWithType: AlangCursor.IsNot
- uid: Automata.Core.Alang.AlangCursor.NextAsString
  name: NextAsString
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_NextAsString
  commentId: P:Automata.Core.Alang.AlangCursor.NextAsString
  fullName: Automata.Core.Alang.AlangCursor.NextAsString
  nameWithType: AlangCursor.NextAsString
- uid: Automata.Core.Alang.AlangCursor.NextAsString*
  name: NextAsString
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_NextAsString_
  commentId: Overload:Automata.Core.Alang.AlangCursor.NextAsString
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.NextAsString
  nameWithType: AlangCursor.NextAsString
- uid: Automata.Core.Alang.AlangCursor.ShouldBeRightOperand(System.Char)
  name: ShouldBeRightOperand(char)
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldBeRightOperand_System_Char_
  commentId: M:Automata.Core.Alang.AlangCursor.ShouldBeRightOperand(System.Char)
  name.vb: ShouldBeRightOperand(Char)
  fullName: Automata.Core.Alang.AlangCursor.ShouldBeRightOperand(char)
  fullName.vb: Automata.Core.Alang.AlangCursor.ShouldBeRightOperand(Char)
  nameWithType: AlangCursor.ShouldBeRightOperand(char)
  nameWithType.vb: AlangCursor.ShouldBeRightOperand(Char)
- uid: Automata.Core.Alang.AlangCursor.ShouldBeRightOperand*
  name: ShouldBeRightOperand
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldBeRightOperand_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ShouldBeRightOperand
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ShouldBeRightOperand
  nameWithType: AlangCursor.ShouldBeRightOperand
- uid: Automata.Core.Alang.AlangCursor.ShouldBeRightParen
  name: ShouldBeRightParen()
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldBeRightParen
  commentId: M:Automata.Core.Alang.AlangCursor.ShouldBeRightParen
  fullName: Automata.Core.Alang.AlangCursor.ShouldBeRightParen()
  nameWithType: AlangCursor.ShouldBeRightParen()
- uid: Automata.Core.Alang.AlangCursor.ShouldBeRightParen*
  name: ShouldBeRightParen
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldBeRightParen_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ShouldBeRightParen
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ShouldBeRightParen
  nameWithType: AlangCursor.ShouldBeRightParen
- uid: Automata.Core.Alang.AlangCursor.ShouldNotBeEmpty
  name: ShouldNotBeEmpty()
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldNotBeEmpty
  commentId: M:Automata.Core.Alang.AlangCursor.ShouldNotBeEmpty
  fullName: Automata.Core.Alang.AlangCursor.ShouldNotBeEmpty()
  nameWithType: AlangCursor.ShouldNotBeEmpty()
- uid: Automata.Core.Alang.AlangCursor.ShouldNotBeEmpty*
  name: ShouldNotBeEmpty
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldNotBeEmpty_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ShouldNotBeEmpty
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ShouldNotBeEmpty
  nameWithType: AlangCursor.ShouldNotBeEmpty
- uid: Automata.Core.Alang.AlangCursor.ShouldNotBeOperator
  name: ShouldNotBeOperator()
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldNotBeOperator
  commentId: M:Automata.Core.Alang.AlangCursor.ShouldNotBeOperator
  fullName: Automata.Core.Alang.AlangCursor.ShouldNotBeOperator()
  nameWithType: AlangCursor.ShouldNotBeOperator()
- uid: Automata.Core.Alang.AlangCursor.ShouldNotBeOperator*
  name: ShouldNotBeOperator
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldNotBeOperator_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ShouldNotBeOperator
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ShouldNotBeOperator
  nameWithType: AlangCursor.ShouldNotBeOperator
- uid: Automata.Core.Alang.AlangCursor.ShouldNotBeRightParen
  name: ShouldNotBeRightParen()
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldNotBeRightParen
  commentId: M:Automata.Core.Alang.AlangCursor.ShouldNotBeRightParen
  fullName: Automata.Core.Alang.AlangCursor.ShouldNotBeRightParen()
  nameWithType: AlangCursor.ShouldNotBeRightParen()
- uid: Automata.Core.Alang.AlangCursor.ShouldNotBeRightParen*
  name: ShouldNotBeRightParen
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ShouldNotBeRightParen_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ShouldNotBeRightParen
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ShouldNotBeRightParen
  nameWithType: AlangCursor.ShouldNotBeRightParen
- uid: Automata.Core.Alang.AlangCursor.ToString
  name: ToString()
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ToString
  commentId: M:Automata.Core.Alang.AlangCursor.ToString
  fullName: Automata.Core.Alang.AlangCursor.ToString()
  nameWithType: AlangCursor.ToString()
- uid: Automata.Core.Alang.AlangCursor.ToString*
  name: ToString
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_ToString_
  commentId: Overload:Automata.Core.Alang.AlangCursor.ToString
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.ToString
  nameWithType: AlangCursor.ToString
- uid: Automata.Core.Alang.AlangCursor.TryConsume(System.Char)
  name: TryConsume(char)
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsume_System_Char_
  commentId: M:Automata.Core.Alang.AlangCursor.TryConsume(System.Char)
  name.vb: TryConsume(Char)
  fullName: Automata.Core.Alang.AlangCursor.TryConsume(char)
  fullName.vb: Automata.Core.Alang.AlangCursor.TryConsume(Char)
  nameWithType: AlangCursor.TryConsume(char)
  nameWithType.vb: AlangCursor.TryConsume(Char)
- uid: Automata.Core.Alang.AlangCursor.TryConsume*
  name: TryConsume
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsume_
  commentId: Overload:Automata.Core.Alang.AlangCursor.TryConsume
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.TryConsume
  nameWithType: AlangCursor.TryConsume
- uid: Automata.Core.Alang.AlangCursor.TryConsumeAny(System.Char[])
  name: TryConsumeAny(params char[])
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsumeAny_System_Char___
  commentId: M:Automata.Core.Alang.AlangCursor.TryConsumeAny(System.Char[])
  name.vb: TryConsumeAny(ParamArray Char())
  fullName: Automata.Core.Alang.AlangCursor.TryConsumeAny(params char[])
  fullName.vb: Automata.Core.Alang.AlangCursor.TryConsumeAny(ParamArray Char())
  nameWithType: AlangCursor.TryConsumeAny(params char[])
  nameWithType.vb: AlangCursor.TryConsumeAny(ParamArray Char())
- uid: Automata.Core.Alang.AlangCursor.TryConsumeAny*
  name: TryConsumeAny
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsumeAny_
  commentId: Overload:Automata.Core.Alang.AlangCursor.TryConsumeAny
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.TryConsumeAny
  nameWithType: AlangCursor.TryConsumeAny
- uid: Automata.Core.Alang.AlangCursor.TryConsumeBinaryOperator(System.Char)
  name: TryConsumeBinaryOperator(char)
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsumeBinaryOperator_System_Char_
  commentId: M:Automata.Core.Alang.AlangCursor.TryConsumeBinaryOperator(System.Char)
  name.vb: TryConsumeBinaryOperator(Char)
  fullName: Automata.Core.Alang.AlangCursor.TryConsumeBinaryOperator(char)
  fullName.vb: Automata.Core.Alang.AlangCursor.TryConsumeBinaryOperator(Char)
  nameWithType: AlangCursor.TryConsumeBinaryOperator(char)
  nameWithType.vb: AlangCursor.TryConsumeBinaryOperator(Char)
- uid: Automata.Core.Alang.AlangCursor.TryConsumeBinaryOperator*
  name: TryConsumeBinaryOperator
  href: Automata.Core.Alang.AlangCursor.html#Automata_Core_Alang_AlangCursor_TryConsumeBinaryOperator_
  commentId: Overload:Automata.Core.Alang.AlangCursor.TryConsumeBinaryOperator
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangCursor.TryConsumeBinaryOperator
  nameWithType: AlangCursor.TryConsumeBinaryOperator
- uid: Automata.Core.Alang.AlangFormatException
  name: AlangFormatException
  href: Automata.Core.Alang.AlangFormatException.html
  commentId: T:Automata.Core.Alang.AlangFormatException
  fullName: Automata.Core.Alang.AlangFormatException
  nameWithType: AlangFormatException
- uid: Automata.Core.Alang.AlangFormatException.Assert(System.Boolean,Automata.Core.Alang.ParseErrorReason,System.Int32,System.String)
  name: Assert(bool, ParseErrorReason, int, string)
  href: Automata.Core.Alang.AlangFormatException.html#Automata_Core_Alang_AlangFormatException_Assert_System_Boolean_Automata_Core_Alang_ParseErrorReason_System_Int32_System_String_
  commentId: M:Automata.Core.Alang.AlangFormatException.Assert(System.Boolean,Automata.Core.Alang.ParseErrorReason,System.Int32,System.String)
  name.vb: Assert(Boolean, ParseErrorReason, Integer, String)
  fullName: Automata.Core.Alang.AlangFormatException.Assert(bool, Automata.Core.Alang.ParseErrorReason, int, string)
  fullName.vb: Automata.Core.Alang.AlangFormatException.Assert(Boolean, Automata.Core.Alang.ParseErrorReason, Integer, String)
  nameWithType: AlangFormatException.Assert(bool, ParseErrorReason, int, string)
  nameWithType.vb: AlangFormatException.Assert(Boolean, ParseErrorReason, Integer, String)
- uid: Automata.Core.Alang.AlangFormatException.Assert*
  name: Assert
  href: Automata.Core.Alang.AlangFormatException.html#Automata_Core_Alang_AlangFormatException_Assert_
  commentId: Overload:Automata.Core.Alang.AlangFormatException.Assert
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangFormatException.Assert
  nameWithType: AlangFormatException.Assert
- uid: Automata.Core.Alang.AlangFormatException.ErrorReason
  name: ErrorReason
  href: Automata.Core.Alang.AlangFormatException.html#Automata_Core_Alang_AlangFormatException_ErrorReason
  commentId: F:Automata.Core.Alang.AlangFormatException.ErrorReason
  fullName: Automata.Core.Alang.AlangFormatException.ErrorReason
  nameWithType: AlangFormatException.ErrorReason
- uid: Automata.Core.Alang.AlangFormatException.Index
  name: Index
  href: Automata.Core.Alang.AlangFormatException.html#Automata_Core_Alang_AlangFormatException_Index
  commentId: F:Automata.Core.Alang.AlangFormatException.Index
  fullName: Automata.Core.Alang.AlangFormatException.Index
  nameWithType: AlangFormatException.Index
- uid: Automata.Core.Alang.AlangRegex
  name: AlangRegex
  href: Automata.Core.Alang.AlangRegex.html
  commentId: T:Automata.Core.Alang.AlangRegex
  fullName: Automata.Core.Alang.AlangRegex
  nameWithType: AlangRegex
- uid: Automata.Core.Alang.AlangRegex.#ctor
  name: AlangRegex()
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex__ctor
  commentId: M:Automata.Core.Alang.AlangRegex.#ctor
  name.vb: New()
  fullName: Automata.Core.Alang.AlangRegex.AlangRegex()
  fullName.vb: Automata.Core.Alang.AlangRegex.New()
  nameWithType: AlangRegex.AlangRegex()
  nameWithType.vb: AlangRegex.New()
- uid: Automata.Core.Alang.AlangRegex.#ctor*
  name: AlangRegex
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex__ctor_
  commentId: Overload:Automata.Core.Alang.AlangRegex.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.AlangRegex.AlangRegex
  fullName.vb: Automata.Core.Alang.AlangRegex.New
  nameWithType: AlangRegex.AlangRegex
  nameWithType.vb: AlangRegex.New
- uid: Automata.Core.Alang.AlangRegex.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_AlangExpressionString
  commentId: P:Automata.Core.Alang.AlangRegex.AlangExpressionString
  fullName: Automata.Core.Alang.AlangRegex.AlangExpressionString
  nameWithType: AlangRegex.AlangExpressionString
- uid: Automata.Core.Alang.AlangRegex.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.AlangRegex.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangRegex.AlangExpressionString
  nameWithType: AlangRegex.AlangExpressionString
- uid: Automata.Core.Alang.AlangRegex.Compile
  name: Compile()
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Compile
  commentId: M:Automata.Core.Alang.AlangRegex.Compile
  fullName: Automata.Core.Alang.AlangRegex.Compile()
  nameWithType: AlangRegex.Compile()
- uid: Automata.Core.Alang.AlangRegex.Compile(Automata.Core.Alphabet)
  name: Compile(Alphabet)
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Compile_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Alang.AlangRegex.Compile(Automata.Core.Alphabet)
  fullName: Automata.Core.Alang.AlangRegex.Compile(Automata.Core.Alphabet)
  nameWithType: AlangRegex.Compile(Alphabet)
- uid: Automata.Core.Alang.AlangRegex.Compile(System.String)
  name: Compile(string)
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Compile_System_String_
  commentId: M:Automata.Core.Alang.AlangRegex.Compile(System.String)
  name.vb: Compile(String)
  fullName: Automata.Core.Alang.AlangRegex.Compile(string)
  fullName.vb: Automata.Core.Alang.AlangRegex.Compile(String)
  nameWithType: AlangRegex.Compile(string)
  nameWithType.vb: AlangRegex.Compile(String)
- uid: Automata.Core.Alang.AlangRegex.Compile(System.String,System.String[])
  name: Compile(string, params string[])
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Compile_System_String_System_String___
  commentId: M:Automata.Core.Alang.AlangRegex.Compile(System.String,System.String[])
  name.vb: Compile(String, ParamArray String())
  fullName: Automata.Core.Alang.AlangRegex.Compile(string, params string[])
  fullName.vb: Automata.Core.Alang.AlangRegex.Compile(String, ParamArray String())
  nameWithType: AlangRegex.Compile(string, params string[])
  nameWithType.vb: AlangRegex.Compile(String, ParamArray String())
- uid: Automata.Core.Alang.AlangRegex.Compile(System.String[])
  name: Compile(params string[])
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Compile_System_String___
  commentId: M:Automata.Core.Alang.AlangRegex.Compile(System.String[])
  name.vb: Compile(ParamArray String())
  fullName: Automata.Core.Alang.AlangRegex.Compile(params string[])
  fullName.vb: Automata.Core.Alang.AlangRegex.Compile(ParamArray String())
  nameWithType: AlangRegex.Compile(params string[])
  nameWithType.vb: AlangRegex.Compile(ParamArray String())
- uid: Automata.Core.Alang.AlangRegex.Compile*
  name: Compile
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Compile_
  commentId: Overload:Automata.Core.Alang.AlangRegex.Compile
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangRegex.Compile
  nameWithType: AlangRegex.Compile
- uid: Automata.Core.Alang.AlangRegex.DescendantsAndSelf
  name: DescendantsAndSelf()
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_DescendantsAndSelf
  commentId: M:Automata.Core.Alang.AlangRegex.DescendantsAndSelf
  fullName: Automata.Core.Alang.AlangRegex.DescendantsAndSelf()
  nameWithType: AlangRegex.DescendantsAndSelf()
- uid: Automata.Core.Alang.AlangRegex.DescendantsAndSelf*
  name: DescendantsAndSelf
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_DescendantsAndSelf_
  commentId: Overload:Automata.Core.Alang.AlangRegex.DescendantsAndSelf
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangRegex.DescendantsAndSelf
  nameWithType: AlangRegex.DescendantsAndSelf
- uid: Automata.Core.Alang.AlangRegex.IsEmptyString
  name: IsEmptyString
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_IsEmptyString
  commentId: P:Automata.Core.Alang.AlangRegex.IsEmptyString
  fullName: Automata.Core.Alang.AlangRegex.IsEmptyString
  nameWithType: AlangRegex.IsEmptyString
- uid: Automata.Core.Alang.AlangRegex.IsEmptyString*
  name: IsEmptyString
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_IsEmptyString_
  commentId: Overload:Automata.Core.Alang.AlangRegex.IsEmptyString
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangRegex.IsEmptyString
  nameWithType: AlangRegex.IsEmptyString
- uid: Automata.Core.Alang.AlangRegex.Param(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name: Param(AlangRegex, AlangRegex)
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Param_Automata_Core_Alang_AlangRegex_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.AlangRegex.Param(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  fullName: Automata.Core.Alang.AlangRegex.Param(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  nameWithType: AlangRegex.Param(AlangRegex, AlangRegex)
- uid: Automata.Core.Alang.AlangRegex.Param*
  name: Param
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Param_
  commentId: Overload:Automata.Core.Alang.AlangRegex.Param
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangRegex.Param
  nameWithType: AlangRegex.Param
- uid: Automata.Core.Alang.AlangRegex.Parse(System.String)
  name: Parse(string)
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Parse_System_String_
  commentId: M:Automata.Core.Alang.AlangRegex.Parse(System.String)
  name.vb: Parse(String)
  fullName: Automata.Core.Alang.AlangRegex.Parse(string)
  fullName.vb: Automata.Core.Alang.AlangRegex.Parse(String)
  nameWithType: AlangRegex.Parse(string)
  nameWithType.vb: AlangRegex.Parse(String)
- uid: Automata.Core.Alang.AlangRegex.Parse*
  name: Parse
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Parse_
  commentId: Overload:Automata.Core.Alang.AlangRegex.Parse
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangRegex.Parse
  nameWithType: AlangRegex.Parse
- uid: Automata.Core.Alang.AlangRegex.Precedence
  name: Precedence
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Precedence
  commentId: P:Automata.Core.Alang.AlangRegex.Precedence
  fullName: Automata.Core.Alang.AlangRegex.Precedence
  nameWithType: AlangRegex.Precedence
- uid: Automata.Core.Alang.AlangRegex.Precedence*
  name: Precedence
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_Precedence_
  commentId: Overload:Automata.Core.Alang.AlangRegex.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangRegex.Precedence
  nameWithType: AlangRegex.Precedence
- uid: Automata.Core.Alang.AlangRegex.ToString
  name: ToString()
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_ToString
  commentId: M:Automata.Core.Alang.AlangRegex.ToString
  fullName: Automata.Core.Alang.AlangRegex.ToString()
  nameWithType: AlangRegex.ToString()
- uid: Automata.Core.Alang.AlangRegex.ToString*
  name: ToString
  href: Automata.Core.Alang.AlangRegex.html#Automata_Core_Alang_AlangRegex_ToString_
  commentId: Overload:Automata.Core.Alang.AlangRegex.ToString
  isSpec: "True"
  fullName: Automata.Core.Alang.AlangRegex.ToString
  nameWithType: AlangRegex.ToString
- uid: Automata.Core.Alang.BinaryRegex
  name: BinaryRegex
  href: Automata.Core.Alang.BinaryRegex.html
  commentId: T:Automata.Core.Alang.BinaryRegex
  fullName: Automata.Core.Alang.BinaryRegex
  nameWithType: BinaryRegex
- uid: Automata.Core.Alang.BinaryRegex.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name: BinaryRegex(AlangRegex, AlangRegex)
  href: Automata.Core.Alang.BinaryRegex.html#Automata_Core_Alang_BinaryRegex__ctor_Automata_Core_Alang_AlangRegex_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.BinaryRegex.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex, AlangRegex)
  fullName: Automata.Core.Alang.BinaryRegex.BinaryRegex(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.BinaryRegex.New(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  nameWithType: BinaryRegex.BinaryRegex(AlangRegex, AlangRegex)
  nameWithType.vb: BinaryRegex.New(AlangRegex, AlangRegex)
- uid: Automata.Core.Alang.BinaryRegex.#ctor*
  name: BinaryRegex
  href: Automata.Core.Alang.BinaryRegex.html#Automata_Core_Alang_BinaryRegex__ctor_
  commentId: Overload:Automata.Core.Alang.BinaryRegex.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.BinaryRegex.BinaryRegex
  fullName.vb: Automata.Core.Alang.BinaryRegex.New
  nameWithType: BinaryRegex.BinaryRegex
  nameWithType.vb: BinaryRegex.New
- uid: Automata.Core.Alang.BinaryRegex.Left
  name: Left
  href: Automata.Core.Alang.BinaryRegex.html#Automata_Core_Alang_BinaryRegex_Left
  commentId: P:Automata.Core.Alang.BinaryRegex.Left
  fullName: Automata.Core.Alang.BinaryRegex.Left
  nameWithType: BinaryRegex.Left
- uid: Automata.Core.Alang.BinaryRegex.Left*
  name: Left
  href: Automata.Core.Alang.BinaryRegex.html#Automata_Core_Alang_BinaryRegex_Left_
  commentId: Overload:Automata.Core.Alang.BinaryRegex.Left
  isSpec: "True"
  fullName: Automata.Core.Alang.BinaryRegex.Left
  nameWithType: BinaryRegex.Left
- uid: Automata.Core.Alang.BinaryRegex.Right
  name: Right
  href: Automata.Core.Alang.BinaryRegex.html#Automata_Core_Alang_BinaryRegex_Right
  commentId: P:Automata.Core.Alang.BinaryRegex.Right
  fullName: Automata.Core.Alang.BinaryRegex.Right
  nameWithType: BinaryRegex.Right
- uid: Automata.Core.Alang.BinaryRegex.Right*
  name: Right
  href: Automata.Core.Alang.BinaryRegex.html#Automata_Core_Alang_BinaryRegex_Right_
  commentId: Overload:Automata.Core.Alang.BinaryRegex.Right
  isSpec: "True"
  fullName: Automata.Core.Alang.BinaryRegex.Right
  nameWithType: BinaryRegex.Right
- uid: Automata.Core.Alang.Chars
  name: Chars
  href: Automata.Core.Alang.Chars.html
  commentId: T:Automata.Core.Alang.Chars
  fullName: Automata.Core.Alang.Chars
  nameWithType: Chars
- uid: Automata.Core.Alang.Chars.Complement
  name: Complement
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Complement
  commentId: F:Automata.Core.Alang.Chars.Complement
  fullName: Automata.Core.Alang.Chars.Complement
  nameWithType: Chars.Complement
- uid: Automata.Core.Alang.Chars.Difference
  name: Difference
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Difference
  commentId: F:Automata.Core.Alang.Chars.Difference
  fullName: Automata.Core.Alang.Chars.Difference
  nameWithType: Chars.Difference
- uid: Automata.Core.Alang.Chars.EOI
  name: EOI
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_EOI
  commentId: F:Automata.Core.Alang.Chars.EOI
  fullName: Automata.Core.Alang.Chars.EOI
  nameWithType: Chars.EOI
- uid: Automata.Core.Alang.Chars.Intersection
  name: Intersection
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Intersection
  commentId: F:Automata.Core.Alang.Chars.Intersection
  fullName: Automata.Core.Alang.Chars.Intersection
  nameWithType: Chars.Intersection
- uid: Automata.Core.Alang.Chars.Invalid
  name: Invalid
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Invalid
  commentId: F:Automata.Core.Alang.Chars.Invalid
  fullName: Automata.Core.Alang.Chars.Invalid
  nameWithType: Chars.Invalid
- uid: Automata.Core.Alang.Chars.IsExpressionStart(System.Char)
  name: IsExpressionStart(char)
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsExpressionStart_System_Char_
  commentId: M:Automata.Core.Alang.Chars.IsExpressionStart(System.Char)
  name.vb: IsExpressionStart(Char)
  fullName: Automata.Core.Alang.Chars.IsExpressionStart(char)
  fullName.vb: Automata.Core.Alang.Chars.IsExpressionStart(Char)
  nameWithType: Chars.IsExpressionStart(char)
  nameWithType.vb: Chars.IsExpressionStart(Char)
- uid: Automata.Core.Alang.Chars.IsExpressionStart*
  name: IsExpressionStart
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsExpressionStart_
  commentId: Overload:Automata.Core.Alang.Chars.IsExpressionStart
  isSpec: "True"
  fullName: Automata.Core.Alang.Chars.IsExpressionStart
  nameWithType: Chars.IsExpressionStart
- uid: Automata.Core.Alang.Chars.IsOperator(System.Char)
  name: IsOperator(char)
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsOperator_System_Char_
  commentId: M:Automata.Core.Alang.Chars.IsOperator(System.Char)
  name.vb: IsOperator(Char)
  fullName: Automata.Core.Alang.Chars.IsOperator(char)
  fullName.vb: Automata.Core.Alang.Chars.IsOperator(Char)
  nameWithType: Chars.IsOperator(char)
  nameWithType.vb: Chars.IsOperator(Char)
- uid: Automata.Core.Alang.Chars.IsOperator*
  name: IsOperator
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsOperator_
  commentId: Overload:Automata.Core.Alang.Chars.IsOperator
  isSpec: "True"
  fullName: Automata.Core.Alang.Chars.IsOperator
  nameWithType: Chars.IsOperator
- uid: Automata.Core.Alang.Chars.IsSymbolChar(System.Char)
  name: IsSymbolChar(char)
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsSymbolChar_System_Char_
  commentId: M:Automata.Core.Alang.Chars.IsSymbolChar(System.Char)
  name.vb: IsSymbolChar(Char)
  fullName: Automata.Core.Alang.Chars.IsSymbolChar(char)
  fullName.vb: Automata.Core.Alang.Chars.IsSymbolChar(Char)
  nameWithType: Chars.IsSymbolChar(char)
  nameWithType.vb: Chars.IsSymbolChar(Char)
- uid: Automata.Core.Alang.Chars.IsSymbolChar*
  name: IsSymbolChar
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_IsSymbolChar_
  commentId: Overload:Automata.Core.Alang.Chars.IsSymbolChar
  isSpec: "True"
  fullName: Automata.Core.Alang.Chars.IsSymbolChar
  nameWithType: Chars.IsSymbolChar
- uid: Automata.Core.Alang.Chars.KleenePlus
  name: KleenePlus
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_KleenePlus
  commentId: F:Automata.Core.Alang.Chars.KleenePlus
  fullName: Automata.Core.Alang.Chars.KleenePlus
  nameWithType: Chars.KleenePlus
- uid: Automata.Core.Alang.Chars.KleeneStar
  name: KleeneStar
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_KleeneStar
  commentId: F:Automata.Core.Alang.Chars.KleeneStar
  fullName: Automata.Core.Alang.Chars.KleeneStar
  nameWithType: Chars.KleeneStar
- uid: Automata.Core.Alang.Chars.LeftParen
  name: LeftParen
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_LeftParen
  commentId: F:Automata.Core.Alang.Chars.LeftParen
  fullName: Automata.Core.Alang.Chars.LeftParen
  nameWithType: Chars.LeftParen
- uid: Automata.Core.Alang.Chars.Option
  name: Option
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Option
  commentId: F:Automata.Core.Alang.Chars.Option
  fullName: Automata.Core.Alang.Chars.Option
  nameWithType: Chars.Option
- uid: Automata.Core.Alang.Chars.RightParen
  name: RightParen
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_RightParen
  commentId: F:Automata.Core.Alang.Chars.RightParen
  fullName: Automata.Core.Alang.Chars.RightParen
  nameWithType: Chars.RightParen
- uid: Automata.Core.Alang.Chars.Union
  name: Union
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Union
  commentId: F:Automata.Core.Alang.Chars.Union
  fullName: Automata.Core.Alang.Chars.Union
  nameWithType: Chars.Union
- uid: Automata.Core.Alang.Chars.Wildcard
  name: Wildcard
  href: Automata.Core.Alang.Chars.html#Automata_Core_Alang_Chars_Wildcard
  commentId: F:Automata.Core.Alang.Chars.Wildcard
  fullName: Automata.Core.Alang.Chars.Wildcard
  nameWithType: Chars.Wildcard
- uid: Automata.Core.Alang.Complement
  name: Complement
  href: Automata.Core.Alang.Complement.html
  commentId: T:Automata.Core.Alang.Complement
  fullName: Automata.Core.Alang.Complement
  nameWithType: Complement
- uid: Automata.Core.Alang.Complement.#ctor(Automata.Core.Alang.AlangRegex)
  name: Complement(AlangRegex)
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement__ctor_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.Complement.#ctor(Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex)
  fullName: Automata.Core.Alang.Complement.Complement(Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.Complement.New(Automata.Core.Alang.AlangRegex)
  nameWithType: Complement.Complement(AlangRegex)
  nameWithType.vb: Complement.New(AlangRegex)
- uid: Automata.Core.Alang.Complement.#ctor*
  name: Complement
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement__ctor_
  commentId: Overload:Automata.Core.Alang.Complement.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Complement.Complement
  fullName.vb: Automata.Core.Alang.Complement.New
  nameWithType: Complement.Complement
  nameWithType.vb: Complement.New
- uid: Automata.Core.Alang.Complement.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement_AlangExpressionString
  commentId: P:Automata.Core.Alang.Complement.AlangExpressionString
  fullName: Automata.Core.Alang.Complement.AlangExpressionString
  nameWithType: Complement.AlangExpressionString
- uid: Automata.Core.Alang.Complement.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.Complement.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Complement.AlangExpressionString
  nameWithType: Complement.AlangExpressionString
- uid: Automata.Core.Alang.Complement.Precedence
  name: Precedence
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement_Precedence
  commentId: P:Automata.Core.Alang.Complement.Precedence
  fullName: Automata.Core.Alang.Complement.Precedence
  nameWithType: Complement.Precedence
- uid: Automata.Core.Alang.Complement.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Complement.html#Automata_Core_Alang_Complement_Precedence_
  commentId: Overload:Automata.Core.Alang.Complement.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Complement.Precedence
  nameWithType: Complement.Precedence
- uid: Automata.Core.Alang.Concatenation
  name: Concatenation
  href: Automata.Core.Alang.Concatenation.html
  commentId: T:Automata.Core.Alang.Concatenation
  fullName: Automata.Core.Alang.Concatenation
  nameWithType: Concatenation
- uid: Automata.Core.Alang.Concatenation.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name: Concatenation(AlangRegex, AlangRegex)
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation__ctor_Automata_Core_Alang_AlangRegex_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.Concatenation.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex, AlangRegex)
  fullName: Automata.Core.Alang.Concatenation.Concatenation(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.Concatenation.New(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  nameWithType: Concatenation.Concatenation(AlangRegex, AlangRegex)
  nameWithType.vb: Concatenation.New(AlangRegex, AlangRegex)
- uid: Automata.Core.Alang.Concatenation.#ctor*
  name: Concatenation
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation__ctor_
  commentId: Overload:Automata.Core.Alang.Concatenation.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Concatenation.Concatenation
  fullName.vb: Automata.Core.Alang.Concatenation.New
  nameWithType: Concatenation.Concatenation
  nameWithType.vb: Concatenation.New
- uid: Automata.Core.Alang.Concatenation.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_AlangExpressionString
  commentId: P:Automata.Core.Alang.Concatenation.AlangExpressionString
  fullName: Automata.Core.Alang.Concatenation.AlangExpressionString
  nameWithType: Concatenation.AlangExpressionString
- uid: Automata.Core.Alang.Concatenation.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.Concatenation.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Concatenation.AlangExpressionString
  nameWithType: Concatenation.AlangExpressionString
- uid: Automata.Core.Alang.Concatenation.Parse(Automata.Core.Alang.AlangCursor@)
  name: Parse(ref AlangCursor)
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_Parse_Automata_Core_Alang_AlangCursor__
  commentId: M:Automata.Core.Alang.Concatenation.Parse(Automata.Core.Alang.AlangCursor@)
  name.vb: Parse(AlangCursor)
  fullName: Automata.Core.Alang.Concatenation.Parse(ref Automata.Core.Alang.AlangCursor)
  fullName.vb: Automata.Core.Alang.Concatenation.Parse(Automata.Core.Alang.AlangCursor)
  nameWithType: Concatenation.Parse(ref AlangCursor)
  nameWithType.vb: Concatenation.Parse(AlangCursor)
- uid: Automata.Core.Alang.Concatenation.Parse*
  name: Parse
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_Parse_
  commentId: Overload:Automata.Core.Alang.Concatenation.Parse
  isSpec: "True"
  fullName: Automata.Core.Alang.Concatenation.Parse
  nameWithType: Concatenation.Parse
- uid: Automata.Core.Alang.Concatenation.Precedence
  name: Precedence
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_Precedence
  commentId: P:Automata.Core.Alang.Concatenation.Precedence
  fullName: Automata.Core.Alang.Concatenation.Precedence
  nameWithType: Concatenation.Precedence
- uid: Automata.Core.Alang.Concatenation.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Concatenation.html#Automata_Core_Alang_Concatenation_Precedence_
  commentId: Overload:Automata.Core.Alang.Concatenation.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Concatenation.Precedence
  nameWithType: Concatenation.Precedence
- uid: Automata.Core.Alang.Difference
  name: Difference
  href: Automata.Core.Alang.Difference.html
  commentId: T:Automata.Core.Alang.Difference
  fullName: Automata.Core.Alang.Difference
  nameWithType: Difference
- uid: Automata.Core.Alang.Difference.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name: Difference(AlangRegex, AlangRegex)
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference__ctor_Automata_Core_Alang_AlangRegex_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.Difference.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex, AlangRegex)
  fullName: Automata.Core.Alang.Difference.Difference(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.Difference.New(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  nameWithType: Difference.Difference(AlangRegex, AlangRegex)
  nameWithType.vb: Difference.New(AlangRegex, AlangRegex)
- uid: Automata.Core.Alang.Difference.#ctor*
  name: Difference
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference__ctor_
  commentId: Overload:Automata.Core.Alang.Difference.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Difference.Difference
  fullName.vb: Automata.Core.Alang.Difference.New
  nameWithType: Difference.Difference
  nameWithType.vb: Difference.New
- uid: Automata.Core.Alang.Difference.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_AlangExpressionString
  commentId: P:Automata.Core.Alang.Difference.AlangExpressionString
  fullName: Automata.Core.Alang.Difference.AlangExpressionString
  nameWithType: Difference.AlangExpressionString
- uid: Automata.Core.Alang.Difference.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.Difference.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Difference.AlangExpressionString
  nameWithType: Difference.AlangExpressionString
- uid: Automata.Core.Alang.Difference.Precedence
  name: Precedence
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_Precedence
  commentId: P:Automata.Core.Alang.Difference.Precedence
  fullName: Automata.Core.Alang.Difference.Precedence
  nameWithType: Difference.Precedence
- uid: Automata.Core.Alang.Difference.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Difference.html#Automata_Core_Alang_Difference_Precedence_
  commentId: Overload:Automata.Core.Alang.Difference.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Difference.Precedence
  nameWithType: Difference.Precedence
- uid: Automata.Core.Alang.EmptyLang
  name: EmptyLang
  href: Automata.Core.Alang.EmptyLang.html
  commentId: T:Automata.Core.Alang.EmptyLang
  fullName: Automata.Core.Alang.EmptyLang
  nameWithType: EmptyLang
- uid: Automata.Core.Alang.EmptyLang.#ctor
  name: EmptyLang()
  href: Automata.Core.Alang.EmptyLang.html#Automata_Core_Alang_EmptyLang__ctor
  commentId: M:Automata.Core.Alang.EmptyLang.#ctor
  name.vb: New()
  fullName: Automata.Core.Alang.EmptyLang.EmptyLang()
  fullName.vb: Automata.Core.Alang.EmptyLang.New()
  nameWithType: EmptyLang.EmptyLang()
  nameWithType.vb: EmptyLang.New()
- uid: Automata.Core.Alang.EmptyLang.#ctor*
  name: EmptyLang
  href: Automata.Core.Alang.EmptyLang.html#Automata_Core_Alang_EmptyLang__ctor_
  commentId: Overload:Automata.Core.Alang.EmptyLang.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.EmptyLang.EmptyLang
  fullName.vb: Automata.Core.Alang.EmptyLang.New
  nameWithType: EmptyLang.EmptyLang
  nameWithType.vb: EmptyLang.New
- uid: Automata.Core.Alang.EmptyLang.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.EmptyLang.html#Automata_Core_Alang_EmptyLang_AlangExpressionString
  commentId: P:Automata.Core.Alang.EmptyLang.AlangExpressionString
  fullName: Automata.Core.Alang.EmptyLang.AlangExpressionString
  nameWithType: EmptyLang.AlangExpressionString
- uid: Automata.Core.Alang.EmptyLang.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.EmptyLang.html#Automata_Core_Alang_EmptyLang_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.EmptyLang.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.EmptyLang.AlangExpressionString
  nameWithType: EmptyLang.AlangExpressionString
- uid: Automata.Core.Alang.EmptyLang.Precedence
  name: Precedence
  href: Automata.Core.Alang.EmptyLang.html#Automata_Core_Alang_EmptyLang_Precedence
  commentId: P:Automata.Core.Alang.EmptyLang.Precedence
  fullName: Automata.Core.Alang.EmptyLang.Precedence
  nameWithType: EmptyLang.Precedence
- uid: Automata.Core.Alang.EmptyLang.Precedence*
  name: Precedence
  href: Automata.Core.Alang.EmptyLang.html#Automata_Core_Alang_EmptyLang_Precedence_
  commentId: Overload:Automata.Core.Alang.EmptyLang.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.EmptyLang.Precedence
  nameWithType: EmptyLang.Precedence
- uid: Automata.Core.Alang.Intersection
  name: Intersection
  href: Automata.Core.Alang.Intersection.html
  commentId: T:Automata.Core.Alang.Intersection
  fullName: Automata.Core.Alang.Intersection
  nameWithType: Intersection
- uid: Automata.Core.Alang.Intersection.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name: Intersection(AlangRegex, AlangRegex)
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection__ctor_Automata_Core_Alang_AlangRegex_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.Intersection.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex, AlangRegex)
  fullName: Automata.Core.Alang.Intersection.Intersection(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.Intersection.New(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  nameWithType: Intersection.Intersection(AlangRegex, AlangRegex)
  nameWithType.vb: Intersection.New(AlangRegex, AlangRegex)
- uid: Automata.Core.Alang.Intersection.#ctor*
  name: Intersection
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection__ctor_
  commentId: Overload:Automata.Core.Alang.Intersection.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Intersection.Intersection
  fullName.vb: Automata.Core.Alang.Intersection.New
  nameWithType: Intersection.Intersection
  nameWithType.vb: Intersection.New
- uid: Automata.Core.Alang.Intersection.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_AlangExpressionString
  commentId: P:Automata.Core.Alang.Intersection.AlangExpressionString
  fullName: Automata.Core.Alang.Intersection.AlangExpressionString
  nameWithType: Intersection.AlangExpressionString
- uid: Automata.Core.Alang.Intersection.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.Intersection.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Intersection.AlangExpressionString
  nameWithType: Intersection.AlangExpressionString
- uid: Automata.Core.Alang.Intersection.Precedence
  name: Precedence
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_Precedence
  commentId: P:Automata.Core.Alang.Intersection.Precedence
  fullName: Automata.Core.Alang.Intersection.Precedence
  nameWithType: Intersection.Precedence
- uid: Automata.Core.Alang.Intersection.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Intersection.html#Automata_Core_Alang_Intersection_Precedence_
  commentId: Overload:Automata.Core.Alang.Intersection.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Intersection.Precedence
  nameWithType: Intersection.Precedence
- uid: Automata.Core.Alang.KleenePlus
  name: KleenePlus
  href: Automata.Core.Alang.KleenePlus.html
  commentId: T:Automata.Core.Alang.KleenePlus
  fullName: Automata.Core.Alang.KleenePlus
  nameWithType: KleenePlus
- uid: Automata.Core.Alang.KleenePlus.#ctor(Automata.Core.Alang.AlangRegex)
  name: KleenePlus(AlangRegex)
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus__ctor_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.KleenePlus.#ctor(Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex)
  fullName: Automata.Core.Alang.KleenePlus.KleenePlus(Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.KleenePlus.New(Automata.Core.Alang.AlangRegex)
  nameWithType: KleenePlus.KleenePlus(AlangRegex)
  nameWithType.vb: KleenePlus.New(AlangRegex)
- uid: Automata.Core.Alang.KleenePlus.#ctor*
  name: KleenePlus
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus__ctor_
  commentId: Overload:Automata.Core.Alang.KleenePlus.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.KleenePlus.KleenePlus
  fullName.vb: Automata.Core.Alang.KleenePlus.New
  nameWithType: KleenePlus.KleenePlus
  nameWithType.vb: KleenePlus.New
- uid: Automata.Core.Alang.KleenePlus.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus_AlangExpressionString
  commentId: P:Automata.Core.Alang.KleenePlus.AlangExpressionString
  fullName: Automata.Core.Alang.KleenePlus.AlangExpressionString
  nameWithType: KleenePlus.AlangExpressionString
- uid: Automata.Core.Alang.KleenePlus.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.KleenePlus.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.KleenePlus.AlangExpressionString
  nameWithType: KleenePlus.AlangExpressionString
- uid: Automata.Core.Alang.KleenePlus.Precedence
  name: Precedence
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus_Precedence
  commentId: P:Automata.Core.Alang.KleenePlus.Precedence
  fullName: Automata.Core.Alang.KleenePlus.Precedence
  nameWithType: KleenePlus.Precedence
- uid: Automata.Core.Alang.KleenePlus.Precedence*
  name: Precedence
  href: Automata.Core.Alang.KleenePlus.html#Automata_Core_Alang_KleenePlus_Precedence_
  commentId: Overload:Automata.Core.Alang.KleenePlus.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.KleenePlus.Precedence
  nameWithType: KleenePlus.Precedence
- uid: Automata.Core.Alang.KleeneStar
  name: KleeneStar
  href: Automata.Core.Alang.KleeneStar.html
  commentId: T:Automata.Core.Alang.KleeneStar
  fullName: Automata.Core.Alang.KleeneStar
  nameWithType: KleeneStar
- uid: Automata.Core.Alang.KleeneStar.#ctor(Automata.Core.Alang.AlangRegex)
  name: KleeneStar(AlangRegex)
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar__ctor_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.KleeneStar.#ctor(Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex)
  fullName: Automata.Core.Alang.KleeneStar.KleeneStar(Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.KleeneStar.New(Automata.Core.Alang.AlangRegex)
  nameWithType: KleeneStar.KleeneStar(AlangRegex)
  nameWithType.vb: KleeneStar.New(AlangRegex)
- uid: Automata.Core.Alang.KleeneStar.#ctor*
  name: KleeneStar
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar__ctor_
  commentId: Overload:Automata.Core.Alang.KleeneStar.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.KleeneStar.KleeneStar
  fullName.vb: Automata.Core.Alang.KleeneStar.New
  nameWithType: KleeneStar.KleeneStar
  nameWithType.vb: KleeneStar.New
- uid: Automata.Core.Alang.KleeneStar.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar_AlangExpressionString
  commentId: P:Automata.Core.Alang.KleeneStar.AlangExpressionString
  fullName: Automata.Core.Alang.KleeneStar.AlangExpressionString
  nameWithType: KleeneStar.AlangExpressionString
- uid: Automata.Core.Alang.KleeneStar.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.KleeneStar.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.KleeneStar.AlangExpressionString
  nameWithType: KleeneStar.AlangExpressionString
- uid: Automata.Core.Alang.KleeneStar.Precedence
  name: Precedence
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar_Precedence
  commentId: P:Automata.Core.Alang.KleeneStar.Precedence
  fullName: Automata.Core.Alang.KleeneStar.Precedence
  nameWithType: KleeneStar.Precedence
- uid: Automata.Core.Alang.KleeneStar.Precedence*
  name: Precedence
  href: Automata.Core.Alang.KleeneStar.html#Automata_Core_Alang_KleeneStar_Precedence_
  commentId: Overload:Automata.Core.Alang.KleeneStar.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.KleeneStar.Precedence
  nameWithType: KleeneStar.Precedence
- uid: Automata.Core.Alang.Option
  name: Option
  href: Automata.Core.Alang.Option.html
  commentId: T:Automata.Core.Alang.Option
  fullName: Automata.Core.Alang.Option
  nameWithType: Option
- uid: Automata.Core.Alang.Option.#ctor(Automata.Core.Alang.AlangRegex)
  name: Option(AlangRegex)
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option__ctor_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.Option.#ctor(Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex)
  fullName: Automata.Core.Alang.Option.Option(Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.Option.New(Automata.Core.Alang.AlangRegex)
  nameWithType: Option.Option(AlangRegex)
  nameWithType.vb: Option.New(AlangRegex)
- uid: Automata.Core.Alang.Option.#ctor*
  name: Option
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option__ctor_
  commentId: Overload:Automata.Core.Alang.Option.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Option.Option
  fullName.vb: Automata.Core.Alang.Option.New
  nameWithType: Option.Option
  nameWithType.vb: Option.New
- uid: Automata.Core.Alang.Option.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option_AlangExpressionString
  commentId: P:Automata.Core.Alang.Option.AlangExpressionString
  fullName: Automata.Core.Alang.Option.AlangExpressionString
  nameWithType: Option.AlangExpressionString
- uid: Automata.Core.Alang.Option.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.Option.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Option.AlangExpressionString
  nameWithType: Option.AlangExpressionString
- uid: Automata.Core.Alang.Option.Precedence
  name: Precedence
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option_Precedence
  commentId: P:Automata.Core.Alang.Option.Precedence
  fullName: Automata.Core.Alang.Option.Precedence
  nameWithType: Option.Precedence
- uid: Automata.Core.Alang.Option.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Option.html#Automata_Core_Alang_Option_Precedence_
  commentId: Overload:Automata.Core.Alang.Option.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Option.Precedence
  nameWithType: Option.Precedence
- uid: Automata.Core.Alang.ParseErrorReason
  name: ParseErrorReason
  href: Automata.Core.Alang.ParseErrorReason.html
  commentId: T:Automata.Core.Alang.ParseErrorReason
  fullName: Automata.Core.Alang.ParseErrorReason
  nameWithType: ParseErrorReason
- uid: Automata.Core.Alang.ParseErrorReason.EmptyInput
  name: EmptyInput
  href: Automata.Core.Alang.ParseErrorReason.html#Automata_Core_Alang_ParseErrorReason_EmptyInput
  commentId: F:Automata.Core.Alang.ParseErrorReason.EmptyInput
  fullName: Automata.Core.Alang.ParseErrorReason.EmptyInput
  nameWithType: ParseErrorReason.EmptyInput
- uid: Automata.Core.Alang.ParseErrorReason.MissingClosingParenthesis
  name: MissingClosingParenthesis
  href: Automata.Core.Alang.ParseErrorReason.html#Automata_Core_Alang_ParseErrorReason_MissingClosingParenthesis
  commentId: F:Automata.Core.Alang.ParseErrorReason.MissingClosingParenthesis
  fullName: Automata.Core.Alang.ParseErrorReason.MissingClosingParenthesis
  nameWithType: ParseErrorReason.MissingClosingParenthesis
- uid: Automata.Core.Alang.ParseErrorReason.MissingRightOperand
  name: MissingRightOperand
  href: Automata.Core.Alang.ParseErrorReason.html#Automata_Core_Alang_ParseErrorReason_MissingRightOperand
  commentId: F:Automata.Core.Alang.ParseErrorReason.MissingRightOperand
  fullName: Automata.Core.Alang.ParseErrorReason.MissingRightOperand
  nameWithType: ParseErrorReason.MissingRightOperand
- uid: Automata.Core.Alang.ParseErrorReason.UnexpectedClosingParenthesis
  name: UnexpectedClosingParenthesis
  href: Automata.Core.Alang.ParseErrorReason.html#Automata_Core_Alang_ParseErrorReason_UnexpectedClosingParenthesis
  commentId: F:Automata.Core.Alang.ParseErrorReason.UnexpectedClosingParenthesis
  fullName: Automata.Core.Alang.ParseErrorReason.UnexpectedClosingParenthesis
  nameWithType: ParseErrorReason.UnexpectedClosingParenthesis
- uid: Automata.Core.Alang.ParseErrorReason.UnexpectedOperator
  name: UnexpectedOperator
  href: Automata.Core.Alang.ParseErrorReason.html#Automata_Core_Alang_ParseErrorReason_UnexpectedOperator
  commentId: F:Automata.Core.Alang.ParseErrorReason.UnexpectedOperator
  fullName: Automata.Core.Alang.ParseErrorReason.UnexpectedOperator
  nameWithType: ParseErrorReason.UnexpectedOperator
- uid: Automata.Core.Alang.Symbol
  name: Symbol
  href: Automata.Core.Alang.Symbol.html
  commentId: T:Automata.Core.Alang.Symbol
  fullName: Automata.Core.Alang.Symbol
  nameWithType: Symbol
- uid: Automata.Core.Alang.Symbol.#ctor(System.String)
  name: Symbol(string)
  href: Automata.Core.Alang.Symbol.html#Automata_Core_Alang_Symbol__ctor_System_String_
  commentId: M:Automata.Core.Alang.Symbol.#ctor(System.String)
  name.vb: New(String)
  fullName: Automata.Core.Alang.Symbol.Symbol(string)
  fullName.vb: Automata.Core.Alang.Symbol.New(String)
  nameWithType: Symbol.Symbol(string)
  nameWithType.vb: Symbol.New(String)
- uid: Automata.Core.Alang.Symbol.#ctor*
  name: Symbol
  href: Automata.Core.Alang.Symbol.html#Automata_Core_Alang_Symbol__ctor_
  commentId: Overload:Automata.Core.Alang.Symbol.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Symbol.Symbol
  fullName.vb: Automata.Core.Alang.Symbol.New
  nameWithType: Symbol.Symbol
  nameWithType.vb: Symbol.New
- uid: Automata.Core.Alang.Symbol.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.Symbol.html#Automata_Core_Alang_Symbol_AlangExpressionString
  commentId: P:Automata.Core.Alang.Symbol.AlangExpressionString
  fullName: Automata.Core.Alang.Symbol.AlangExpressionString
  nameWithType: Symbol.AlangExpressionString
- uid: Automata.Core.Alang.Symbol.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.Symbol.html#Automata_Core_Alang_Symbol_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.Symbol.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Symbol.AlangExpressionString
  nameWithType: Symbol.AlangExpressionString
- uid: Automata.Core.Alang.Symbol.Precedence
  name: Precedence
  href: Automata.Core.Alang.Symbol.html#Automata_Core_Alang_Symbol_Precedence
  commentId: P:Automata.Core.Alang.Symbol.Precedence
  fullName: Automata.Core.Alang.Symbol.Precedence
  nameWithType: Symbol.Precedence
- uid: Automata.Core.Alang.Symbol.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Symbol.html#Automata_Core_Alang_Symbol_Precedence_
  commentId: Overload:Automata.Core.Alang.Symbol.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Symbol.Precedence
  nameWithType: Symbol.Precedence
- uid: Automata.Core.Alang.Symbol.Value
  name: Value
  href: Automata.Core.Alang.Symbol.html#Automata_Core_Alang_Symbol_Value
  commentId: P:Automata.Core.Alang.Symbol.Value
  fullName: Automata.Core.Alang.Symbol.Value
  nameWithType: Symbol.Value
- uid: Automata.Core.Alang.Symbol.Value*
  name: Value
  href: Automata.Core.Alang.Symbol.html#Automata_Core_Alang_Symbol_Value_
  commentId: Overload:Automata.Core.Alang.Symbol.Value
  isSpec: "True"
  fullName: Automata.Core.Alang.Symbol.Value
  nameWithType: Symbol.Value
- uid: Automata.Core.Alang.UnaryRegex
  name: UnaryRegex
  href: Automata.Core.Alang.UnaryRegex.html
  commentId: T:Automata.Core.Alang.UnaryRegex
  fullName: Automata.Core.Alang.UnaryRegex
  nameWithType: UnaryRegex
- uid: Automata.Core.Alang.UnaryRegex.#ctor(Automata.Core.Alang.AlangRegex)
  name: UnaryRegex(AlangRegex)
  href: Automata.Core.Alang.UnaryRegex.html#Automata_Core_Alang_UnaryRegex__ctor_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.UnaryRegex.#ctor(Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex)
  fullName: Automata.Core.Alang.UnaryRegex.UnaryRegex(Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.UnaryRegex.New(Automata.Core.Alang.AlangRegex)
  nameWithType: UnaryRegex.UnaryRegex(AlangRegex)
  nameWithType.vb: UnaryRegex.New(AlangRegex)
- uid: Automata.Core.Alang.UnaryRegex.#ctor*
  name: UnaryRegex
  href: Automata.Core.Alang.UnaryRegex.html#Automata_Core_Alang_UnaryRegex__ctor_
  commentId: Overload:Automata.Core.Alang.UnaryRegex.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.UnaryRegex.UnaryRegex
  fullName.vb: Automata.Core.Alang.UnaryRegex.New
  nameWithType: UnaryRegex.UnaryRegex
  nameWithType.vb: UnaryRegex.New
- uid: Automata.Core.Alang.UnaryRegex.Operand
  name: Operand
  href: Automata.Core.Alang.UnaryRegex.html#Automata_Core_Alang_UnaryRegex_Operand
  commentId: P:Automata.Core.Alang.UnaryRegex.Operand
  fullName: Automata.Core.Alang.UnaryRegex.Operand
  nameWithType: UnaryRegex.Operand
- uid: Automata.Core.Alang.UnaryRegex.Operand*
  name: Operand
  href: Automata.Core.Alang.UnaryRegex.html#Automata_Core_Alang_UnaryRegex_Operand_
  commentId: Overload:Automata.Core.Alang.UnaryRegex.Operand
  isSpec: "True"
  fullName: Automata.Core.Alang.UnaryRegex.Operand
  nameWithType: UnaryRegex.Operand
- uid: Automata.Core.Alang.Union
  name: Union
  href: Automata.Core.Alang.Union.html
  commentId: T:Automata.Core.Alang.Union
  fullName: Automata.Core.Alang.Union
  nameWithType: Union
- uid: Automata.Core.Alang.Union.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name: Union(AlangRegex, AlangRegex)
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union__ctor_Automata_Core_Alang_AlangRegex_Automata_Core_Alang_AlangRegex_
  commentId: M:Automata.Core.Alang.Union.#ctor(Automata.Core.Alang.AlangRegex,Automata.Core.Alang.AlangRegex)
  name.vb: New(AlangRegex, AlangRegex)
  fullName: Automata.Core.Alang.Union.Union(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  fullName.vb: Automata.Core.Alang.Union.New(Automata.Core.Alang.AlangRegex, Automata.Core.Alang.AlangRegex)
  nameWithType: Union.Union(AlangRegex, AlangRegex)
  nameWithType.vb: Union.New(AlangRegex, AlangRegex)
- uid: Automata.Core.Alang.Union.#ctor*
  name: Union
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union__ctor_
  commentId: Overload:Automata.Core.Alang.Union.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alang.Union.Union
  fullName.vb: Automata.Core.Alang.Union.New
  nameWithType: Union.Union
  nameWithType.vb: Union.New
- uid: Automata.Core.Alang.Union.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_AlangExpressionString
  commentId: P:Automata.Core.Alang.Union.AlangExpressionString
  fullName: Automata.Core.Alang.Union.AlangExpressionString
  nameWithType: Union.AlangExpressionString
- uid: Automata.Core.Alang.Union.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.Union.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Union.AlangExpressionString
  nameWithType: Union.AlangExpressionString
- uid: Automata.Core.Alang.Union.Precedence
  name: Precedence
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_Precedence
  commentId: P:Automata.Core.Alang.Union.Precedence
  fullName: Automata.Core.Alang.Union.Precedence
  nameWithType: Union.Precedence
- uid: Automata.Core.Alang.Union.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Union.html#Automata_Core_Alang_Union_Precedence_
  commentId: Overload:Automata.Core.Alang.Union.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Union.Precedence
  nameWithType: Union.Precedence
- uid: Automata.Core.Alang.Wildcard
  name: Wildcard
  href: Automata.Core.Alang.Wildcard.html
  commentId: T:Automata.Core.Alang.Wildcard
  fullName: Automata.Core.Alang.Wildcard
  nameWithType: Wildcard
- uid: Automata.Core.Alang.Wildcard.AlangExpressionString
  name: AlangExpressionString
  href: Automata.Core.Alang.Wildcard.html#Automata_Core_Alang_Wildcard_AlangExpressionString
  commentId: P:Automata.Core.Alang.Wildcard.AlangExpressionString
  fullName: Automata.Core.Alang.Wildcard.AlangExpressionString
  nameWithType: Wildcard.AlangExpressionString
- uid: Automata.Core.Alang.Wildcard.AlangExpressionString*
  name: AlangExpressionString
  href: Automata.Core.Alang.Wildcard.html#Automata_Core_Alang_Wildcard_AlangExpressionString_
  commentId: Overload:Automata.Core.Alang.Wildcard.AlangExpressionString
  isSpec: "True"
  fullName: Automata.Core.Alang.Wildcard.AlangExpressionString
  nameWithType: Wildcard.AlangExpressionString
- uid: Automata.Core.Alang.Wildcard.Precedence
  name: Precedence
  href: Automata.Core.Alang.Wildcard.html#Automata_Core_Alang_Wildcard_Precedence
  commentId: P:Automata.Core.Alang.Wildcard.Precedence
  fullName: Automata.Core.Alang.Wildcard.Precedence
  nameWithType: Wildcard.Precedence
- uid: Automata.Core.Alang.Wildcard.Precedence*
  name: Precedence
  href: Automata.Core.Alang.Wildcard.html#Automata_Core_Alang_Wildcard_Precedence_
  commentId: Overload:Automata.Core.Alang.Wildcard.Precedence
  isSpec: "True"
  fullName: Automata.Core.Alang.Wildcard.Precedence
  nameWithType: Wildcard.Precedence
- uid: Automata.Core.Alphabet
  name: Alphabet
  href: Automata.Core.Alphabet.html
  commentId: T:Automata.Core.Alphabet
  fullName: Automata.Core.Alphabet
  nameWithType: Alphabet
- uid: Automata.Core.Alphabet.#ctor
  name: Alphabet()
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet__ctor
  commentId: M:Automata.Core.Alphabet.#ctor
  name.vb: New()
  fullName: Automata.Core.Alphabet.Alphabet()
  fullName.vb: Automata.Core.Alphabet.New()
  nameWithType: Alphabet.Alphabet()
  nameWithType.vb: Alphabet.New()
- uid: Automata.Core.Alphabet.#ctor(Automata.Core.Alphabet)
  name: Alphabet(Alphabet)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet__ctor_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Alphabet.#ctor(Automata.Core.Alphabet)
  name.vb: New(Alphabet)
  fullName: Automata.Core.Alphabet.Alphabet(Automata.Core.Alphabet)
  fullName.vb: Automata.Core.Alphabet.New(Automata.Core.Alphabet)
  nameWithType: Alphabet.Alphabet(Alphabet)
  nameWithType.vb: Alphabet.New(Alphabet)
- uid: Automata.Core.Alphabet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  name: Alphabet(IEnumerable<string>)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet__ctor_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.Alphabet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  name.vb: New(IEnumerable(Of String))
  fullName: Automata.Core.Alphabet.Alphabet(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.Alphabet.New(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: Alphabet.Alphabet(IEnumerable<string>)
  nameWithType.vb: Alphabet.New(IEnumerable(Of String))
- uid: Automata.Core.Alphabet.#ctor(System.String[])
  name: Alphabet(params string[])
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet__ctor_System_String___
  commentId: M:Automata.Core.Alphabet.#ctor(System.String[])
  name.vb: New(ParamArray String())
  fullName: Automata.Core.Alphabet.Alphabet(params string[])
  fullName.vb: Automata.Core.Alphabet.New(ParamArray String())
  nameWithType: Alphabet.Alphabet(params string[])
  nameWithType.vb: Alphabet.New(ParamArray String())
- uid: Automata.Core.Alphabet.#ctor*
  name: Alphabet
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet__ctor_
  commentId: Overload:Automata.Core.Alphabet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alphabet.Alphabet
  fullName.vb: Automata.Core.Alphabet.New
  nameWithType: Alphabet.Alphabet
  nameWithType.vb: Alphabet.New
- uid: Automata.Core.Alphabet.AddAll(System.Collections.Generic.IEnumerable{System.String})
  name: AddAll(IEnumerable<string>)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_AddAll_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.Alphabet.AddAll(System.Collections.Generic.IEnumerable{System.String})
  name.vb: AddAll(IEnumerable(Of String))
  fullName: Automata.Core.Alphabet.AddAll(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.Alphabet.AddAll(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: Alphabet.AddAll(IEnumerable<string>)
  nameWithType.vb: Alphabet.AddAll(IEnumerable(Of String))
- uid: Automata.Core.Alphabet.AddAll*
  name: AddAll
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_AddAll_
  commentId: Overload:Automata.Core.Alphabet.AddAll
  isSpec: "True"
  fullName: Automata.Core.Alphabet.AddAll
  nameWithType: Alphabet.AddAll
- uid: Automata.Core.Alphabet.Contains(System.String)
  name: Contains(string)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Contains_System_String_
  commentId: M:Automata.Core.Alphabet.Contains(System.String)
  name.vb: Contains(String)
  fullName: Automata.Core.Alphabet.Contains(string)
  fullName.vb: Automata.Core.Alphabet.Contains(String)
  nameWithType: Alphabet.Contains(string)
  nameWithType.vb: Alphabet.Contains(String)
- uid: Automata.Core.Alphabet.Contains*
  name: Contains
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Contains_
  commentId: Overload:Automata.Core.Alphabet.Contains
  isSpec: "True"
  fullName: Automata.Core.Alphabet.Contains
  nameWithType: Alphabet.Contains
- uid: Automata.Core.Alphabet.Count
  name: Count
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Count
  commentId: P:Automata.Core.Alphabet.Count
  fullName: Automata.Core.Alphabet.Count
  nameWithType: Alphabet.Count
- uid: Automata.Core.Alphabet.Count*
  name: Count
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Count_
  commentId: Overload:Automata.Core.Alphabet.Count
  isSpec: "True"
  fullName: Automata.Core.Alphabet.Count
  nameWithType: Alphabet.Count
- uid: Automata.Core.Alphabet.Equals(Automata.Core.Alphabet)
  name: Equals(Alphabet?)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Equals_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Alphabet.Equals(Automata.Core.Alphabet)
  name.vb: Equals(Alphabet)
  fullName: Automata.Core.Alphabet.Equals(Automata.Core.Alphabet?)
  fullName.vb: Automata.Core.Alphabet.Equals(Automata.Core.Alphabet)
  nameWithType: Alphabet.Equals(Alphabet?)
  nameWithType.vb: Alphabet.Equals(Alphabet)
- uid: Automata.Core.Alphabet.Equals(System.Object)
  name: Equals(object?)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Equals_System_Object_
  commentId: M:Automata.Core.Alphabet.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Automata.Core.Alphabet.Equals(object?)
  fullName.vb: Automata.Core.Alphabet.Equals(Object)
  nameWithType: Alphabet.Equals(object?)
  nameWithType.vb: Alphabet.Equals(Object)
- uid: Automata.Core.Alphabet.Equals*
  name: Equals
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Equals_
  commentId: Overload:Automata.Core.Alphabet.Equals
  isSpec: "True"
  fullName: Automata.Core.Alphabet.Equals
  nameWithType: Alphabet.Equals
- uid: Automata.Core.Alphabet.GetHashCode
  name: GetHashCode()
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_GetHashCode
  commentId: M:Automata.Core.Alphabet.GetHashCode
  fullName: Automata.Core.Alphabet.GetHashCode()
  nameWithType: Alphabet.GetHashCode()
- uid: Automata.Core.Alphabet.GetHashCode*
  name: GetHashCode
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_GetHashCode_
  commentId: Overload:Automata.Core.Alphabet.GetHashCode
  isSpec: "True"
  fullName: Automata.Core.Alphabet.GetHashCode
  nameWithType: Alphabet.GetHashCode
- uid: Automata.Core.Alphabet.GetOrAdd(System.String)
  name: GetOrAdd(string)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_GetOrAdd_System_String_
  commentId: M:Automata.Core.Alphabet.GetOrAdd(System.String)
  name.vb: GetOrAdd(String)
  fullName: Automata.Core.Alphabet.GetOrAdd(string)
  fullName.vb: Automata.Core.Alphabet.GetOrAdd(String)
  nameWithType: Alphabet.GetOrAdd(string)
  nameWithType.vb: Alphabet.GetOrAdd(String)
- uid: Automata.Core.Alphabet.GetOrAdd*
  name: GetOrAdd
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_GetOrAdd_
  commentId: Overload:Automata.Core.Alphabet.GetOrAdd
  isSpec: "True"
  fullName: Automata.Core.Alphabet.GetOrAdd
  nameWithType: Alphabet.GetOrAdd
- uid: Automata.Core.Alphabet.Item(System.Int32)
  name: this[int]
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Item_System_Int32_
  commentId: P:Automata.Core.Alphabet.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Automata.Core.Alphabet.this[int]
  fullName.vb: Automata.Core.Alphabet.this[](Integer)
  nameWithType: Alphabet.this[int]
  nameWithType.vb: Alphabet.this[](Integer)
- uid: Automata.Core.Alphabet.Item(System.String)
  name: this[string]
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Item_System_String_
  commentId: P:Automata.Core.Alphabet.Item(System.String)
  name.vb: this[](String)
  fullName: Automata.Core.Alphabet.this[string]
  fullName.vb: Automata.Core.Alphabet.this[](String)
  nameWithType: Alphabet.this[string]
  nameWithType.vb: Alphabet.this[](String)
- uid: Automata.Core.Alphabet.Item*
  name: this
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Item_
  commentId: Overload:Automata.Core.Alphabet.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Automata.Core.Alphabet.this
  fullName.vb: Automata.Core.Alphabet.this[]
  nameWithType: Alphabet.this
  nameWithType.vb: Alphabet.this[]
- uid: Automata.Core.Alphabet.SymbolIndices
  name: SymbolIndices
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_SymbolIndices
  commentId: P:Automata.Core.Alphabet.SymbolIndices
  fullName: Automata.Core.Alphabet.SymbolIndices
  nameWithType: Alphabet.SymbolIndices
- uid: Automata.Core.Alphabet.SymbolIndices*
  name: SymbolIndices
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_SymbolIndices_
  commentId: Overload:Automata.Core.Alphabet.SymbolIndices
  isSpec: "True"
  fullName: Automata.Core.Alphabet.SymbolIndices
  nameWithType: Alphabet.SymbolIndices
- uid: Automata.Core.Alphabet.Symbols
  name: Symbols
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Symbols
  commentId: P:Automata.Core.Alphabet.Symbols
  fullName: Automata.Core.Alphabet.Symbols
  nameWithType: Alphabet.Symbols
- uid: Automata.Core.Alphabet.Symbols*
  name: Symbols
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Symbols_
  commentId: Overload:Automata.Core.Alphabet.Symbols
  isSpec: "True"
  fullName: Automata.Core.Alphabet.Symbols
  nameWithType: Alphabet.Symbols
- uid: Automata.Core.Alphabet.ToString
  name: ToString()
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_ToString
  commentId: M:Automata.Core.Alphabet.ToString
  fullName: Automata.Core.Alphabet.ToString()
  nameWithType: Alphabet.ToString()
- uid: Automata.Core.Alphabet.ToString*
  name: ToString
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_ToString_
  commentId: Overload:Automata.Core.Alphabet.ToString
  isSpec: "True"
  fullName: Automata.Core.Alphabet.ToString
  nameWithType: Alphabet.ToString
- uid: Automata.Core.Alphabet.ToStringExpanded
  name: ToStringExpanded()
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_ToStringExpanded
  commentId: M:Automata.Core.Alphabet.ToStringExpanded
  fullName: Automata.Core.Alphabet.ToStringExpanded()
  nameWithType: Alphabet.ToStringExpanded()
- uid: Automata.Core.Alphabet.ToStringExpanded*
  name: ToStringExpanded
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_ToStringExpanded_
  commentId: Overload:Automata.Core.Alphabet.ToStringExpanded
  isSpec: "True"
  fullName: Automata.Core.Alphabet.ToStringExpanded
  nameWithType: Alphabet.ToStringExpanded
- uid: Automata.Core.Alphabet.TryGetIndex(System.String,System.Int32@)
  name: TryGetIndex(string, out int)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_TryGetIndex_System_String_System_Int32__
  commentId: M:Automata.Core.Alphabet.TryGetIndex(System.String,System.Int32@)
  name.vb: TryGetIndex(String, Integer)
  fullName: Automata.Core.Alphabet.TryGetIndex(string, out int)
  fullName.vb: Automata.Core.Alphabet.TryGetIndex(String, Integer)
  nameWithType: Alphabet.TryGetIndex(string, out int)
  nameWithType.vb: Alphabet.TryGetIndex(String, Integer)
- uid: Automata.Core.Alphabet.TryGetIndex*
  name: TryGetIndex
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_TryGetIndex_
  commentId: Overload:Automata.Core.Alphabet.TryGetIndex
  isSpec: "True"
  fullName: Automata.Core.Alphabet.TryGetIndex
  nameWithType: Alphabet.TryGetIndex
- uid: Automata.Core.Alphabet.UnionWith(Automata.Core.Alphabet)
  name: UnionWith(Alphabet)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_UnionWith_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Alphabet.UnionWith(Automata.Core.Alphabet)
  fullName: Automata.Core.Alphabet.UnionWith(Automata.Core.Alphabet)
  nameWithType: Alphabet.UnionWith(Alphabet)
- uid: Automata.Core.Alphabet.UnionWith*
  name: UnionWith
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_UnionWith_
  commentId: Overload:Automata.Core.Alphabet.UnionWith
  isSpec: "True"
  fullName: Automata.Core.Alphabet.UnionWith
  nameWithType: Alphabet.UnionWith
- uid: Automata.Core.Alphabet.op_Equality(Automata.Core.Alphabet,Automata.Core.Alphabet)
  name: operator ==(Alphabet, Alphabet)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_op_Equality_Automata_Core_Alphabet_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Alphabet.op_Equality(Automata.Core.Alphabet,Automata.Core.Alphabet)
  name.vb: =(Alphabet, Alphabet)
  fullName: Automata.Core.Alphabet.operator ==(Automata.Core.Alphabet, Automata.Core.Alphabet)
  fullName.vb: Automata.Core.Alphabet.=(Automata.Core.Alphabet, Automata.Core.Alphabet)
  nameWithType: Alphabet.operator ==(Alphabet, Alphabet)
  nameWithType.vb: Alphabet.=(Alphabet, Alphabet)
- uid: Automata.Core.Alphabet.op_Equality*
  name: operator ==
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_op_Equality_
  commentId: Overload:Automata.Core.Alphabet.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Automata.Core.Alphabet.operator ==
  fullName.vb: Automata.Core.Alphabet.=
  nameWithType: Alphabet.operator ==
  nameWithType.vb: Alphabet.=
- uid: Automata.Core.Alphabet.op_Inequality(Automata.Core.Alphabet,Automata.Core.Alphabet)
  name: operator !=(Alphabet, Alphabet)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_op_Inequality_Automata_Core_Alphabet_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Alphabet.op_Inequality(Automata.Core.Alphabet,Automata.Core.Alphabet)
  name.vb: <>(Alphabet, Alphabet)
  fullName: Automata.Core.Alphabet.operator !=(Automata.Core.Alphabet, Automata.Core.Alphabet)
  fullName.vb: Automata.Core.Alphabet.<>(Automata.Core.Alphabet, Automata.Core.Alphabet)
  nameWithType: Alphabet.operator !=(Alphabet, Alphabet)
  nameWithType.vb: Alphabet.<>(Alphabet, Alphabet)
- uid: Automata.Core.Alphabet.op_Inequality*
  name: operator !=
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_op_Inequality_
  commentId: Overload:Automata.Core.Alphabet.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Automata.Core.Alphabet.operator !=
  fullName.vb: Automata.Core.Alphabet.<>
  nameWithType: Alphabet.operator !=
  nameWithType.vb: Alphabet.<>
- uid: Automata.Core.Constants
  name: Constants
  href: Automata.Core.Constants.html
  commentId: T:Automata.Core.Constants
  fullName: Automata.Core.Constants
  nameWithType: Constants
- uid: Automata.Core.Constants.InvalidState
  name: InvalidState
  href: Automata.Core.Constants.html#Automata_Core_Constants_InvalidState
  commentId: F:Automata.Core.Constants.InvalidState
  fullName: Automata.Core.Constants.InvalidState
  nameWithType: Constants.InvalidState
- uid: Automata.Core.Constants.InvalidSymbolIndex
  name: InvalidSymbolIndex
  href: Automata.Core.Constants.html#Automata_Core_Constants_InvalidSymbolIndex
  commentId: F:Automata.Core.Constants.InvalidSymbolIndex
  fullName: Automata.Core.Constants.InvalidSymbolIndex
  nameWithType: Constants.InvalidSymbolIndex
- uid: Automata.Core.Converter
  name: Converter
  href: Automata.Core.Converter.html
  commentId: T:Automata.Core.Converter
  fullName: Automata.Core.Converter
  nameWithType: Converter
- uid: Automata.Core.Converter.AsDeterministic(Automata.Core.Fsa)
  name: AsDeterministic(Fsa)
  href: Automata.Core.Converter.html#Automata_Core_Converter_AsDeterministic_Automata_Core_Fsa_
  commentId: M:Automata.Core.Converter.AsDeterministic(Automata.Core.Fsa)
  fullName: Automata.Core.Converter.AsDeterministic(Automata.Core.Fsa)
  nameWithType: Converter.AsDeterministic(Fsa)
- uid: Automata.Core.Converter.AsDeterministic*
  name: AsDeterministic
  href: Automata.Core.Converter.html#Automata_Core_Converter_AsDeterministic_
  commentId: Overload:Automata.Core.Converter.AsDeterministic
  isSpec: "True"
  fullName: Automata.Core.Converter.AsDeterministic
  nameWithType: Converter.AsDeterministic
- uid: Automata.Core.Converter.AsMfa(Automata.Core.Fsa)
  name: AsMfa(Fsa)
  href: Automata.Core.Converter.html#Automata_Core_Converter_AsMfa_Automata_Core_Fsa_
  commentId: M:Automata.Core.Converter.AsMfa(Automata.Core.Fsa)
  fullName: Automata.Core.Converter.AsMfa(Automata.Core.Fsa)
  nameWithType: Converter.AsMfa(Fsa)
- uid: Automata.Core.Converter.AsMfa*
  name: AsMfa
  href: Automata.Core.Converter.html#Automata_Core_Converter_AsMfa_
  commentId: Overload:Automata.Core.Converter.AsMfa
  isSpec: "True"
  fullName: Automata.Core.Converter.AsMfa
  nameWithType: Converter.AsMfa
- uid: Automata.Core.Converter.AsNfa(Automata.Core.Fsa)
  name: AsNfa(Fsa)
  href: Automata.Core.Converter.html#Automata_Core_Converter_AsNfa_Automata_Core_Fsa_
  commentId: M:Automata.Core.Converter.AsNfa(Automata.Core.Fsa)
  fullName: Automata.Core.Converter.AsNfa(Automata.Core.Fsa)
  nameWithType: Converter.AsNfa(Fsa)
- uid: Automata.Core.Converter.AsNfa*
  name: AsNfa
  href: Automata.Core.Converter.html#Automata_Core_Converter_AsNfa_
  commentId: Overload:Automata.Core.Converter.AsNfa
  isSpec: "True"
  fullName: Automata.Core.Converter.AsNfa
  nameWithType: Converter.AsNfa
- uid: Automata.Core.Dfa
  name: Dfa
  href: Automata.Core.Dfa.html
  commentId: T:Automata.Core.Dfa
  fullName: Automata.Core.Dfa
  nameWithType: Dfa
- uid: Automata.Core.Dfa.#ctor(Automata.Core.Alphabet)
  name: Dfa(Alphabet)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa__ctor_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Dfa.#ctor(Automata.Core.Alphabet)
  name.vb: New(Alphabet)
  fullName: Automata.Core.Dfa.Dfa(Automata.Core.Alphabet)
  fullName.vb: Automata.Core.Dfa.New(Automata.Core.Alphabet)
  nameWithType: Dfa.Dfa(Alphabet)
  nameWithType.vb: Dfa.New(Alphabet)
- uid: Automata.Core.Dfa.#ctor*
  name: Dfa
  href: Automata.Core.Dfa.html#Automata_Core_Dfa__ctor_
  commentId: Overload:Automata.Core.Dfa.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Dfa.Dfa
  fullName.vb: Automata.Core.Dfa.New
  nameWithType: Dfa.Dfa
  nameWithType.vb: Dfa.New
- uid: Automata.Core.Dfa.Add(Automata.Core.Transition)
  name: Add(Transition)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Add_Automata_Core_Transition_
  commentId: M:Automata.Core.Dfa.Add(Automata.Core.Transition)
  fullName: Automata.Core.Dfa.Add(Automata.Core.Transition)
  nameWithType: Dfa.Add(Transition)
- uid: Automata.Core.Dfa.Add*
  name: Add
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Add_
  commentId: Overload:Automata.Core.Dfa.Add
  isSpec: "True"
  fullName: Automata.Core.Dfa.Add
  nameWithType: Dfa.Add
- uid: Automata.Core.Dfa.FinalStates
  name: FinalStates
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_FinalStates
  commentId: P:Automata.Core.Dfa.FinalStates
  fullName: Automata.Core.Dfa.FinalStates
  nameWithType: Dfa.FinalStates
- uid: Automata.Core.Dfa.FinalStates*
  name: FinalStates
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_FinalStates_
  commentId: Overload:Automata.Core.Dfa.FinalStates
  isSpec: "True"
  fullName: Automata.Core.Dfa.FinalStates
  nameWithType: Dfa.FinalStates
- uid: Automata.Core.Dfa.InitialState
  name: InitialState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_InitialState
  commentId: P:Automata.Core.Dfa.InitialState
  fullName: Automata.Core.Dfa.InitialState
  nameWithType: Dfa.InitialState
- uid: Automata.Core.Dfa.InitialState*
  name: InitialState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_InitialState_
  commentId: Overload:Automata.Core.Dfa.InitialState
  isSpec: "True"
  fullName: Automata.Core.Dfa.InitialState
  nameWithType: Dfa.InitialState
- uid: Automata.Core.Dfa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsFinal_System_Int32_
  commentId: M:Automata.Core.Dfa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.Dfa.IsFinal(int)
  fullName.vb: Automata.Core.Dfa.IsFinal(Integer)
  nameWithType: Dfa.IsFinal(int)
  nameWithType.vb: Dfa.IsFinal(Integer)
- uid: Automata.Core.Dfa.IsFinal*
  name: IsFinal
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_IsFinal_
  commentId: Overload:Automata.Core.Dfa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.Dfa.IsFinal
  nameWithType: Dfa.IsFinal
- uid: Automata.Core.Dfa.MaxState
  name: MaxState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_MaxState
  commentId: P:Automata.Core.Dfa.MaxState
  fullName: Automata.Core.Dfa.MaxState
  nameWithType: Dfa.MaxState
- uid: Automata.Core.Dfa.MaxState*
  name: MaxState
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_MaxState_
  commentId: Overload:Automata.Core.Dfa.MaxState
  isSpec: "True"
  fullName: Automata.Core.Dfa.MaxState
  nameWithType: Dfa.MaxState
- uid: Automata.Core.Dfa.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name: SetFinal(IEnumerable<int>, bool)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetFinal_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_
  commentId: M:Automata.Core.Dfa.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name.vb: SetFinal(IEnumerable(Of Integer), Boolean)
  fullName: Automata.Core.Dfa.SetFinal(System.Collections.Generic.IEnumerable<int>, bool)
  fullName.vb: Automata.Core.Dfa.SetFinal(System.Collections.Generic.IEnumerable(Of Integer), Boolean)
  nameWithType: Dfa.SetFinal(IEnumerable<int>, bool)
  nameWithType.vb: Dfa.SetFinal(IEnumerable(Of Integer), Boolean)
- uid: Automata.Core.Dfa.SetFinal(System.Int32,System.Boolean)
  name: SetFinal(int, bool)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetFinal_System_Int32_System_Boolean_
  commentId: M:Automata.Core.Dfa.SetFinal(System.Int32,System.Boolean)
  name.vb: SetFinal(Integer, Boolean)
  fullName: Automata.Core.Dfa.SetFinal(int, bool)
  fullName.vb: Automata.Core.Dfa.SetFinal(Integer, Boolean)
  nameWithType: Dfa.SetFinal(int, bool)
  nameWithType.vb: Dfa.SetFinal(Integer, Boolean)
- uid: Automata.Core.Dfa.SetFinal*
  name: SetFinal
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetFinal_
  commentId: Overload:Automata.Core.Dfa.SetFinal
  isSpec: "True"
  fullName: Automata.Core.Dfa.SetFinal
  nameWithType: Dfa.SetFinal
- uid: Automata.Core.Dfa.SetInitial(System.Int32)
  name: SetInitial(int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetInitial_System_Int32_
  commentId: M:Automata.Core.Dfa.SetInitial(System.Int32)
  name.vb: SetInitial(Integer)
  fullName: Automata.Core.Dfa.SetInitial(int)
  fullName.vb: Automata.Core.Dfa.SetInitial(Integer)
  nameWithType: Dfa.SetInitial(int)
  nameWithType.vb: Dfa.SetInitial(Integer)
- uid: Automata.Core.Dfa.SetInitial*
  name: SetInitial
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_SetInitial_
  commentId: Overload:Automata.Core.Dfa.SetInitial
  isSpec: "True"
  fullName: Automata.Core.Dfa.SetInitial
  nameWithType: Dfa.SetInitial
- uid: Automata.Core.Dfa.State(System.Int32)
  name: State(int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_State_System_Int32_
  commentId: M:Automata.Core.Dfa.State(System.Int32)
  name.vb: State(Integer)
  fullName: Automata.Core.Dfa.State(int)
  fullName.vb: Automata.Core.Dfa.State(Integer)
  nameWithType: Dfa.State(int)
  nameWithType.vb: Dfa.State(Integer)
- uid: Automata.Core.Dfa.State*
  name: State
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_State_
  commentId: Overload:Automata.Core.Dfa.State
  isSpec: "True"
  fullName: Automata.Core.Dfa.State
  nameWithType: Dfa.State
- uid: Automata.Core.Dfa.ToCanonicalString
  name: ToCanonicalString()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_ToCanonicalString
  commentId: M:Automata.Core.Dfa.ToCanonicalString
  fullName: Automata.Core.Dfa.ToCanonicalString()
  nameWithType: Dfa.ToCanonicalString()
- uid: Automata.Core.Dfa.ToCanonicalString*
  name: ToCanonicalString
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_ToCanonicalString_
  commentId: Overload:Automata.Core.Dfa.ToCanonicalString
  isSpec: "True"
  fullName: Automata.Core.Dfa.ToCanonicalString
  nameWithType: Dfa.ToCanonicalString
- uid: Automata.Core.Dfa.Transition(System.Int32,System.Int32)
  name: Transition(int, int)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Transition_System_Int32_System_Int32_
  commentId: M:Automata.Core.Dfa.Transition(System.Int32,System.Int32)
  name.vb: Transition(Integer, Integer)
  fullName: Automata.Core.Dfa.Transition(int, int)
  fullName.vb: Automata.Core.Dfa.Transition(Integer, Integer)
  nameWithType: Dfa.Transition(int, int)
  nameWithType.vb: Dfa.Transition(Integer, Integer)
- uid: Automata.Core.Dfa.Transition*
  name: Transition
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Transition_
  commentId: Overload:Automata.Core.Dfa.Transition
  isSpec: "True"
  fullName: Automata.Core.Dfa.Transition
  nameWithType: Dfa.Transition
- uid: Automata.Core.Dfa.TransitionCount
  name: TransitionCount
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_TransitionCount
  commentId: P:Automata.Core.Dfa.TransitionCount
  fullName: Automata.Core.Dfa.TransitionCount
  nameWithType: Dfa.TransitionCount
- uid: Automata.Core.Dfa.TransitionCount*
  name: TransitionCount
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_TransitionCount_
  commentId: Overload:Automata.Core.Dfa.TransitionCount
  isSpec: "True"
  fullName: Automata.Core.Dfa.TransitionCount
  nameWithType: Dfa.TransitionCount
- uid: Automata.Core.Dfa.Transitions
  name: Transitions()
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Transitions
  commentId: M:Automata.Core.Dfa.Transitions
  fullName: Automata.Core.Dfa.Transitions()
  nameWithType: Dfa.Transitions()
- uid: Automata.Core.Dfa.Transitions*
  name: Transitions
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_Transitions_
  commentId: Overload:Automata.Core.Dfa.Transitions
  isSpec: "True"
  fullName: Automata.Core.Dfa.Transitions
  nameWithType: Dfa.Transitions
- uid: Automata.Core.Dfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.Transition})
  name: UnionWith(IEnumerable<Transition>)
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_UnionWith_System_Collections_Generic_IEnumerable_Automata_Core_Transition__
  commentId: M:Automata.Core.Dfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.Transition})
  name.vb: UnionWith(IEnumerable(Of Transition))
  fullName: Automata.Core.Dfa.UnionWith(System.Collections.Generic.IEnumerable<Automata.Core.Transition>)
  fullName.vb: Automata.Core.Dfa.UnionWith(System.Collections.Generic.IEnumerable(Of Automata.Core.Transition))
  nameWithType: Dfa.UnionWith(IEnumerable<Transition>)
  nameWithType.vb: Dfa.UnionWith(IEnumerable(Of Transition))
- uid: Automata.Core.Dfa.UnionWith*
  name: UnionWith
  href: Automata.Core.Dfa.html#Automata_Core_Dfa_UnionWith_
  commentId: Overload:Automata.Core.Dfa.UnionWith
  isSpec: "True"
  fullName: Automata.Core.Dfa.UnionWith
  nameWithType: Dfa.UnionWith
- uid: Automata.Core.EpsilonTransition
  name: EpsilonTransition
  href: Automata.Core.EpsilonTransition.html
  commentId: T:Automata.Core.EpsilonTransition
  fullName: Automata.Core.EpsilonTransition
  nameWithType: EpsilonTransition
- uid: Automata.Core.EpsilonTransition.#ctor(System.Int32,System.Int32)
  name: EpsilonTransition(int, int)
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition__ctor_System_Int32_System_Int32_
  commentId: M:Automata.Core.EpsilonTransition.#ctor(System.Int32,System.Int32)
  name.vb: New(Integer, Integer)
  fullName: Automata.Core.EpsilonTransition.EpsilonTransition(int, int)
  fullName.vb: Automata.Core.EpsilonTransition.New(Integer, Integer)
  nameWithType: EpsilonTransition.EpsilonTransition(int, int)
  nameWithType.vb: EpsilonTransition.New(Integer, Integer)
- uid: Automata.Core.EpsilonTransition.#ctor*
  name: EpsilonTransition
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition__ctor_
  commentId: Overload:Automata.Core.EpsilonTransition.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.EpsilonTransition.EpsilonTransition
  fullName.vb: Automata.Core.EpsilonTransition.New
  nameWithType: EpsilonTransition.EpsilonTransition
  nameWithType.vb: EpsilonTransition.New
- uid: Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  name: CompareTo(EpsilonTransition)
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_CompareTo_Automata_Core_EpsilonTransition_
  commentId: M:Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  fullName: Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  nameWithType: EpsilonTransition.CompareTo(EpsilonTransition)
- uid: Automata.Core.EpsilonTransition.CompareTo*
  name: CompareTo
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_CompareTo_
  commentId: Overload:Automata.Core.EpsilonTransition.CompareTo
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.CompareTo
  nameWithType: EpsilonTransition.CompareTo
- uid: Automata.Core.EpsilonTransition.Epsilon
  name: Epsilon
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Epsilon
  commentId: F:Automata.Core.EpsilonTransition.Epsilon
  fullName: Automata.Core.EpsilonTransition.Epsilon
  nameWithType: EpsilonTransition.Epsilon
- uid: Automata.Core.EpsilonTransition.FromState
  name: FromState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_FromState
  commentId: P:Automata.Core.EpsilonTransition.FromState
  fullName: Automata.Core.EpsilonTransition.FromState
  nameWithType: EpsilonTransition.FromState
- uid: Automata.Core.EpsilonTransition.FromState*
  name: FromState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_FromState_
  commentId: Overload:Automata.Core.EpsilonTransition.FromState
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.FromState
  nameWithType: EpsilonTransition.FromState
- uid: Automata.Core.EpsilonTransition.Reverse
  name: Reverse()
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Reverse
  commentId: M:Automata.Core.EpsilonTransition.Reverse
  fullName: Automata.Core.EpsilonTransition.Reverse()
  nameWithType: EpsilonTransition.Reverse()
- uid: Automata.Core.EpsilonTransition.Reverse*
  name: Reverse
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Reverse_
  commentId: Overload:Automata.Core.EpsilonTransition.Reverse
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.Reverse
  nameWithType: EpsilonTransition.Reverse
- uid: Automata.Core.EpsilonTransition.ToState
  name: ToState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_ToState
  commentId: P:Automata.Core.EpsilonTransition.ToState
  fullName: Automata.Core.EpsilonTransition.ToState
  nameWithType: EpsilonTransition.ToState
- uid: Automata.Core.EpsilonTransition.ToState*
  name: ToState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_ToState_
  commentId: Overload:Automata.Core.EpsilonTransition.ToState
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.ToState
  nameWithType: EpsilonTransition.ToState
- uid: Automata.Core.EpsilonTransition.ToString
  name: ToString()
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_ToString
  commentId: M:Automata.Core.EpsilonTransition.ToString
  fullName: Automata.Core.EpsilonTransition.ToString()
  nameWithType: EpsilonTransition.ToString()
- uid: Automata.Core.EpsilonTransition.ToString*
  name: ToString
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_ToString_
  commentId: Overload:Automata.Core.EpsilonTransition.ToString
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.ToString
  nameWithType: EpsilonTransition.ToString
- uid: Automata.Core.Fsa
  name: Fsa
  href: Automata.Core.Fsa.html
  commentId: T:Automata.Core.Fsa
  fullName: Automata.Core.Fsa
  nameWithType: Fsa
- uid: Automata.Core.Fsa.#ctor(Automata.Core.Alphabet)
  name: Fsa(Alphabet)
  href: Automata.Core.Fsa.html#Automata_Core_Fsa__ctor_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Fsa.#ctor(Automata.Core.Alphabet)
  name.vb: New(Alphabet)
  fullName: Automata.Core.Fsa.Fsa(Automata.Core.Alphabet)
  fullName.vb: Automata.Core.Fsa.New(Automata.Core.Alphabet)
  nameWithType: Fsa.Fsa(Alphabet)
  nameWithType.vb: Fsa.New(Alphabet)
- uid: Automata.Core.Fsa.#ctor*
  name: Fsa
  href: Automata.Core.Fsa.html#Automata_Core_Fsa__ctor_
  commentId: Overload:Automata.Core.Fsa.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Fsa.Fsa
  fullName.vb: Automata.Core.Fsa.New
  nameWithType: Fsa.Fsa
  nameWithType.vb: Fsa.New
- uid: Automata.Core.Fsa.AcceptsEpsilon
  name: AcceptsEpsilon
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_AcceptsEpsilon
  commentId: P:Automata.Core.Fsa.AcceptsEpsilon
  fullName: Automata.Core.Fsa.AcceptsEpsilon
  nameWithType: Fsa.AcceptsEpsilon
- uid: Automata.Core.Fsa.AcceptsEpsilon*
  name: AcceptsEpsilon
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_AcceptsEpsilon_
  commentId: Overload:Automata.Core.Fsa.AcceptsEpsilon
  isSpec: "True"
  fullName: Automata.Core.Fsa.AcceptsEpsilon
  nameWithType: Fsa.AcceptsEpsilon
- uid: Automata.Core.Fsa.Alphabet
  name: Alphabet
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_Alphabet
  commentId: P:Automata.Core.Fsa.Alphabet
  fullName: Automata.Core.Fsa.Alphabet
  nameWithType: Fsa.Alphabet
- uid: Automata.Core.Fsa.Alphabet*
  name: Alphabet
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_Alphabet_
  commentId: Overload:Automata.Core.Fsa.Alphabet
  isSpec: "True"
  fullName: Automata.Core.Fsa.Alphabet
  nameWithType: Fsa.Alphabet
- uid: Automata.Core.Fsa.EpsilonTransitions
  name: EpsilonTransitions()
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_EpsilonTransitions
  commentId: M:Automata.Core.Fsa.EpsilonTransitions
  fullName: Automata.Core.Fsa.EpsilonTransitions()
  nameWithType: Fsa.EpsilonTransitions()
- uid: Automata.Core.Fsa.EpsilonTransitions*
  name: EpsilonTransitions
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_EpsilonTransitions_
  commentId: Overload:Automata.Core.Fsa.EpsilonTransitions
  isSpec: "True"
  fullName: Automata.Core.Fsa.EpsilonTransitions
  nameWithType: Fsa.EpsilonTransitions
- uid: Automata.Core.Fsa.FinalStates
  name: FinalStates
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_FinalStates
  commentId: P:Automata.Core.Fsa.FinalStates
  fullName: Automata.Core.Fsa.FinalStates
  nameWithType: Fsa.FinalStates
- uid: Automata.Core.Fsa.FinalStates*
  name: FinalStates
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_FinalStates_
  commentId: Overload:Automata.Core.Fsa.FinalStates
  isSpec: "True"
  fullName: Automata.Core.Fsa.FinalStates
  nameWithType: Fsa.FinalStates
- uid: Automata.Core.Fsa.HasInitialState
  name: HasInitialState
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_HasInitialState
  commentId: P:Automata.Core.Fsa.HasInitialState
  fullName: Automata.Core.Fsa.HasInitialState
  nameWithType: Fsa.HasInitialState
- uid: Automata.Core.Fsa.HasInitialState*
  name: HasInitialState
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_HasInitialState_
  commentId: Overload:Automata.Core.Fsa.HasInitialState
  isSpec: "True"
  fullName: Automata.Core.Fsa.HasInitialState
  nameWithType: Fsa.HasInitialState
- uid: Automata.Core.Fsa.IsEpsilonFree
  name: IsEpsilonFree
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_IsEpsilonFree
  commentId: P:Automata.Core.Fsa.IsEpsilonFree
  fullName: Automata.Core.Fsa.IsEpsilonFree
  nameWithType: Fsa.IsEpsilonFree
- uid: Automata.Core.Fsa.IsEpsilonFree*
  name: IsEpsilonFree
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_IsEpsilonFree_
  commentId: Overload:Automata.Core.Fsa.IsEpsilonFree
  isSpec: "True"
  fullName: Automata.Core.Fsa.IsEpsilonFree
  nameWithType: Fsa.IsEpsilonFree
- uid: Automata.Core.Fsa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_IsFinal_System_Int32_
  commentId: M:Automata.Core.Fsa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.Fsa.IsFinal(int)
  fullName.vb: Automata.Core.Fsa.IsFinal(Integer)
  nameWithType: Fsa.IsFinal(int)
  nameWithType.vb: Fsa.IsFinal(Integer)
- uid: Automata.Core.Fsa.IsFinal*
  name: IsFinal
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_IsFinal_
  commentId: Overload:Automata.Core.Fsa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.Fsa.IsFinal
  nameWithType: Fsa.IsFinal
- uid: Automata.Core.Fsa.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_IsInitial_System_Int32_
  commentId: M:Automata.Core.Fsa.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.Fsa.IsInitial(int)
  fullName.vb: Automata.Core.Fsa.IsInitial(Integer)
  nameWithType: Fsa.IsInitial(int)
  nameWithType.vb: Fsa.IsInitial(Integer)
- uid: Automata.Core.Fsa.IsInitial*
  name: IsInitial
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_IsInitial_
  commentId: Overload:Automata.Core.Fsa.IsInitial
  isSpec: "True"
  fullName: Automata.Core.Fsa.IsInitial
  nameWithType: Fsa.IsInitial
- uid: Automata.Core.Fsa.ToCanonicalString
  name: ToCanonicalString()
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_ToCanonicalString
  commentId: M:Automata.Core.Fsa.ToCanonicalString
  fullName: Automata.Core.Fsa.ToCanonicalString()
  nameWithType: Fsa.ToCanonicalString()
- uid: Automata.Core.Fsa.ToCanonicalString*
  name: ToCanonicalString
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_ToCanonicalString_
  commentId: Overload:Automata.Core.Fsa.ToCanonicalString
  isSpec: "True"
  fullName: Automata.Core.Fsa.ToCanonicalString
  nameWithType: Fsa.ToCanonicalString
- uid: Automata.Core.Fsa.Transitions
  name: Transitions()
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_Transitions
  commentId: M:Automata.Core.Fsa.Transitions
  fullName: Automata.Core.Fsa.Transitions()
  nameWithType: Fsa.Transitions()
- uid: Automata.Core.Fsa.Transitions*
  name: Transitions
  href: Automata.Core.Fsa.html#Automata_Core_Fsa_Transitions_
  commentId: Overload:Automata.Core.Fsa.Transitions
  isSpec: "True"
  fullName: Automata.Core.Fsa.Transitions
  nameWithType: Fsa.Transitions
- uid: Automata.Core.FsaDet
  name: FsaDet
  href: Automata.Core.FsaDet.html
  commentId: T:Automata.Core.FsaDet
  fullName: Automata.Core.FsaDet
  nameWithType: FsaDet
- uid: Automata.Core.FsaDet.#ctor(Automata.Core.Alphabet)
  name: FsaDet(Alphabet)
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet__ctor_Automata_Core_Alphabet_
  commentId: M:Automata.Core.FsaDet.#ctor(Automata.Core.Alphabet)
  name.vb: New(Alphabet)
  fullName: Automata.Core.FsaDet.FsaDet(Automata.Core.Alphabet)
  fullName.vb: Automata.Core.FsaDet.New(Automata.Core.Alphabet)
  nameWithType: FsaDet.FsaDet(Alphabet)
  nameWithType.vb: FsaDet.New(Alphabet)
- uid: Automata.Core.FsaDet.#ctor*
  name: FsaDet
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet__ctor_
  commentId: Overload:Automata.Core.FsaDet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.FsaDet.FsaDet
  fullName.vb: Automata.Core.FsaDet.New
  nameWithType: FsaDet.FsaDet
  nameWithType.vb: FsaDet.New
- uid: Automata.Core.FsaDet.Accepts(System.Collections.Generic.IEnumerable{System.String})
  name: Accepts(IEnumerable<string>)
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_Accepts_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.FsaDet.Accepts(System.Collections.Generic.IEnumerable{System.String})
  name.vb: Accepts(IEnumerable(Of String))
  fullName: Automata.Core.FsaDet.Accepts(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.FsaDet.Accepts(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: FsaDet.Accepts(IEnumerable<string>)
  nameWithType.vb: FsaDet.Accepts(IEnumerable(Of String))
- uid: Automata.Core.FsaDet.Accepts*
  name: Accepts
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_Accepts_
  commentId: Overload:Automata.Core.FsaDet.Accepts
  isSpec: "True"
  fullName: Automata.Core.FsaDet.Accepts
  nameWithType: FsaDet.Accepts
- uid: Automata.Core.FsaDet.AcceptsEpsilon
  name: AcceptsEpsilon
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_AcceptsEpsilon
  commentId: P:Automata.Core.FsaDet.AcceptsEpsilon
  fullName: Automata.Core.FsaDet.AcceptsEpsilon
  nameWithType: FsaDet.AcceptsEpsilon
- uid: Automata.Core.FsaDet.AcceptsEpsilon*
  name: AcceptsEpsilon
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_AcceptsEpsilon_
  commentId: Overload:Automata.Core.FsaDet.AcceptsEpsilon
  isSpec: "True"
  fullName: Automata.Core.FsaDet.AcceptsEpsilon
  nameWithType: FsaDet.AcceptsEpsilon
- uid: Automata.Core.FsaDet.EpsilonTransitions
  name: EpsilonTransitions()
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_EpsilonTransitions
  commentId: M:Automata.Core.FsaDet.EpsilonTransitions
  fullName: Automata.Core.FsaDet.EpsilonTransitions()
  nameWithType: FsaDet.EpsilonTransitions()
- uid: Automata.Core.FsaDet.EpsilonTransitions*
  name: EpsilonTransitions
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_EpsilonTransitions_
  commentId: Overload:Automata.Core.FsaDet.EpsilonTransitions
  isSpec: "True"
  fullName: Automata.Core.FsaDet.EpsilonTransitions
  nameWithType: FsaDet.EpsilonTransitions
- uid: Automata.Core.FsaDet.HasInitialState
  name: HasInitialState
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_HasInitialState
  commentId: P:Automata.Core.FsaDet.HasInitialState
  fullName: Automata.Core.FsaDet.HasInitialState
  nameWithType: FsaDet.HasInitialState
- uid: Automata.Core.FsaDet.HasInitialState*
  name: HasInitialState
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_HasInitialState_
  commentId: Overload:Automata.Core.FsaDet.HasInitialState
  isSpec: "True"
  fullName: Automata.Core.FsaDet.HasInitialState
  nameWithType: FsaDet.HasInitialState
- uid: Automata.Core.FsaDet.InitialState
  name: InitialState
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_InitialState
  commentId: P:Automata.Core.FsaDet.InitialState
  fullName: Automata.Core.FsaDet.InitialState
  nameWithType: FsaDet.InitialState
- uid: Automata.Core.FsaDet.InitialState*
  name: InitialState
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_InitialState_
  commentId: Overload:Automata.Core.FsaDet.InitialState
  isSpec: "True"
  fullName: Automata.Core.FsaDet.InitialState
  nameWithType: FsaDet.InitialState
- uid: Automata.Core.FsaDet.IsEpsilonFree
  name: IsEpsilonFree
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_IsEpsilonFree
  commentId: P:Automata.Core.FsaDet.IsEpsilonFree
  fullName: Automata.Core.FsaDet.IsEpsilonFree
  nameWithType: FsaDet.IsEpsilonFree
- uid: Automata.Core.FsaDet.IsEpsilonFree*
  name: IsEpsilonFree
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_IsEpsilonFree_
  commentId: Overload:Automata.Core.FsaDet.IsEpsilonFree
  isSpec: "True"
  fullName: Automata.Core.FsaDet.IsEpsilonFree
  nameWithType: FsaDet.IsEpsilonFree
- uid: Automata.Core.FsaDet.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_IsInitial_System_Int32_
  commentId: M:Automata.Core.FsaDet.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.FsaDet.IsInitial(int)
  fullName.vb: Automata.Core.FsaDet.IsInitial(Integer)
  nameWithType: FsaDet.IsInitial(int)
  nameWithType.vb: FsaDet.IsInitial(Integer)
- uid: Automata.Core.FsaDet.IsInitial*
  name: IsInitial
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_IsInitial_
  commentId: Overload:Automata.Core.FsaDet.IsInitial
  isSpec: "True"
  fullName: Automata.Core.FsaDet.IsInitial
  nameWithType: FsaDet.IsInitial
- uid: Automata.Core.FsaDet.MaxState
  name: MaxState
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_MaxState
  commentId: P:Automata.Core.FsaDet.MaxState
  fullName: Automata.Core.FsaDet.MaxState
  nameWithType: FsaDet.MaxState
- uid: Automata.Core.FsaDet.MaxState*
  name: MaxState
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_MaxState_
  commentId: Overload:Automata.Core.FsaDet.MaxState
  isSpec: "True"
  fullName: Automata.Core.FsaDet.MaxState
  nameWithType: FsaDet.MaxState
- uid: Automata.Core.FsaDet.State(System.Int32)
  name: State(int)
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_State_System_Int32_
  commentId: M:Automata.Core.FsaDet.State(System.Int32)
  name.vb: State(Integer)
  fullName: Automata.Core.FsaDet.State(int)
  fullName.vb: Automata.Core.FsaDet.State(Integer)
  nameWithType: FsaDet.State(int)
  nameWithType.vb: FsaDet.State(Integer)
- uid: Automata.Core.FsaDet.State*
  name: State
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_State_
  commentId: Overload:Automata.Core.FsaDet.State
  isSpec: "True"
  fullName: Automata.Core.FsaDet.State
  nameWithType: FsaDet.State
- uid: Automata.Core.FsaDet.Transition(System.Int32,System.Int32)
  name: Transition(int, int)
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_Transition_System_Int32_System_Int32_
  commentId: M:Automata.Core.FsaDet.Transition(System.Int32,System.Int32)
  name.vb: Transition(Integer, Integer)
  fullName: Automata.Core.FsaDet.Transition(int, int)
  fullName.vb: Automata.Core.FsaDet.Transition(Integer, Integer)
  nameWithType: FsaDet.Transition(int, int)
  nameWithType.vb: FsaDet.Transition(Integer, Integer)
- uid: Automata.Core.FsaDet.Transition*
  name: Transition
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_Transition_
  commentId: Overload:Automata.Core.FsaDet.Transition
  isSpec: "True"
  fullName: Automata.Core.FsaDet.Transition
  nameWithType: FsaDet.Transition
- uid: Automata.Core.FsaDet.TransitionCount
  name: TransitionCount
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_TransitionCount
  commentId: P:Automata.Core.FsaDet.TransitionCount
  fullName: Automata.Core.FsaDet.TransitionCount
  nameWithType: FsaDet.TransitionCount
- uid: Automata.Core.FsaDet.TransitionCount*
  name: TransitionCount
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_TransitionCount_
  commentId: Overload:Automata.Core.FsaDet.TransitionCount
  isSpec: "True"
  fullName: Automata.Core.FsaDet.TransitionCount
  nameWithType: FsaDet.TransitionCount
- uid: Automata.Core.FsaDet.TryTransition(System.Int32,System.Int32,System.Int32@)
  name: TryTransition(int, int, out int)
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_TryTransition_System_Int32_System_Int32_System_Int32__
  commentId: M:Automata.Core.FsaDet.TryTransition(System.Int32,System.Int32,System.Int32@)
  name.vb: TryTransition(Integer, Integer, Integer)
  fullName: Automata.Core.FsaDet.TryTransition(int, int, out int)
  fullName.vb: Automata.Core.FsaDet.TryTransition(Integer, Integer, Integer)
  nameWithType: FsaDet.TryTransition(int, int, out int)
  nameWithType.vb: FsaDet.TryTransition(Integer, Integer, Integer)
- uid: Automata.Core.FsaDet.TryTransition*
  name: TryTransition
  href: Automata.Core.FsaDet.html#Automata_Core_FsaDet_TryTransition_
  commentId: Overload:Automata.Core.FsaDet.TryTransition
  isSpec: "True"
  fullName: Automata.Core.FsaDet.TryTransition
  nameWithType: FsaDet.TryTransition
- uid: Automata.Core.IntSet
  name: IntSet
  href: Automata.Core.IntSet.html
  commentId: T:Automata.Core.IntSet
  fullName: Automata.Core.IntSet
  nameWithType: IntSet
- uid: Automata.Core.IntSet.#ctor(System.Collections.Generic.HashSet{System.Int32})
  name: IntSet(HashSet<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_System_Collections_Generic_HashSet_System_Int32__
  commentId: M:Automata.Core.IntSet.#ctor(System.Collections.Generic.HashSet{System.Int32})
  name.vb: New(HashSet(Of Integer))
  fullName: Automata.Core.IntSet.IntSet(System.Collections.Generic.HashSet<int>)
  fullName.vb: Automata.Core.IntSet.New(System.Collections.Generic.HashSet(Of Integer))
  nameWithType: IntSet.IntSet(HashSet<int>)
  nameWithType.vb: IntSet.New(HashSet(Of Integer))
- uid: Automata.Core.IntSet.#ctor(System.Collections.Generic.IEnumerable{System.Int32})
  name: IntSet(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.#ctor(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: New(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IntSet(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.New(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IntSet(IEnumerable<int>)
  nameWithType.vb: IntSet.New(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.#ctor(System.Collections.Generic.ISet{System.Int32})
  name: IntSet(ISet<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_System_Collections_Generic_ISet_System_Int32__
  commentId: M:Automata.Core.IntSet.#ctor(System.Collections.Generic.ISet{System.Int32})
  name.vb: New(ISet(Of Integer))
  fullName: Automata.Core.IntSet.IntSet(System.Collections.Generic.ISet<int>)
  fullName.vb: Automata.Core.IntSet.New(System.Collections.Generic.ISet(Of Integer))
  nameWithType: IntSet.IntSet(ISet<int>)
  nameWithType.vb: IntSet.New(ISet(Of Integer))
- uid: Automata.Core.IntSet.#ctor*
  name: IntSet
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_
  commentId: Overload:Automata.Core.IntSet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.IntSet.IntSet
  fullName.vb: Automata.Core.IntSet.New
  nameWithType: IntSet.IntSet
  nameWithType.vb: IntSet.New
- uid: Automata.Core.IntSet.Contains(System.Int32)
  name: Contains(int)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Contains_System_Int32_
  commentId: M:Automata.Core.IntSet.Contains(System.Int32)
  name.vb: Contains(Integer)
  fullName: Automata.Core.IntSet.Contains(int)
  fullName.vb: Automata.Core.IntSet.Contains(Integer)
  nameWithType: IntSet.Contains(int)
  nameWithType.vb: IntSet.Contains(Integer)
- uid: Automata.Core.IntSet.Contains*
  name: Contains
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Contains_
  commentId: Overload:Automata.Core.IntSet.Contains
  isSpec: "True"
  fullName: Automata.Core.IntSet.Contains
  nameWithType: IntSet.Contains
- uid: Automata.Core.IntSet.Count
  name: Count
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Count
  commentId: P:Automata.Core.IntSet.Count
  fullName: Automata.Core.IntSet.Count
  nameWithType: IntSet.Count
- uid: Automata.Core.IntSet.Count*
  name: Count
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Count_
  commentId: Overload:Automata.Core.IntSet.Count
  isSpec: "True"
  fullName: Automata.Core.IntSet.Count
  nameWithType: IntSet.Count
- uid: Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  name: Equals(IntSet?)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_Automata_Core_IntSet_
  commentId: M:Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  name.vb: Equals(IntSet)
  fullName: Automata.Core.IntSet.Equals(Automata.Core.IntSet?)
  fullName.vb: Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  nameWithType: IntSet.Equals(IntSet?)
  nameWithType.vb: IntSet.Equals(IntSet)
- uid: Automata.Core.IntSet.Equals(System.Object)
  name: Equals(object?)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_System_Object_
  commentId: M:Automata.Core.IntSet.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Automata.Core.IntSet.Equals(object?)
  fullName.vb: Automata.Core.IntSet.Equals(Object)
  nameWithType: IntSet.Equals(object?)
  nameWithType.vb: IntSet.Equals(Object)
- uid: Automata.Core.IntSet.Equals*
  name: Equals
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_
  commentId: Overload:Automata.Core.IntSet.Equals
  isSpec: "True"
  fullName: Automata.Core.IntSet.Equals
  nameWithType: IntSet.Equals
- uid: Automata.Core.IntSet.GetEnumerator
  name: GetEnumerator()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetEnumerator
  commentId: M:Automata.Core.IntSet.GetEnumerator
  fullName: Automata.Core.IntSet.GetEnumerator()
  nameWithType: IntSet.GetEnumerator()
- uid: Automata.Core.IntSet.GetEnumerator*
  name: GetEnumerator
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetEnumerator_
  commentId: Overload:Automata.Core.IntSet.GetEnumerator
  isSpec: "True"
  fullName: Automata.Core.IntSet.GetEnumerator
  nameWithType: IntSet.GetEnumerator
- uid: Automata.Core.IntSet.GetHashCode
  name: GetHashCode()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetHashCode
  commentId: M:Automata.Core.IntSet.GetHashCode
  fullName: Automata.Core.IntSet.GetHashCode()
  nameWithType: IntSet.GetHashCode()
- uid: Automata.Core.IntSet.GetHashCode*
  name: GetHashCode
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetHashCode_
  commentId: Overload:Automata.Core.IntSet.GetHashCode
  isSpec: "True"
  fullName: Automata.Core.IntSet.GetHashCode
  nameWithType: IntSet.GetHashCode
- uid: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsProperSubsetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSubsetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsProperSubsetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsProperSubsetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsProperSubsetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSubsetOf_
  commentId: Overload:Automata.Core.IntSet.IsProperSubsetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsProperSubsetOf
  nameWithType: IntSet.IsProperSubsetOf
- uid: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsProperSupersetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSupersetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsProperSupersetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsProperSupersetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsProperSupersetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSupersetOf_
  commentId: Overload:Automata.Core.IntSet.IsProperSupersetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsProperSupersetOf
  nameWithType: IntSet.IsProperSupersetOf
- uid: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsSubsetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSubsetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsSubsetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsSubsetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsSubsetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsSubsetOf*
  name: IsSubsetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSubsetOf_
  commentId: Overload:Automata.Core.IntSet.IsSubsetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsSubsetOf
  nameWithType: IntSet.IsSubsetOf
- uid: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsSupersetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSupersetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsSupersetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsSupersetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsSupersetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsSupersetOf*
  name: IsSupersetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSupersetOf_
  commentId: Overload:Automata.Core.IntSet.IsSupersetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsSupersetOf
  nameWithType: IntSet.IsSupersetOf
- uid: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable{System.Int32})
  name: Overlaps(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Overlaps_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Overlaps(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.Overlaps(IEnumerable<int>)
  nameWithType.vb: IntSet.Overlaps(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.Overlaps*
  name: Overlaps
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Overlaps_
  commentId: Overload:Automata.Core.IntSet.Overlaps
  isSpec: "True"
  fullName: Automata.Core.IntSet.Overlaps
  nameWithType: IntSet.Overlaps
- uid: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable{System.Int32})
  name: SetEquals(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_SetEquals_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: SetEquals(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.SetEquals(IEnumerable<int>)
  nameWithType.vb: IntSet.SetEquals(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.SetEquals*
  name: SetEquals
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_SetEquals_
  commentId: Overload:Automata.Core.IntSet.SetEquals
  isSpec: "True"
  fullName: Automata.Core.IntSet.SetEquals
  nameWithType: IntSet.SetEquals
- uid: Automata.Core.IntSet.ToString
  name: ToString()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_ToString
  commentId: M:Automata.Core.IntSet.ToString
  fullName: Automata.Core.IntSet.ToString()
  nameWithType: IntSet.ToString()
- uid: Automata.Core.IntSet.ToString*
  name: ToString
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_ToString_
  commentId: Overload:Automata.Core.IntSet.ToString
  isSpec: "True"
  fullName: Automata.Core.IntSet.ToString
  nameWithType: IntSet.ToString
- uid: Automata.Core.Mfa
  name: Mfa
  href: Automata.Core.Mfa.html
  commentId: T:Automata.Core.Mfa
  fullName: Automata.Core.Mfa
  nameWithType: Mfa
- uid: Automata.Core.Mfa.#ctor(Automata.Core.Dfa)
  name: Mfa(Dfa)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa__ctor_Automata_Core_Dfa_
  commentId: M:Automata.Core.Mfa.#ctor(Automata.Core.Dfa)
  name.vb: New(Dfa)
  fullName: Automata.Core.Mfa.Mfa(Automata.Core.Dfa)
  fullName.vb: Automata.Core.Mfa.New(Automata.Core.Dfa)
  nameWithType: Mfa.Mfa(Dfa)
  nameWithType.vb: Mfa.New(Dfa)
- uid: Automata.Core.Mfa.#ctor(System.String,Automata.Core.Alphabet)
  name: Mfa(string, Alphabet)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa__ctor_System_String_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Mfa.#ctor(System.String,Automata.Core.Alphabet)
  name.vb: New(String, Alphabet)
  fullName: Automata.Core.Mfa.Mfa(string, Automata.Core.Alphabet)
  fullName.vb: Automata.Core.Mfa.New(String, Automata.Core.Alphabet)
  nameWithType: Mfa.Mfa(string, Alphabet)
  nameWithType.vb: Mfa.New(String, Alphabet)
- uid: Automata.Core.Mfa.#ctor*
  name: Mfa
  href: Automata.Core.Mfa.html#Automata_Core_Mfa__ctor_
  commentId: Overload:Automata.Core.Mfa.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Mfa.Mfa
  fullName.vb: Automata.Core.Mfa.New
  nameWithType: Mfa.Mfa
  nameWithType.vb: Mfa.New
- uid: Automata.Core.Mfa.CreateEmpty(Automata.Core.Alphabet)
  name: CreateEmpty(Alphabet)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_CreateEmpty_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Mfa.CreateEmpty(Automata.Core.Alphabet)
  fullName: Automata.Core.Mfa.CreateEmpty(Automata.Core.Alphabet)
  nameWithType: Mfa.CreateEmpty(Alphabet)
- uid: Automata.Core.Mfa.CreateEmpty*
  name: CreateEmpty
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_CreateEmpty_
  commentId: Overload:Automata.Core.Mfa.CreateEmpty
  isSpec: "True"
  fullName: Automata.Core.Mfa.CreateEmpty
  nameWithType: Mfa.CreateEmpty
- uid: Automata.Core.Mfa.CreateWildcard(Automata.Core.Alphabet)
  name: CreateWildcard(Alphabet)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_CreateWildcard_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Mfa.CreateWildcard(Automata.Core.Alphabet)
  fullName: Automata.Core.Mfa.CreateWildcard(Automata.Core.Alphabet)
  nameWithType: Mfa.CreateWildcard(Alphabet)
- uid: Automata.Core.Mfa.CreateWildcard*
  name: CreateWildcard
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_CreateWildcard_
  commentId: Overload:Automata.Core.Mfa.CreateWildcard
  isSpec: "True"
  fullName: Automata.Core.Mfa.CreateWildcard
  nameWithType: Mfa.CreateWildcard
- uid: Automata.Core.Mfa.Equals(Automata.Core.Mfa)
  name: Equals(Mfa?)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_Equals_Automata_Core_Mfa_
  commentId: M:Automata.Core.Mfa.Equals(Automata.Core.Mfa)
  name.vb: Equals(Mfa)
  fullName: Automata.Core.Mfa.Equals(Automata.Core.Mfa?)
  fullName.vb: Automata.Core.Mfa.Equals(Automata.Core.Mfa)
  nameWithType: Mfa.Equals(Mfa?)
  nameWithType.vb: Mfa.Equals(Mfa)
- uid: Automata.Core.Mfa.Equals(System.Object)
  name: Equals(object?)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_Equals_System_Object_
  commentId: M:Automata.Core.Mfa.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Automata.Core.Mfa.Equals(object?)
  fullName.vb: Automata.Core.Mfa.Equals(Object)
  nameWithType: Mfa.Equals(object?)
  nameWithType.vb: Mfa.Equals(Object)
- uid: Automata.Core.Mfa.Equals*
  name: Equals
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_Equals_
  commentId: Overload:Automata.Core.Mfa.Equals
  isSpec: "True"
  fullName: Automata.Core.Mfa.Equals
  nameWithType: Mfa.Equals
- uid: Automata.Core.Mfa.FinalStates
  name: FinalStates
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_FinalStates
  commentId: P:Automata.Core.Mfa.FinalStates
  fullName: Automata.Core.Mfa.FinalStates
  nameWithType: Mfa.FinalStates
- uid: Automata.Core.Mfa.FinalStates*
  name: FinalStates
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_FinalStates_
  commentId: Overload:Automata.Core.Mfa.FinalStates
  isSpec: "True"
  fullName: Automata.Core.Mfa.FinalStates
  nameWithType: Mfa.FinalStates
- uid: Automata.Core.Mfa.GetHashCode
  name: GetHashCode()
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_GetHashCode
  commentId: M:Automata.Core.Mfa.GetHashCode
  fullName: Automata.Core.Mfa.GetHashCode()
  nameWithType: Mfa.GetHashCode()
- uid: Automata.Core.Mfa.GetHashCode*
  name: GetHashCode
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_GetHashCode_
  commentId: Overload:Automata.Core.Mfa.GetHashCode
  isSpec: "True"
  fullName: Automata.Core.Mfa.GetHashCode
  nameWithType: Mfa.GetHashCode
- uid: Automata.Core.Mfa.InitialState
  name: InitialState
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_InitialState
  commentId: P:Automata.Core.Mfa.InitialState
  fullName: Automata.Core.Mfa.InitialState
  nameWithType: Mfa.InitialState
- uid: Automata.Core.Mfa.InitialState*
  name: InitialState
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_InitialState_
  commentId: Overload:Automata.Core.Mfa.InitialState
  isSpec: "True"
  fullName: Automata.Core.Mfa.InitialState
  nameWithType: Mfa.InitialState
- uid: Automata.Core.Mfa.IsEmptyLanguage
  name: IsEmptyLanguage
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_IsEmptyLanguage
  commentId: P:Automata.Core.Mfa.IsEmptyLanguage
  fullName: Automata.Core.Mfa.IsEmptyLanguage
  nameWithType: Mfa.IsEmptyLanguage
- uid: Automata.Core.Mfa.IsEmptyLanguage*
  name: IsEmptyLanguage
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_IsEmptyLanguage_
  commentId: Overload:Automata.Core.Mfa.IsEmptyLanguage
  isSpec: "True"
  fullName: Automata.Core.Mfa.IsEmptyLanguage
  nameWithType: Mfa.IsEmptyLanguage
- uid: Automata.Core.Mfa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_IsFinal_System_Int32_
  commentId: M:Automata.Core.Mfa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.Mfa.IsFinal(int)
  fullName.vb: Automata.Core.Mfa.IsFinal(Integer)
  nameWithType: Mfa.IsFinal(int)
  nameWithType.vb: Mfa.IsFinal(Integer)
- uid: Automata.Core.Mfa.IsFinal*
  name: IsFinal
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_IsFinal_
  commentId: Overload:Automata.Core.Mfa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.Mfa.IsFinal
  nameWithType: Mfa.IsFinal
- uid: Automata.Core.Mfa.LanguageEquals(Automata.Core.Mfa)
  name: LanguageEquals(Mfa)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_LanguageEquals_Automata_Core_Mfa_
  commentId: M:Automata.Core.Mfa.LanguageEquals(Automata.Core.Mfa)
  fullName: Automata.Core.Mfa.LanguageEquals(Automata.Core.Mfa)
  nameWithType: Mfa.LanguageEquals(Mfa)
- uid: Automata.Core.Mfa.LanguageEquals*
  name: LanguageEquals
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_LanguageEquals_
  commentId: Overload:Automata.Core.Mfa.LanguageEquals
  isSpec: "True"
  fullName: Automata.Core.Mfa.LanguageEquals
  nameWithType: Mfa.LanguageEquals
- uid: Automata.Core.Mfa.MaxState
  name: MaxState
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_MaxState
  commentId: P:Automata.Core.Mfa.MaxState
  fullName: Automata.Core.Mfa.MaxState
  nameWithType: Mfa.MaxState
- uid: Automata.Core.Mfa.MaxState*
  name: MaxState
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_MaxState_
  commentId: Overload:Automata.Core.Mfa.MaxState
  isSpec: "True"
  fullName: Automata.Core.Mfa.MaxState
  nameWithType: Mfa.MaxState
- uid: Automata.Core.Mfa.State(System.Int32)
  name: State(int)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_State_System_Int32_
  commentId: M:Automata.Core.Mfa.State(System.Int32)
  name.vb: State(Integer)
  fullName: Automata.Core.Mfa.State(int)
  fullName.vb: Automata.Core.Mfa.State(Integer)
  nameWithType: Mfa.State(int)
  nameWithType.vb: Mfa.State(Integer)
- uid: Automata.Core.Mfa.State*
  name: State
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_State_
  commentId: Overload:Automata.Core.Mfa.State
  isSpec: "True"
  fullName: Automata.Core.Mfa.State
  nameWithType: Mfa.State
- uid: Automata.Core.Mfa.StateCount
  name: StateCount
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_StateCount
  commentId: P:Automata.Core.Mfa.StateCount
  fullName: Automata.Core.Mfa.StateCount
  nameWithType: Mfa.StateCount
- uid: Automata.Core.Mfa.StateCount*
  name: StateCount
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_StateCount_
  commentId: Overload:Automata.Core.Mfa.StateCount
  isSpec: "True"
  fullName: Automata.Core.Mfa.StateCount
  nameWithType: Mfa.StateCount
- uid: Automata.Core.Mfa.ToCanonicalString
  name: ToCanonicalString()
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_ToCanonicalString
  commentId: M:Automata.Core.Mfa.ToCanonicalString
  fullName: Automata.Core.Mfa.ToCanonicalString()
  nameWithType: Mfa.ToCanonicalString()
- uid: Automata.Core.Mfa.ToCanonicalString*
  name: ToCanonicalString
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_ToCanonicalString_
  commentId: Overload:Automata.Core.Mfa.ToCanonicalString
  isSpec: "True"
  fullName: Automata.Core.Mfa.ToCanonicalString
  nameWithType: Mfa.ToCanonicalString
- uid: Automata.Core.Mfa.Transition(System.Int32,System.Int32)
  name: Transition(int, int)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_Transition_System_Int32_System_Int32_
  commentId: M:Automata.Core.Mfa.Transition(System.Int32,System.Int32)
  name.vb: Transition(Integer, Integer)
  fullName: Automata.Core.Mfa.Transition(int, int)
  fullName.vb: Automata.Core.Mfa.Transition(Integer, Integer)
  nameWithType: Mfa.Transition(int, int)
  nameWithType.vb: Mfa.Transition(Integer, Integer)
- uid: Automata.Core.Mfa.Transition*
  name: Transition
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_Transition_
  commentId: Overload:Automata.Core.Mfa.Transition
  isSpec: "True"
  fullName: Automata.Core.Mfa.Transition
  nameWithType: Mfa.Transition
- uid: Automata.Core.Mfa.TransitionCount
  name: TransitionCount
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_TransitionCount
  commentId: P:Automata.Core.Mfa.TransitionCount
  fullName: Automata.Core.Mfa.TransitionCount
  nameWithType: Mfa.TransitionCount
- uid: Automata.Core.Mfa.TransitionCount*
  name: TransitionCount
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_TransitionCount_
  commentId: Overload:Automata.Core.Mfa.TransitionCount
  isSpec: "True"
  fullName: Automata.Core.Mfa.TransitionCount
  nameWithType: Mfa.TransitionCount
- uid: Automata.Core.Mfa.Transitions
  name: Transitions()
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_Transitions
  commentId: M:Automata.Core.Mfa.Transitions
  fullName: Automata.Core.Mfa.Transitions()
  nameWithType: Mfa.Transitions()
- uid: Automata.Core.Mfa.Transitions*
  name: Transitions
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_Transitions_
  commentId: Overload:Automata.Core.Mfa.Transitions
  isSpec: "True"
  fullName: Automata.Core.Mfa.Transitions
  nameWithType: Mfa.Transitions
- uid: Automata.Core.Mfa.op_Equality(Automata.Core.Mfa,Automata.Core.Mfa)
  name: operator ==(Mfa, Mfa)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_op_Equality_Automata_Core_Mfa_Automata_Core_Mfa_
  commentId: M:Automata.Core.Mfa.op_Equality(Automata.Core.Mfa,Automata.Core.Mfa)
  name.vb: =(Mfa, Mfa)
  fullName: Automata.Core.Mfa.operator ==(Automata.Core.Mfa, Automata.Core.Mfa)
  fullName.vb: Automata.Core.Mfa.=(Automata.Core.Mfa, Automata.Core.Mfa)
  nameWithType: Mfa.operator ==(Mfa, Mfa)
  nameWithType.vb: Mfa.=(Mfa, Mfa)
- uid: Automata.Core.Mfa.op_Equality*
  name: operator ==
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_op_Equality_
  commentId: Overload:Automata.Core.Mfa.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: Automata.Core.Mfa.operator ==
  fullName.vb: Automata.Core.Mfa.=
  nameWithType: Mfa.operator ==
  nameWithType.vb: Mfa.=
- uid: Automata.Core.Mfa.op_Inequality(Automata.Core.Mfa,Automata.Core.Mfa)
  name: operator !=(Mfa, Mfa)
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_op_Inequality_Automata_Core_Mfa_Automata_Core_Mfa_
  commentId: M:Automata.Core.Mfa.op_Inequality(Automata.Core.Mfa,Automata.Core.Mfa)
  name.vb: <>(Mfa, Mfa)
  fullName: Automata.Core.Mfa.operator !=(Automata.Core.Mfa, Automata.Core.Mfa)
  fullName.vb: Automata.Core.Mfa.<>(Automata.Core.Mfa, Automata.Core.Mfa)
  nameWithType: Mfa.operator !=(Mfa, Mfa)
  nameWithType.vb: Mfa.<>(Mfa, Mfa)
- uid: Automata.Core.Mfa.op_Inequality*
  name: operator !=
  href: Automata.Core.Mfa.html#Automata_Core_Mfa_op_Inequality_
  commentId: Overload:Automata.Core.Mfa.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: Automata.Core.Mfa.operator !=
  fullName.vb: Automata.Core.Mfa.<>
  nameWithType: Mfa.operator !=
  nameWithType.vb: Mfa.<>
- uid: Automata.Core.Nfa
  name: Nfa
  href: Automata.Core.Nfa.html
  commentId: T:Automata.Core.Nfa
  fullName: Automata.Core.Nfa
  nameWithType: Nfa
- uid: Automata.Core.Nfa.#ctor(Automata.Core.Alphabet)
  name: Nfa(Alphabet)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa__ctor_Automata_Core_Alphabet_
  commentId: M:Automata.Core.Nfa.#ctor(Automata.Core.Alphabet)
  name.vb: New(Alphabet)
  fullName: Automata.Core.Nfa.Nfa(Automata.Core.Alphabet)
  fullName.vb: Automata.Core.Nfa.New(Automata.Core.Alphabet)
  nameWithType: Nfa.Nfa(Alphabet)
  nameWithType.vb: Nfa.New(Alphabet)
- uid: Automata.Core.Nfa.#ctor(Automata.Core.Nfa)
  name: Nfa(Nfa)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa__ctor_Automata_Core_Nfa_
  commentId: M:Automata.Core.Nfa.#ctor(Automata.Core.Nfa)
  name.vb: New(Nfa)
  fullName: Automata.Core.Nfa.Nfa(Automata.Core.Nfa)
  fullName.vb: Automata.Core.Nfa.New(Automata.Core.Nfa)
  nameWithType: Nfa.Nfa(Nfa)
  nameWithType.vb: Nfa.New(Nfa)
- uid: Automata.Core.Nfa.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name: Nfa(IEnumerable<IEnumerable<string>>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa__ctor_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___
  commentId: M:Automata.Core.Nfa.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name.vb: New(IEnumerable(Of IEnumerable(Of String)))
  fullName: Automata.Core.Nfa.Nfa(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>)
  fullName.vb: Automata.Core.Nfa.New(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)))
  nameWithType: Nfa.Nfa(IEnumerable<IEnumerable<string>>)
  nameWithType.vb: Nfa.New(IEnumerable(Of IEnumerable(Of String)))
- uid: Automata.Core.Nfa.#ctor*
  name: Nfa
  href: Automata.Core.Nfa.html#Automata_Core_Nfa__ctor_
  commentId: Overload:Automata.Core.Nfa.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Nfa.Nfa
  fullName.vb: Automata.Core.Nfa.New
  nameWithType: Nfa.Nfa
  nameWithType.vb: Nfa.New
- uid: Automata.Core.Nfa.AcceptsEpsilon
  name: AcceptsEpsilon
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_AcceptsEpsilon
  commentId: P:Automata.Core.Nfa.AcceptsEpsilon
  fullName: Automata.Core.Nfa.AcceptsEpsilon
  nameWithType: Nfa.AcceptsEpsilon
- uid: Automata.Core.Nfa.AcceptsEpsilon*
  name: AcceptsEpsilon
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_AcceptsEpsilon_
  commentId: Overload:Automata.Core.Nfa.AcceptsEpsilon
  isSpec: "True"
  fullName: Automata.Core.Nfa.AcceptsEpsilon
  nameWithType: Nfa.AcceptsEpsilon
- uid: Automata.Core.Nfa.Add(Automata.Core.EpsilonTransition)
  name: Add(EpsilonTransition)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Add_Automata_Core_EpsilonTransition_
  commentId: M:Automata.Core.Nfa.Add(Automata.Core.EpsilonTransition)
  fullName: Automata.Core.Nfa.Add(Automata.Core.EpsilonTransition)
  nameWithType: Nfa.Add(EpsilonTransition)
- uid: Automata.Core.Nfa.Add(Automata.Core.Transition)
  name: Add(Transition)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Add_Automata_Core_Transition_
  commentId: M:Automata.Core.Nfa.Add(Automata.Core.Transition)
  fullName: Automata.Core.Nfa.Add(Automata.Core.Transition)
  nameWithType: Nfa.Add(Transition)
- uid: Automata.Core.Nfa.Add*
  name: Add
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Add_
  commentId: Overload:Automata.Core.Nfa.Add
  isSpec: "True"
  fullName: Automata.Core.Nfa.Add
  nameWithType: Nfa.Add
- uid: Automata.Core.Nfa.AvailableSymbols(System.Collections.Generic.IEnumerable{System.Int32})
  name: AvailableSymbols(IEnumerable<int>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_AvailableSymbols_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.Nfa.AvailableSymbols(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: AvailableSymbols(IEnumerable(Of Integer))
  fullName: Automata.Core.Nfa.AvailableSymbols(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.Nfa.AvailableSymbols(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: Nfa.AvailableSymbols(IEnumerable<int>)
  nameWithType.vb: Nfa.AvailableSymbols(IEnumerable(Of Integer))
- uid: Automata.Core.Nfa.AvailableSymbols*
  name: AvailableSymbols
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_AvailableSymbols_
  commentId: Overload:Automata.Core.Nfa.AvailableSymbols
  isSpec: "True"
  fullName: Automata.Core.Nfa.AvailableSymbols
  nameWithType: Nfa.AvailableSymbols
- uid: Automata.Core.Nfa.ClearAll
  name: ClearAll()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ClearAll
  commentId: M:Automata.Core.Nfa.ClearAll
  fullName: Automata.Core.Nfa.ClearAll()
  nameWithType: Nfa.ClearAll()
- uid: Automata.Core.Nfa.ClearAll*
  name: ClearAll
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ClearAll_
  commentId: Overload:Automata.Core.Nfa.ClearAll
  isSpec: "True"
  fullName: Automata.Core.Nfa.ClearAll
  nameWithType: Nfa.ClearAll
- uid: Automata.Core.Nfa.ClearFinalStates
  name: ClearFinalStates()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ClearFinalStates
  commentId: M:Automata.Core.Nfa.ClearFinalStates
  fullName: Automata.Core.Nfa.ClearFinalStates()
  nameWithType: Nfa.ClearFinalStates()
- uid: Automata.Core.Nfa.ClearFinalStates*
  name: ClearFinalStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ClearFinalStates_
  commentId: Overload:Automata.Core.Nfa.ClearFinalStates
  isSpec: "True"
  fullName: Automata.Core.Nfa.ClearFinalStates
  nameWithType: Nfa.ClearFinalStates
- uid: Automata.Core.Nfa.ClearInitialStates
  name: ClearInitialStates()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ClearInitialStates
  commentId: M:Automata.Core.Nfa.ClearInitialStates
  fullName: Automata.Core.Nfa.ClearInitialStates()
  nameWithType: Nfa.ClearInitialStates()
- uid: Automata.Core.Nfa.ClearInitialStates*
  name: ClearInitialStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ClearInitialStates_
  commentId: Overload:Automata.Core.Nfa.ClearInitialStates
  isSpec: "True"
  fullName: Automata.Core.Nfa.ClearInitialStates
  nameWithType: Nfa.ClearInitialStates
- uid: Automata.Core.Nfa.EpsilonTransitions
  name: EpsilonTransitions()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_EpsilonTransitions
  commentId: M:Automata.Core.Nfa.EpsilonTransitions
  fullName: Automata.Core.Nfa.EpsilonTransitions()
  nameWithType: Nfa.EpsilonTransitions()
- uid: Automata.Core.Nfa.EpsilonTransitions*
  name: EpsilonTransitions
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_EpsilonTransitions_
  commentId: Overload:Automata.Core.Nfa.EpsilonTransitions
  isSpec: "True"
  fullName: Automata.Core.Nfa.EpsilonTransitions
  nameWithType: Nfa.EpsilonTransitions
- uid: Automata.Core.Nfa.FinalStates
  name: FinalStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_FinalStates
  commentId: P:Automata.Core.Nfa.FinalStates
  fullName: Automata.Core.Nfa.FinalStates
  nameWithType: Nfa.FinalStates
- uid: Automata.Core.Nfa.FinalStates*
  name: FinalStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_FinalStates_
  commentId: Overload:Automata.Core.Nfa.FinalStates
  isSpec: "True"
  fullName: Automata.Core.Nfa.FinalStates
  nameWithType: Nfa.FinalStates
- uid: Automata.Core.Nfa.HasInitialState
  name: HasInitialState
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_HasInitialState
  commentId: P:Automata.Core.Nfa.HasInitialState
  fullName: Automata.Core.Nfa.HasInitialState
  nameWithType: Nfa.HasInitialState
- uid: Automata.Core.Nfa.HasInitialState*
  name: HasInitialState
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_HasInitialState_
  commentId: Overload:Automata.Core.Nfa.HasInitialState
  isSpec: "True"
  fullName: Automata.Core.Nfa.HasInitialState
  nameWithType: Nfa.HasInitialState
- uid: Automata.Core.Nfa.InitialStates
  name: InitialStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_InitialStates
  commentId: P:Automata.Core.Nfa.InitialStates
  fullName: Automata.Core.Nfa.InitialStates
  nameWithType: Nfa.InitialStates
- uid: Automata.Core.Nfa.InitialStates*
  name: InitialStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_InitialStates_
  commentId: Overload:Automata.Core.Nfa.InitialStates
  isSpec: "True"
  fullName: Automata.Core.Nfa.InitialStates
  nameWithType: Nfa.InitialStates
- uid: Automata.Core.Nfa.IsEpsilonFree
  name: IsEpsilonFree
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsEpsilonFree
  commentId: P:Automata.Core.Nfa.IsEpsilonFree
  fullName: Automata.Core.Nfa.IsEpsilonFree
  nameWithType: Nfa.IsEpsilonFree
- uid: Automata.Core.Nfa.IsEpsilonFree*
  name: IsEpsilonFree
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsEpsilonFree_
  commentId: Overload:Automata.Core.Nfa.IsEpsilonFree
  isSpec: "True"
  fullName: Automata.Core.Nfa.IsEpsilonFree
  nameWithType: Nfa.IsEpsilonFree
- uid: Automata.Core.Nfa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsFinal_System_Int32_
  commentId: M:Automata.Core.Nfa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.Nfa.IsFinal(int)
  fullName.vb: Automata.Core.Nfa.IsFinal(Integer)
  nameWithType: Nfa.IsFinal(int)
  nameWithType.vb: Nfa.IsFinal(Integer)
- uid: Automata.Core.Nfa.IsFinal*
  name: IsFinal
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsFinal_
  commentId: Overload:Automata.Core.Nfa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.Nfa.IsFinal
  nameWithType: Nfa.IsFinal
- uid: Automata.Core.Nfa.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsInitial_System_Int32_
  commentId: M:Automata.Core.Nfa.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.Nfa.IsInitial(int)
  fullName.vb: Automata.Core.Nfa.IsInitial(Integer)
  nameWithType: Nfa.IsInitial(int)
  nameWithType.vb: Nfa.IsInitial(Integer)
- uid: Automata.Core.Nfa.IsInitial*
  name: IsInitial
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_IsInitial_
  commentId: Overload:Automata.Core.Nfa.IsInitial
  isSpec: "True"
  fullName: Automata.Core.Nfa.IsInitial
  nameWithType: Nfa.IsInitial
- uid: Automata.Core.Nfa.MaxState
  name: MaxState
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_MaxState
  commentId: P:Automata.Core.Nfa.MaxState
  fullName: Automata.Core.Nfa.MaxState
  nameWithType: Nfa.MaxState
- uid: Automata.Core.Nfa.MaxState*
  name: MaxState
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_MaxState_
  commentId: Overload:Automata.Core.Nfa.MaxState
  isSpec: "True"
  fullName: Automata.Core.Nfa.MaxState
  nameWithType: Nfa.MaxState
- uid: Automata.Core.Nfa.ReachableStates(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)
  name: ReachableStates(IEnumerable<int>, int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStates_System_Collections_Generic_IEnumerable_System_Int32__System_Int32_
  commentId: M:Automata.Core.Nfa.ReachableStates(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)
  name.vb: ReachableStates(IEnumerable(Of Integer), Integer)
  fullName: Automata.Core.Nfa.ReachableStates(System.Collections.Generic.IEnumerable<int>, int)
  fullName.vb: Automata.Core.Nfa.ReachableStates(System.Collections.Generic.IEnumerable(Of Integer), Integer)
  nameWithType: Nfa.ReachableStates(IEnumerable<int>, int)
  nameWithType.vb: Nfa.ReachableStates(IEnumerable(Of Integer), Integer)
- uid: Automata.Core.Nfa.ReachableStates*
  name: ReachableStates
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStates_
  commentId: Overload:Automata.Core.Nfa.ReachableStates
  isSpec: "True"
  fullName: Automata.Core.Nfa.ReachableStates
  nameWithType: Nfa.ReachableStates
- uid: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet{System.Int32})
  name: ReachableStatesOnEpsilonInPlace(HashSet<int>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnEpsilonInPlace_System_Collections_Generic_HashSet_System_Int32__
  commentId: M:Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet{System.Int32})
  name.vb: ReachableStatesOnEpsilonInPlace(HashSet(Of Integer))
  fullName: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet<int>)
  fullName.vb: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet(Of Integer))
  nameWithType: Nfa.ReachableStatesOnEpsilonInPlace(HashSet<int>)
  nameWithType.vb: Nfa.ReachableStatesOnEpsilonInPlace(HashSet(Of Integer))
- uid: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace*
  name: ReachableStatesOnEpsilonInPlace
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnEpsilonInPlace_
  commentId: Overload:Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace
  isSpec: "True"
  fullName: Automata.Core.Nfa.ReachableStatesOnEpsilonInPlace
  nameWithType: Nfa.ReachableStatesOnEpsilonInPlace
- uid: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon(System.Int32)
  name: ReachableStatesOnSingleEpsilon(int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnSingleEpsilon_System_Int32_
  commentId: M:Automata.Core.Nfa.ReachableStatesOnSingleEpsilon(System.Int32)
  name.vb: ReachableStatesOnSingleEpsilon(Integer)
  fullName: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon(int)
  fullName.vb: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon(Integer)
  nameWithType: Nfa.ReachableStatesOnSingleEpsilon(int)
  nameWithType.vb: Nfa.ReachableStatesOnSingleEpsilon(Integer)
- uid: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon*
  name: ReachableStatesOnSingleEpsilon
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnSingleEpsilon_
  commentId: Overload:Automata.Core.Nfa.ReachableStatesOnSingleEpsilon
  isSpec: "True"
  fullName: Automata.Core.Nfa.ReachableStatesOnSingleEpsilon
  nameWithType: Nfa.ReachableStatesOnSingleEpsilon
- uid: Automata.Core.Nfa.ReachableStatesOnSingleSymbol(System.Int32,System.Int32)
  name: ReachableStatesOnSingleSymbol(int, int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnSingleSymbol_System_Int32_System_Int32_
  commentId: M:Automata.Core.Nfa.ReachableStatesOnSingleSymbol(System.Int32,System.Int32)
  name.vb: ReachableStatesOnSingleSymbol(Integer, Integer)
  fullName: Automata.Core.Nfa.ReachableStatesOnSingleSymbol(int, int)
  fullName.vb: Automata.Core.Nfa.ReachableStatesOnSingleSymbol(Integer, Integer)
  nameWithType: Nfa.ReachableStatesOnSingleSymbol(int, int)
  nameWithType.vb: Nfa.ReachableStatesOnSingleSymbol(Integer, Integer)
- uid: Automata.Core.Nfa.ReachableStatesOnSingleSymbol*
  name: ReachableStatesOnSingleSymbol
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ReachableStatesOnSingleSymbol_
  commentId: Overload:Automata.Core.Nfa.ReachableStatesOnSingleSymbol
  isSpec: "True"
  fullName: Automata.Core.Nfa.ReachableStatesOnSingleSymbol
  nameWithType: Nfa.ReachableStatesOnSingleSymbol
- uid: Automata.Core.Nfa.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name: SetFinal(IEnumerable<int>, bool)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetFinal_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_
  commentId: M:Automata.Core.Nfa.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name.vb: SetFinal(IEnumerable(Of Integer), Boolean)
  fullName: Automata.Core.Nfa.SetFinal(System.Collections.Generic.IEnumerable<int>, bool)
  fullName.vb: Automata.Core.Nfa.SetFinal(System.Collections.Generic.IEnumerable(Of Integer), Boolean)
  nameWithType: Nfa.SetFinal(IEnumerable<int>, bool)
  nameWithType.vb: Nfa.SetFinal(IEnumerable(Of Integer), Boolean)
- uid: Automata.Core.Nfa.SetFinal(System.Int32,System.Boolean)
  name: SetFinal(int, bool)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetFinal_System_Int32_System_Boolean_
  commentId: M:Automata.Core.Nfa.SetFinal(System.Int32,System.Boolean)
  name.vb: SetFinal(Integer, Boolean)
  fullName: Automata.Core.Nfa.SetFinal(int, bool)
  fullName.vb: Automata.Core.Nfa.SetFinal(Integer, Boolean)
  nameWithType: Nfa.SetFinal(int, bool)
  nameWithType.vb: Nfa.SetFinal(Integer, Boolean)
- uid: Automata.Core.Nfa.SetFinal*
  name: SetFinal
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetFinal_
  commentId: Overload:Automata.Core.Nfa.SetFinal
  isSpec: "True"
  fullName: Automata.Core.Nfa.SetFinal
  nameWithType: Nfa.SetFinal
- uid: Automata.Core.Nfa.SetInitial(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name: SetInitial(IEnumerable<int>, bool)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetInitial_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_
  commentId: M:Automata.Core.Nfa.SetInitial(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name.vb: SetInitial(IEnumerable(Of Integer), Boolean)
  fullName: Automata.Core.Nfa.SetInitial(System.Collections.Generic.IEnumerable<int>, bool)
  fullName.vb: Automata.Core.Nfa.SetInitial(System.Collections.Generic.IEnumerable(Of Integer), Boolean)
  nameWithType: Nfa.SetInitial(IEnumerable<int>, bool)
  nameWithType.vb: Nfa.SetInitial(IEnumerable(Of Integer), Boolean)
- uid: Automata.Core.Nfa.SetInitial(System.Int32,System.Boolean)
  name: SetInitial(int, bool)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetInitial_System_Int32_System_Boolean_
  commentId: M:Automata.Core.Nfa.SetInitial(System.Int32,System.Boolean)
  name.vb: SetInitial(Integer, Boolean)
  fullName: Automata.Core.Nfa.SetInitial(int, bool)
  fullName.vb: Automata.Core.Nfa.SetInitial(Integer, Boolean)
  nameWithType: Nfa.SetInitial(int, bool)
  nameWithType.vb: Nfa.SetInitial(Integer, Boolean)
- uid: Automata.Core.Nfa.SetInitial*
  name: SetInitial
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_SetInitial_
  commentId: Overload:Automata.Core.Nfa.SetInitial
  isSpec: "True"
  fullName: Automata.Core.Nfa.SetInitial
  nameWithType: Nfa.SetInitial
- uid: Automata.Core.Nfa.ToCanonicalString
  name: ToCanonicalString()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ToCanonicalString
  commentId: M:Automata.Core.Nfa.ToCanonicalString
  fullName: Automata.Core.Nfa.ToCanonicalString()
  nameWithType: Nfa.ToCanonicalString()
- uid: Automata.Core.Nfa.ToCanonicalString*
  name: ToCanonicalString
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_ToCanonicalString_
  commentId: Overload:Automata.Core.Nfa.ToCanonicalString
  isSpec: "True"
  fullName: Automata.Core.Nfa.ToCanonicalString
  nameWithType: Nfa.ToCanonicalString
- uid: Automata.Core.Nfa.Transitions
  name: Transitions()
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Transitions
  commentId: M:Automata.Core.Nfa.Transitions
  fullName: Automata.Core.Nfa.Transitions()
  nameWithType: Nfa.Transitions()
- uid: Automata.Core.Nfa.Transitions(System.Int32)
  name: Transitions(int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Transitions_System_Int32_
  commentId: M:Automata.Core.Nfa.Transitions(System.Int32)
  name.vb: Transitions(Integer)
  fullName: Automata.Core.Nfa.Transitions(int)
  fullName.vb: Automata.Core.Nfa.Transitions(Integer)
  nameWithType: Nfa.Transitions(int)
  nameWithType.vb: Nfa.Transitions(Integer)
- uid: Automata.Core.Nfa.Transitions(System.Int32,System.Int32)
  name: Transitions(int, int)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Transitions_System_Int32_System_Int32_
  commentId: M:Automata.Core.Nfa.Transitions(System.Int32,System.Int32)
  name.vb: Transitions(Integer, Integer)
  fullName: Automata.Core.Nfa.Transitions(int, int)
  fullName.vb: Automata.Core.Nfa.Transitions(Integer, Integer)
  nameWithType: Nfa.Transitions(int, int)
  nameWithType.vb: Nfa.Transitions(Integer, Integer)
- uid: Automata.Core.Nfa.Transitions*
  name: Transitions
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_Transitions_
  commentId: Overload:Automata.Core.Nfa.Transitions
  isSpec: "True"
  fullName: Automata.Core.Nfa.Transitions
  nameWithType: Nfa.Transitions
- uid: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.EpsilonTransition})
  name: UnionWith(IEnumerable<EpsilonTransition>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_System_Collections_Generic_IEnumerable_Automata_Core_EpsilonTransition__
  commentId: M:Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.EpsilonTransition})
  name.vb: UnionWith(IEnumerable(Of EpsilonTransition))
  fullName: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable<Automata.Core.EpsilonTransition>)
  fullName.vb: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable(Of Automata.Core.EpsilonTransition))
  nameWithType: Nfa.UnionWith(IEnumerable<EpsilonTransition>)
  nameWithType.vb: Nfa.UnionWith(IEnumerable(Of EpsilonTransition))
- uid: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.Transition})
  name: UnionWith(IEnumerable<Transition>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_System_Collections_Generic_IEnumerable_Automata_Core_Transition__
  commentId: M:Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.Transition})
  name.vb: UnionWith(IEnumerable(Of Transition))
  fullName: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable<Automata.Core.Transition>)
  fullName.vb: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable(Of Automata.Core.Transition))
  nameWithType: Nfa.UnionWith(IEnumerable<Transition>)
  nameWithType.vb: Nfa.UnionWith(IEnumerable(Of Transition))
- uid: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name: UnionWith(IEnumerable<IEnumerable<string>>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___
  commentId: M:Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name.vb: UnionWith(IEnumerable(Of IEnumerable(Of String)))
  fullName: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>)
  fullName.vb: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)))
  nameWithType: Nfa.UnionWith(IEnumerable<IEnumerable<string>>)
  nameWithType.vb: Nfa.UnionWith(IEnumerable(Of IEnumerable(Of String)))
- uid: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  name: UnionWith(IEnumerable<string>)
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  name.vb: UnionWith(IEnumerable(Of String))
  fullName: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.Nfa.UnionWith(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: Nfa.UnionWith(IEnumerable<string>)
  nameWithType.vb: Nfa.UnionWith(IEnumerable(Of String))
- uid: Automata.Core.Nfa.UnionWith*
  name: UnionWith
  href: Automata.Core.Nfa.html#Automata_Core_Nfa_UnionWith_
  commentId: Overload:Automata.Core.Nfa.UnionWith
  isSpec: "True"
  fullName: Automata.Core.Nfa.UnionWith
  nameWithType: Nfa.UnionWith
- uid: Automata.Core.Operations
  name: Automata.Core.Operations
  href: Automata.Core.Operations.html
  commentId: N:Automata.Core.Operations
  fullName: Automata.Core.Operations
  nameWithType: Automata.Core.Operations
- uid: Automata.Core.Operations.Ops
  name: Ops
  href: Automata.Core.Operations.Ops.html
  commentId: T:Automata.Core.Operations.Ops
  fullName: Automata.Core.Operations.Ops
  nameWithType: Ops
- uid: Automata.Core.Operations.Ops.Complement(Automata.Core.Mfa)
  name: Complement(Mfa)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Complement_Automata_Core_Mfa_
  commentId: M:Automata.Core.Operations.Ops.Complement(Automata.Core.Mfa)
  fullName: Automata.Core.Operations.Ops.Complement(Automata.Core.Mfa)
  nameWithType: Ops.Complement(Mfa)
- uid: Automata.Core.Operations.Ops.Complement*
  name: Complement
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Complement_
  commentId: Overload:Automata.Core.Operations.Ops.Complement
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.Complement
  nameWithType: Ops.Complement
- uid: Automata.Core.Operations.Ops.Concatenation(Automata.Core.Fsa,Automata.Core.FsaDet)
  name: Concatenation(Fsa, FsaDet)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Concatenation_Automata_Core_Fsa_Automata_Core_FsaDet_
  commentId: M:Automata.Core.Operations.Ops.Concatenation(Automata.Core.Fsa,Automata.Core.FsaDet)
  fullName: Automata.Core.Operations.Ops.Concatenation(Automata.Core.Fsa, Automata.Core.FsaDet)
  nameWithType: Ops.Concatenation(Fsa, FsaDet)
- uid: Automata.Core.Operations.Ops.Concatenation*
  name: Concatenation
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Concatenation_
  commentId: Overload:Automata.Core.Operations.Ops.Concatenation
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.Concatenation
  nameWithType: Ops.Concatenation
- uid: Automata.Core.Operations.Ops.ConcatenationWith(Automata.Core.Nfa,Automata.Core.FsaDet)
  name: ConcatenationWith(Nfa, FsaDet)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_ConcatenationWith_Automata_Core_Nfa_Automata_Core_FsaDet_
  commentId: M:Automata.Core.Operations.Ops.ConcatenationWith(Automata.Core.Nfa,Automata.Core.FsaDet)
  fullName: Automata.Core.Operations.Ops.ConcatenationWith(Automata.Core.Nfa, Automata.Core.FsaDet)
  nameWithType: Ops.ConcatenationWith(Nfa, FsaDet)
- uid: Automata.Core.Operations.Ops.ConcatenationWith*
  name: ConcatenationWith
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_ConcatenationWith_
  commentId: Overload:Automata.Core.Operations.Ops.ConcatenationWith
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.ConcatenationWith
  nameWithType: Ops.ConcatenationWith
- uid: Automata.Core.Operations.Ops.Difference(Automata.Core.FsaDet,Automata.Core.Mfa)
  name: Difference(FsaDet, Mfa)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Difference_Automata_Core_FsaDet_Automata_Core_Mfa_
  commentId: M:Automata.Core.Operations.Ops.Difference(Automata.Core.FsaDet,Automata.Core.Mfa)
  fullName: Automata.Core.Operations.Ops.Difference(Automata.Core.FsaDet, Automata.Core.Mfa)
  nameWithType: Ops.Difference(FsaDet, Mfa)
- uid: Automata.Core.Operations.Ops.Difference*
  name: Difference
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Difference_
  commentId: Overload:Automata.Core.Operations.Ops.Difference
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.Difference
  nameWithType: Ops.Difference
- uid: Automata.Core.Operations.Ops.Intersection(Automata.Core.FsaDet,Automata.Core.FsaDet)
  name: Intersection(FsaDet, FsaDet)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Intersection_Automata_Core_FsaDet_Automata_Core_FsaDet_
  commentId: M:Automata.Core.Operations.Ops.Intersection(Automata.Core.FsaDet,Automata.Core.FsaDet)
  fullName: Automata.Core.Operations.Ops.Intersection(Automata.Core.FsaDet, Automata.Core.FsaDet)
  nameWithType: Ops.Intersection(FsaDet, FsaDet)
- uid: Automata.Core.Operations.Ops.Intersection*
  name: Intersection
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Intersection_
  commentId: Overload:Automata.Core.Operations.Ops.Intersection
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.Intersection
  nameWithType: Ops.Intersection
- uid: Automata.Core.Operations.Ops.KleenePlusWith(Automata.Core.Nfa)
  name: KleenePlusWith(Nfa)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_KleenePlusWith_Automata_Core_Nfa_
  commentId: M:Automata.Core.Operations.Ops.KleenePlusWith(Automata.Core.Nfa)
  fullName: Automata.Core.Operations.Ops.KleenePlusWith(Automata.Core.Nfa)
  nameWithType: Ops.KleenePlusWith(Nfa)
- uid: Automata.Core.Operations.Ops.KleenePlusWith*
  name: KleenePlusWith
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_KleenePlusWith_
  commentId: Overload:Automata.Core.Operations.Ops.KleenePlusWith
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.KleenePlusWith
  nameWithType: Ops.KleenePlusWith
- uid: Automata.Core.Operations.Ops.KleeneStarWith(Automata.Core.Nfa)
  name: KleeneStarWith(Nfa)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_KleeneStarWith_Automata_Core_Nfa_
  commentId: M:Automata.Core.Operations.Ops.KleeneStarWith(Automata.Core.Nfa)
  fullName: Automata.Core.Operations.Ops.KleeneStarWith(Automata.Core.Nfa)
  nameWithType: Ops.KleeneStarWith(Nfa)
- uid: Automata.Core.Operations.Ops.KleeneStarWith*
  name: KleeneStarWith
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_KleeneStarWith_
  commentId: Overload:Automata.Core.Operations.Ops.KleeneStarWith
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.KleeneStarWith
  nameWithType: Ops.KleeneStarWith
- uid: Automata.Core.Operations.Ops.OptionWith(Automata.Core.Nfa)
  name: OptionWith(Nfa)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_OptionWith_Automata_Core_Nfa_
  commentId: M:Automata.Core.Operations.Ops.OptionWith(Automata.Core.Nfa)
  fullName: Automata.Core.Operations.Ops.OptionWith(Automata.Core.Nfa)
  nameWithType: Ops.OptionWith(Nfa)
- uid: Automata.Core.Operations.Ops.OptionWith*
  name: OptionWith
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_OptionWith_
  commentId: Overload:Automata.Core.Operations.Ops.OptionWith
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.OptionWith
  nameWithType: Ops.OptionWith
- uid: Automata.Core.Operations.Ops.Overlaps(Automata.Core.FsaDet,Automata.Core.FsaDet)
  name: Overlaps(FsaDet, FsaDet)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Overlaps_Automata_Core_FsaDet_Automata_Core_FsaDet_
  commentId: M:Automata.Core.Operations.Ops.Overlaps(Automata.Core.FsaDet,Automata.Core.FsaDet)
  fullName: Automata.Core.Operations.Ops.Overlaps(Automata.Core.FsaDet, Automata.Core.FsaDet)
  nameWithType: Ops.Overlaps(FsaDet, FsaDet)
- uid: Automata.Core.Operations.Ops.Overlaps*
  name: Overlaps
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Overlaps_
  commentId: Overload:Automata.Core.Operations.Ops.Overlaps
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.Overlaps
  nameWithType: Ops.Overlaps
- uid: Automata.Core.Operations.Ops.Reversal(Automata.Core.FsaDet)
  name: Reversal(FsaDet)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Reversal_Automata_Core_FsaDet_
  commentId: M:Automata.Core.Operations.Ops.Reversal(Automata.Core.FsaDet)
  fullName: Automata.Core.Operations.Ops.Reversal(Automata.Core.FsaDet)
  nameWithType: Ops.Reversal(FsaDet)
- uid: Automata.Core.Operations.Ops.Reversal*
  name: Reversal
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Reversal_
  commentId: Overload:Automata.Core.Operations.Ops.Reversal
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.Reversal
  nameWithType: Ops.Reversal
- uid: Automata.Core.Operations.Ops.Union(Automata.Core.Fsa,Automata.Core.FsaDet)
  name: Union(Fsa, FsaDet)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Union_Automata_Core_Fsa_Automata_Core_FsaDet_
  commentId: M:Automata.Core.Operations.Ops.Union(Automata.Core.Fsa,Automata.Core.FsaDet)
  fullName: Automata.Core.Operations.Ops.Union(Automata.Core.Fsa, Automata.Core.FsaDet)
  nameWithType: Ops.Union(Fsa, FsaDet)
- uid: Automata.Core.Operations.Ops.Union*
  name: Union
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_Union_
  commentId: Overload:Automata.Core.Operations.Ops.Union
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.Union
  nameWithType: Ops.Union
- uid: Automata.Core.Operations.Ops.UnionWith(Automata.Core.Nfa,Automata.Core.FsaDet)
  name: UnionWith(Nfa, FsaDet)
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_UnionWith_Automata_Core_Nfa_Automata_Core_FsaDet_
  commentId: M:Automata.Core.Operations.Ops.UnionWith(Automata.Core.Nfa,Automata.Core.FsaDet)
  fullName: Automata.Core.Operations.Ops.UnionWith(Automata.Core.Nfa, Automata.Core.FsaDet)
  nameWithType: Ops.UnionWith(Nfa, FsaDet)
- uid: Automata.Core.Operations.Ops.UnionWith*
  name: UnionWith
  href: Automata.Core.Operations.Ops.html#Automata_Core_Operations_Ops_UnionWith_
  commentId: Overload:Automata.Core.Operations.Ops.UnionWith
  isSpec: "True"
  fullName: Automata.Core.Operations.Ops.UnionWith
  nameWithType: Ops.UnionWith
- uid: Automata.Core.StateView
  name: StateView
  href: Automata.Core.StateView.html
  commentId: T:Automata.Core.StateView
  fullName: Automata.Core.StateView
  nameWithType: StateView
- uid: Automata.Core.StateView.#ctor(System.Int32,Automata.Core.Transition[])
  name: StateView(int, Transition[])
  href: Automata.Core.StateView.html#Automata_Core_StateView__ctor_System_Int32_Automata_Core_Transition___
  commentId: M:Automata.Core.StateView.#ctor(System.Int32,Automata.Core.Transition[])
  name.vb: New(Integer, Transition())
  fullName: Automata.Core.StateView.StateView(int, Automata.Core.Transition[])
  fullName.vb: Automata.Core.StateView.New(Integer, Automata.Core.Transition())
  nameWithType: StateView.StateView(int, Transition[])
  nameWithType.vb: StateView.New(Integer, Transition())
- uid: Automata.Core.StateView.#ctor(System.Int32,System.ReadOnlySpan{Automata.Core.Transition})
  name: StateView(int, ReadOnlySpan<Transition>)
  href: Automata.Core.StateView.html#Automata_Core_StateView__ctor_System_Int32_System_ReadOnlySpan_Automata_Core_Transition__
  commentId: M:Automata.Core.StateView.#ctor(System.Int32,System.ReadOnlySpan{Automata.Core.Transition})
  name.vb: New(Integer, ReadOnlySpan(Of Transition))
  fullName: Automata.Core.StateView.StateView(int, System.ReadOnlySpan<Automata.Core.Transition>)
  fullName.vb: Automata.Core.StateView.New(Integer, System.ReadOnlySpan(Of Automata.Core.Transition))
  nameWithType: StateView.StateView(int, ReadOnlySpan<Transition>)
  nameWithType.vb: StateView.New(Integer, ReadOnlySpan(Of Transition))
- uid: Automata.Core.StateView.#ctor*
  name: StateView
  href: Automata.Core.StateView.html#Automata_Core_StateView__ctor_
  commentId: Overload:Automata.Core.StateView.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.StateView.StateView
  fullName.vb: Automata.Core.StateView.New
  nameWithType: StateView.StateView
  nameWithType.vb: StateView.New
- uid: Automata.Core.StateView.State
  name: State
  href: Automata.Core.StateView.html#Automata_Core_StateView_State
  commentId: P:Automata.Core.StateView.State
  fullName: Automata.Core.StateView.State
  nameWithType: StateView.State
- uid: Automata.Core.StateView.State*
  name: State
  href: Automata.Core.StateView.html#Automata_Core_StateView_State_
  commentId: Overload:Automata.Core.StateView.State
  isSpec: "True"
  fullName: Automata.Core.StateView.State
  nameWithType: StateView.State
- uid: Automata.Core.StateView.Transition(System.Int32)
  name: Transition(int)
  href: Automata.Core.StateView.html#Automata_Core_StateView_Transition_System_Int32_
  commentId: M:Automata.Core.StateView.Transition(System.Int32)
  name.vb: Transition(Integer)
  fullName: Automata.Core.StateView.Transition(int)
  fullName.vb: Automata.Core.StateView.Transition(Integer)
  nameWithType: StateView.Transition(int)
  nameWithType.vb: StateView.Transition(Integer)
- uid: Automata.Core.StateView.Transition*
  name: Transition
  href: Automata.Core.StateView.html#Automata_Core_StateView_Transition_
  commentId: Overload:Automata.Core.StateView.Transition
  isSpec: "True"
  fullName: Automata.Core.StateView.Transition
  nameWithType: StateView.Transition
- uid: Automata.Core.StateView.Transitions
  name: Transitions
  href: Automata.Core.StateView.html#Automata_Core_StateView_Transitions
  commentId: F:Automata.Core.StateView.Transitions
  fullName: Automata.Core.StateView.Transitions
  nameWithType: StateView.Transitions
- uid: Automata.Core.StateView.TryTransition(System.Int32,System.Int32@)
  name: TryTransition(int, out int)
  href: Automata.Core.StateView.html#Automata_Core_StateView_TryTransition_System_Int32_System_Int32__
  commentId: M:Automata.Core.StateView.TryTransition(System.Int32,System.Int32@)
  name.vb: TryTransition(Integer, Integer)
  fullName: Automata.Core.StateView.TryTransition(int, out int)
  fullName.vb: Automata.Core.StateView.TryTransition(Integer, Integer)
  nameWithType: StateView.TryTransition(int, out int)
  nameWithType.vb: StateView.TryTransition(Integer, Integer)
- uid: Automata.Core.StateView.TryTransition*
  name: TryTransition
  href: Automata.Core.StateView.html#Automata_Core_StateView_TryTransition_
  commentId: Overload:Automata.Core.StateView.TryTransition
  isSpec: "True"
  fullName: Automata.Core.StateView.TryTransition
  nameWithType: StateView.TryTransition
- uid: Automata.Core.Transition
  name: Transition
  href: Automata.Core.Transition.html
  commentId: T:Automata.Core.Transition
  fullName: Automata.Core.Transition
  nameWithType: Transition
- uid: Automata.Core.Transition.#ctor(System.Int32,System.Int32,System.Int32)
  name: Transition(int, int, int)
  href: Automata.Core.Transition.html#Automata_Core_Transition__ctor_System_Int32_System_Int32_System_Int32_
  commentId: M:Automata.Core.Transition.#ctor(System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer)
  fullName: Automata.Core.Transition.Transition(int, int, int)
  fullName.vb: Automata.Core.Transition.New(Integer, Integer, Integer)
  nameWithType: Transition.Transition(int, int, int)
  nameWithType.vb: Transition.New(Integer, Integer, Integer)
- uid: Automata.Core.Transition.#ctor*
  name: Transition
  href: Automata.Core.Transition.html#Automata_Core_Transition__ctor_
  commentId: Overload:Automata.Core.Transition.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Transition.Transition
  fullName.vb: Automata.Core.Transition.New
  nameWithType: Transition.Transition
  nameWithType.vb: Transition.New
- uid: Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  name: CompareTo(Transition)
  href: Automata.Core.Transition.html#Automata_Core_Transition_CompareTo_Automata_Core_Transition_
  commentId: M:Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  fullName: Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  nameWithType: Transition.CompareTo(Transition)
- uid: Automata.Core.Transition.CompareTo*
  name: CompareTo
  href: Automata.Core.Transition.html#Automata_Core_Transition_CompareTo_
  commentId: Overload:Automata.Core.Transition.CompareTo
  isSpec: "True"
  fullName: Automata.Core.Transition.CompareTo
  nameWithType: Transition.CompareTo
- uid: Automata.Core.Transition.FromState
  name: FromState
  href: Automata.Core.Transition.html#Automata_Core_Transition_FromState
  commentId: P:Automata.Core.Transition.FromState
  fullName: Automata.Core.Transition.FromState
  nameWithType: Transition.FromState
- uid: Automata.Core.Transition.FromState*
  name: FromState
  href: Automata.Core.Transition.html#Automata_Core_Transition_FromState_
  commentId: Overload:Automata.Core.Transition.FromState
  isSpec: "True"
  fullName: Automata.Core.Transition.FromState
  nameWithType: Transition.FromState
- uid: Automata.Core.Transition.Invalid
  name: Invalid
  href: Automata.Core.Transition.html#Automata_Core_Transition_Invalid
  commentId: P:Automata.Core.Transition.Invalid
  fullName: Automata.Core.Transition.Invalid
  nameWithType: Transition.Invalid
- uid: Automata.Core.Transition.Invalid*
  name: Invalid
  href: Automata.Core.Transition.html#Automata_Core_Transition_Invalid_
  commentId: Overload:Automata.Core.Transition.Invalid
  isSpec: "True"
  fullName: Automata.Core.Transition.Invalid
  nameWithType: Transition.Invalid
- uid: Automata.Core.Transition.IsInvalid
  name: IsInvalid
  href: Automata.Core.Transition.html#Automata_Core_Transition_IsInvalid
  commentId: P:Automata.Core.Transition.IsInvalid
  fullName: Automata.Core.Transition.IsInvalid
  nameWithType: Transition.IsInvalid
- uid: Automata.Core.Transition.IsInvalid*
  name: IsInvalid
  href: Automata.Core.Transition.html#Automata_Core_Transition_IsInvalid_
  commentId: Overload:Automata.Core.Transition.IsInvalid
  isSpec: "True"
  fullName: Automata.Core.Transition.IsInvalid
  nameWithType: Transition.IsInvalid
- uid: Automata.Core.Transition.Reverse
  name: Reverse()
  href: Automata.Core.Transition.html#Automata_Core_Transition_Reverse
  commentId: M:Automata.Core.Transition.Reverse
  fullName: Automata.Core.Transition.Reverse()
  nameWithType: Transition.Reverse()
- uid: Automata.Core.Transition.Reverse*
  name: Reverse
  href: Automata.Core.Transition.html#Automata_Core_Transition_Reverse_
  commentId: Overload:Automata.Core.Transition.Reverse
  isSpec: "True"
  fullName: Automata.Core.Transition.Reverse
  nameWithType: Transition.Reverse
- uid: Automata.Core.Transition.Symbol
  name: Symbol
  href: Automata.Core.Transition.html#Automata_Core_Transition_Symbol
  commentId: P:Automata.Core.Transition.Symbol
  fullName: Automata.Core.Transition.Symbol
  nameWithType: Transition.Symbol
- uid: Automata.Core.Transition.Symbol*
  name: Symbol
  href: Automata.Core.Transition.html#Automata_Core_Transition_Symbol_
  commentId: Overload:Automata.Core.Transition.Symbol
  isSpec: "True"
  fullName: Automata.Core.Transition.Symbol
  nameWithType: Transition.Symbol
- uid: Automata.Core.Transition.ToState
  name: ToState
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToState
  commentId: P:Automata.Core.Transition.ToState
  fullName: Automata.Core.Transition.ToState
  nameWithType: Transition.ToState
- uid: Automata.Core.Transition.ToState*
  name: ToState
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToState_
  commentId: Overload:Automata.Core.Transition.ToState
  isSpec: "True"
  fullName: Automata.Core.Transition.ToState
  nameWithType: Transition.ToState
- uid: Automata.Core.Transition.ToString
  name: ToString()
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToString
  commentId: M:Automata.Core.Transition.ToString
  fullName: Automata.Core.Transition.ToString()
  nameWithType: Transition.ToString()
- uid: Automata.Core.Transition.ToString*
  name: ToString
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToString_
  commentId: Overload:Automata.Core.Transition.ToString
  isSpec: "True"
  fullName: Automata.Core.Transition.ToString
  nameWithType: Transition.ToString
- uid: Automata.Visualization
  name: Automata.Visualization
  href: Automata.Visualization.html
  commentId: N:Automata.Visualization
  fullName: Automata.Visualization
  nameWithType: Automata.Visualization
- uid: Automata.Visualization.GraphFactory
  name: GraphFactory
  href: Automata.Visualization.GraphFactory.html
  commentId: T:Automata.Visualization.GraphFactory
  fullName: Automata.Visualization.GraphFactory
  nameWithType: GraphFactory
- uid: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.Fsa,System.Boolean,Microsoft.Msagl.Drawing.LayerDirection,System.Boolean)
  name: CreateGraph(Fsa, bool, LayerDirection, bool)
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_Automata_Core_Fsa_System_Boolean_Microsoft_Msagl_Drawing_LayerDirection_System_Boolean_
  commentId: M:Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.Fsa,System.Boolean,Microsoft.Msagl.Drawing.LayerDirection,System.Boolean)
  name.vb: CreateGraph(Fsa, Boolean, LayerDirection, Boolean)
  fullName: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.Fsa, bool, Microsoft.Msagl.Drawing.LayerDirection, bool)
  fullName.vb: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.Fsa, Boolean, Microsoft.Msagl.Drawing.LayerDirection, Boolean)
  nameWithType: GraphFactory.CreateGraph(Fsa, bool, LayerDirection, bool)
  nameWithType.vb: GraphFactory.CreateGraph(Fsa, Boolean, LayerDirection, Boolean)
- uid: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)
  name: CreateGraph(IEnumerable<IEnumerable<string>>, bool)
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___System_Boolean_
  commentId: M:Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)
  name.vb: CreateGraph(IEnumerable(Of IEnumerable(Of String)), Boolean)
  fullName: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>, bool)
  fullName.vb: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)), Boolean)
  nameWithType: GraphFactory.CreateGraph(IEnumerable<IEnumerable<string>>, bool)
  nameWithType.vb: GraphFactory.CreateGraph(IEnumerable(Of IEnumerable(Of String)), Boolean)
- uid: Automata.Visualization.GraphFactory.CreateGraph*
  name: CreateGraph
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_
  commentId: Overload:Automata.Visualization.GraphFactory.CreateGraph
  isSpec: "True"
  fullName: Automata.Visualization.GraphFactory.CreateGraph
  nameWithType: GraphFactory.CreateGraph
- uid: Automata.Visualization.GraphView
  name: GraphView
  href: Automata.Visualization.GraphView.html
  commentId: T:Automata.Visualization.GraphView
  fullName: Automata.Visualization.GraphView
  nameWithType: GraphView
- uid: Automata.Visualization.GraphView.Dispose(System.Boolean)
  name: Dispose(bool)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Dispose_System_Boolean_
  commentId: M:Automata.Visualization.GraphView.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: Automata.Visualization.GraphView.Dispose(bool)
  fullName.vb: Automata.Visualization.GraphView.Dispose(Boolean)
  nameWithType: GraphView.Dispose(bool)
  nameWithType.vb: GraphView.Dispose(Boolean)
- uid: Automata.Visualization.GraphView.Dispose*
  name: Dispose
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Dispose_
  commentId: Overload:Automata.Visualization.GraphView.Dispose
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.Dispose
  nameWithType: GraphView.Dispose
- uid: Automata.Visualization.GraphView.Invoke(System.Action)
  name: Invoke(Action)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Invoke_System_Action_
  commentId: M:Automata.Visualization.GraphView.Invoke(System.Action)
  fullName: Automata.Visualization.GraphView.Invoke(System.Action)
  nameWithType: GraphView.Invoke(Action)
- uid: Automata.Visualization.GraphView.Invoke*
  name: Invoke
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Invoke_
  commentId: Overload:Automata.Visualization.GraphView.Invoke
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.Invoke
  nameWithType: GraphView.Invoke
- uid: Automata.Visualization.GraphView.OpenNew
  name: OpenNew()
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew
  commentId: M:Automata.Visualization.GraphView.OpenNew
  fullName: Automata.Visualization.GraphView.OpenNew()
  nameWithType: GraphView.OpenNew()
- uid: Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  name: OpenNew(Graph)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew_Microsoft_Msagl_Drawing_Graph_
  commentId: M:Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  fullName: Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  nameWithType: GraphView.OpenNew(Graph)
- uid: Automata.Visualization.GraphView.OpenNew*
  name: OpenNew
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew_
  commentId: Overload:Automata.Visualization.GraphView.OpenNew
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.OpenNew
  nameWithType: GraphView.OpenNew
- uid: Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  name: SetGraph(Graph)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_SetGraph_Microsoft_Msagl_Drawing_Graph_
  commentId: M:Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  fullName: Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  nameWithType: GraphView.SetGraph(Graph)
- uid: Automata.Visualization.GraphView.SetGraph*
  name: SetGraph
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_SetGraph_
  commentId: Overload:Automata.Visualization.GraphView.SetGraph
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.SetGraph
  nameWithType: GraphView.SetGraph
