### YamlMime:XRefMap
sorted: true
references:
- uid: Automata.App
  name: Automata.App
  href: Automata.App.html
  commentId: N:Automata.App
  fullName: Automata.App
  nameWithType: Automata.App
- uid: Automata.App.Program
  name: Program
  href: Automata.App.Program.html
  commentId: T:Automata.App.Program
  fullName: Automata.App.Program
  nameWithType: Program
- uid: Automata.App.Program.Main
  name: Main()
  href: Automata.App.Program.html#Automata_App_Program_Main
  commentId: M:Automata.App.Program.Main
  fullName: Automata.App.Program.Main()
  nameWithType: Program.Main()
- uid: Automata.App.Program.Main*
  name: Main
  href: Automata.App.Program.html#Automata_App_Program_Main_
  commentId: Overload:Automata.App.Program.Main
  isSpec: "True"
  fullName: Automata.App.Program.Main
  nameWithType: Program.Main
- uid: Automata.Core
  name: Automata.Core
  href: Automata.Core.html
  commentId: N:Automata.Core
  fullName: Automata.Core
  nameWithType: Automata.Core
- uid: Automata.Core.Alphabet
  name: Alphabet
  href: Automata.Core.Alphabet.html
  commentId: T:Automata.Core.Alphabet
  fullName: Automata.Core.Alphabet
  nameWithType: Alphabet
- uid: Automata.Core.Alphabet.#ctor
  name: Alphabet()
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet__ctor
  commentId: M:Automata.Core.Alphabet.#ctor
  name.vb: New()
  fullName: Automata.Core.Alphabet.Alphabet()
  fullName.vb: Automata.Core.Alphabet.New()
  nameWithType: Alphabet.Alphabet()
  nameWithType.vb: Alphabet.New()
- uid: Automata.Core.Alphabet.#ctor*
  name: Alphabet
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet__ctor_
  commentId: Overload:Automata.Core.Alphabet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Alphabet.Alphabet
  fullName.vb: Automata.Core.Alphabet.New
  nameWithType: Alphabet.Alphabet
  nameWithType.vb: Alphabet.New
- uid: Automata.Core.Alphabet.Count
  name: Count
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Count
  commentId: P:Automata.Core.Alphabet.Count
  fullName: Automata.Core.Alphabet.Count
  nameWithType: Alphabet.Count
- uid: Automata.Core.Alphabet.Count*
  name: Count
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Count_
  commentId: Overload:Automata.Core.Alphabet.Count
  isSpec: "True"
  fullName: Automata.Core.Alphabet.Count
  nameWithType: Alphabet.Count
- uid: Automata.Core.Alphabet.GetOrAdd(System.String)
  name: GetOrAdd(string)
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_GetOrAdd_System_String_
  commentId: M:Automata.Core.Alphabet.GetOrAdd(System.String)
  name.vb: GetOrAdd(String)
  fullName: Automata.Core.Alphabet.GetOrAdd(string)
  fullName.vb: Automata.Core.Alphabet.GetOrAdd(String)
  nameWithType: Alphabet.GetOrAdd(string)
  nameWithType.vb: Alphabet.GetOrAdd(String)
- uid: Automata.Core.Alphabet.GetOrAdd*
  name: GetOrAdd
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_GetOrAdd_
  commentId: Overload:Automata.Core.Alphabet.GetOrAdd
  isSpec: "True"
  fullName: Automata.Core.Alphabet.GetOrAdd
  nameWithType: Alphabet.GetOrAdd
- uid: Automata.Core.Alphabet.Item(System.Int32)
  name: this[int]
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Item_System_Int32_
  commentId: P:Automata.Core.Alphabet.Item(System.Int32)
  name.vb: this[](Integer)
  fullName: Automata.Core.Alphabet.this[int]
  fullName.vb: Automata.Core.Alphabet.this[](Integer)
  nameWithType: Alphabet.this[int]
  nameWithType.vb: Alphabet.this[](Integer)
- uid: Automata.Core.Alphabet.Item(System.String)
  name: this[string]
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Item_System_String_
  commentId: P:Automata.Core.Alphabet.Item(System.String)
  name.vb: this[](String)
  fullName: Automata.Core.Alphabet.this[string]
  fullName.vb: Automata.Core.Alphabet.this[](String)
  nameWithType: Alphabet.this[string]
  nameWithType.vb: Alphabet.this[](String)
- uid: Automata.Core.Alphabet.Item*
  name: this
  href: Automata.Core.Alphabet.html#Automata_Core_Alphabet_Item_
  commentId: Overload:Automata.Core.Alphabet.Item
  isSpec: "True"
  name.vb: this[]
  fullName: Automata.Core.Alphabet.this
  fullName.vb: Automata.Core.Alphabet.this[]
  nameWithType: Alphabet.this
  nameWithType.vb: Alphabet.this[]
- uid: Automata.Core.Constants
  name: Constants
  href: Automata.Core.Constants.html
  commentId: T:Automata.Core.Constants
  fullName: Automata.Core.Constants
  nameWithType: Constants
- uid: Automata.Core.Constants.InvalidState
  name: InvalidState
  href: Automata.Core.Constants.html#Automata_Core_Constants_InvalidState
  commentId: F:Automata.Core.Constants.InvalidState
  fullName: Automata.Core.Constants.InvalidState
  nameWithType: Constants.InvalidState
- uid: Automata.Core.Constants.InvalidSymbolIndex
  name: InvalidSymbolIndex
  href: Automata.Core.Constants.html#Automata_Core_Constants_InvalidSymbolIndex
  commentId: F:Automata.Core.Constants.InvalidSymbolIndex
  fullName: Automata.Core.Constants.InvalidSymbolIndex
  nameWithType: Constants.InvalidSymbolIndex
- uid: Automata.Core.DFA
  name: DFA
  href: Automata.Core.DFA.html
  commentId: T:Automata.Core.DFA
  fullName: Automata.Core.DFA
  nameWithType: DFA
- uid: Automata.Core.DFA.#ctor
  name: DFA()
  href: Automata.Core.DFA.html#Automata_Core_DFA__ctor
  commentId: M:Automata.Core.DFA.#ctor
  name.vb: New()
  fullName: Automata.Core.DFA.DFA()
  fullName.vb: Automata.Core.DFA.New()
  nameWithType: DFA.DFA()
  nameWithType.vb: DFA.New()
- uid: Automata.Core.DFA.#ctor(Automata.Core.Alphabet)
  name: DFA(Alphabet)
  href: Automata.Core.DFA.html#Automata_Core_DFA__ctor_Automata_Core_Alphabet_
  commentId: M:Automata.Core.DFA.#ctor(Automata.Core.Alphabet)
  name.vb: New(Alphabet)
  fullName: Automata.Core.DFA.DFA(Automata.Core.Alphabet)
  fullName.vb: Automata.Core.DFA.New(Automata.Core.Alphabet)
  nameWithType: DFA.DFA(Alphabet)
  nameWithType.vb: DFA.New(Alphabet)
- uid: Automata.Core.DFA.#ctor(Automata.Core.Alphabet,System.Collections.Generic.IEnumerable{Automata.Core.SymbolicTransition},System.Int32,System.Collections.Generic.IEnumerable{System.Int32})
  name: DFA(Alphabet, IEnumerable<SymbolicTransition>, int, IEnumerable<int>)
  href: Automata.Core.DFA.html#Automata_Core_DFA__ctor_Automata_Core_Alphabet_System_Collections_Generic_IEnumerable_Automata_Core_SymbolicTransition__System_Int32_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.DFA.#ctor(Automata.Core.Alphabet,System.Collections.Generic.IEnumerable{Automata.Core.SymbolicTransition},System.Int32,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: New(Alphabet, IEnumerable(Of SymbolicTransition), Integer, IEnumerable(Of Integer))
  fullName: Automata.Core.DFA.DFA(Automata.Core.Alphabet, System.Collections.Generic.IEnumerable<Automata.Core.SymbolicTransition>, int, System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.DFA.New(Automata.Core.Alphabet, System.Collections.Generic.IEnumerable(Of Automata.Core.SymbolicTransition), Integer, System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: DFA.DFA(Alphabet, IEnumerable<SymbolicTransition>, int, IEnumerable<int>)
  nameWithType.vb: DFA.New(Alphabet, IEnumerable(Of SymbolicTransition), Integer, IEnumerable(Of Integer))
- uid: Automata.Core.DFA.#ctor*
  name: DFA
  href: Automata.Core.DFA.html#Automata_Core_DFA__ctor_
  commentId: Overload:Automata.Core.DFA.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.DFA.DFA
  fullName.vb: Automata.Core.DFA.New
  nameWithType: DFA.DFA
  nameWithType.vb: DFA.New
- uid: Automata.Core.DFA.AddTransition(Automata.Core.SymbolicTransition)
  name: AddTransition(SymbolicTransition)
  href: Automata.Core.DFA.html#Automata_Core_DFA_AddTransition_Automata_Core_SymbolicTransition_
  commentId: M:Automata.Core.DFA.AddTransition(Automata.Core.SymbolicTransition)
  fullName: Automata.Core.DFA.AddTransition(Automata.Core.SymbolicTransition)
  nameWithType: DFA.AddTransition(SymbolicTransition)
- uid: Automata.Core.DFA.AddTransition*
  name: AddTransition
  href: Automata.Core.DFA.html#Automata_Core_DFA_AddTransition_
  commentId: Overload:Automata.Core.DFA.AddTransition
  isSpec: "True"
  fullName: Automata.Core.DFA.AddTransition
  nameWithType: DFA.AddTransition
- uid: Automata.Core.DFA.Alphabet
  name: Alphabet
  href: Automata.Core.DFA.html#Automata_Core_DFA_Alphabet
  commentId: P:Automata.Core.DFA.Alphabet
  fullName: Automata.Core.DFA.Alphabet
  nameWithType: DFA.Alphabet
- uid: Automata.Core.DFA.Alphabet*
  name: Alphabet
  href: Automata.Core.DFA.html#Automata_Core_DFA_Alphabet_
  commentId: Overload:Automata.Core.DFA.Alphabet
  isSpec: "True"
  fullName: Automata.Core.DFA.Alphabet
  nameWithType: DFA.Alphabet
- uid: Automata.Core.DFA.EpsilonFree
  name: EpsilonFree
  href: Automata.Core.DFA.html#Automata_Core_DFA_EpsilonFree
  commentId: P:Automata.Core.DFA.EpsilonFree
  fullName: Automata.Core.DFA.EpsilonFree
  nameWithType: DFA.EpsilonFree
- uid: Automata.Core.DFA.EpsilonFree*
  name: EpsilonFree
  href: Automata.Core.DFA.html#Automata_Core_DFA_EpsilonFree_
  commentId: Overload:Automata.Core.DFA.EpsilonFree
  isSpec: "True"
  fullName: Automata.Core.DFA.EpsilonFree
  nameWithType: DFA.EpsilonFree
- uid: Automata.Core.DFA.EpsilonTransitions
  name: EpsilonTransitions
  href: Automata.Core.DFA.html#Automata_Core_DFA_EpsilonTransitions
  commentId: P:Automata.Core.DFA.EpsilonTransitions
  fullName: Automata.Core.DFA.EpsilonTransitions
  nameWithType: DFA.EpsilonTransitions
- uid: Automata.Core.DFA.EpsilonTransitions*
  name: EpsilonTransitions
  href: Automata.Core.DFA.html#Automata_Core_DFA_EpsilonTransitions_
  commentId: Overload:Automata.Core.DFA.EpsilonTransitions
  isSpec: "True"
  fullName: Automata.Core.DFA.EpsilonTransitions
  nameWithType: DFA.EpsilonTransitions
- uid: Automata.Core.DFA.FinalStates
  name: FinalStates
  href: Automata.Core.DFA.html#Automata_Core_DFA_FinalStates
  commentId: P:Automata.Core.DFA.FinalStates
  fullName: Automata.Core.DFA.FinalStates
  nameWithType: DFA.FinalStates
- uid: Automata.Core.DFA.FinalStates*
  name: FinalStates
  href: Automata.Core.DFA.html#Automata_Core_DFA_FinalStates_
  commentId: Overload:Automata.Core.DFA.FinalStates
  isSpec: "True"
  fullName: Automata.Core.DFA.FinalStates
  nameWithType: DFA.FinalStates
- uid: Automata.Core.DFA.InitialState
  name: InitialState
  href: Automata.Core.DFA.html#Automata_Core_DFA_InitialState
  commentId: P:Automata.Core.DFA.InitialState
  fullName: Automata.Core.DFA.InitialState
  nameWithType: DFA.InitialState
- uid: Automata.Core.DFA.InitialState*
  name: InitialState
  href: Automata.Core.DFA.html#Automata_Core_DFA_InitialState_
  commentId: Overload:Automata.Core.DFA.InitialState
  isSpec: "True"
  fullName: Automata.Core.DFA.InitialState
  nameWithType: DFA.InitialState
- uid: Automata.Core.DFA.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.DFA.html#Automata_Core_DFA_IsFinal_System_Int32_
  commentId: M:Automata.Core.DFA.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.DFA.IsFinal(int)
  fullName.vb: Automata.Core.DFA.IsFinal(Integer)
  nameWithType: DFA.IsFinal(int)
  nameWithType.vb: DFA.IsFinal(Integer)
- uid: Automata.Core.DFA.IsFinal*
  name: IsFinal
  href: Automata.Core.DFA.html#Automata_Core_DFA_IsFinal_
  commentId: Overload:Automata.Core.DFA.IsFinal
  isSpec: "True"
  fullName: Automata.Core.DFA.IsFinal
  nameWithType: DFA.IsFinal
- uid: Automata.Core.DFA.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.DFA.html#Automata_Core_DFA_IsInitial_System_Int32_
  commentId: M:Automata.Core.DFA.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.DFA.IsInitial(int)
  fullName.vb: Automata.Core.DFA.IsInitial(Integer)
  nameWithType: DFA.IsInitial(int)
  nameWithType.vb: DFA.IsInitial(Integer)
- uid: Automata.Core.DFA.IsInitial*
  name: IsInitial
  href: Automata.Core.DFA.html#Automata_Core_DFA_IsInitial_
  commentId: Overload:Automata.Core.DFA.IsInitial
  isSpec: "True"
  fullName: Automata.Core.DFA.IsInitial
  nameWithType: DFA.IsInitial
- uid: Automata.Core.DFA.Merge(System.Int32,System.Int32)
  name: Merge(int, int)
  href: Automata.Core.DFA.html#Automata_Core_DFA_Merge_System_Int32_System_Int32_
  commentId: M:Automata.Core.DFA.Merge(System.Int32,System.Int32)
  name.vb: Merge(Integer, Integer)
  fullName: Automata.Core.DFA.Merge(int, int)
  fullName.vb: Automata.Core.DFA.Merge(Integer, Integer)
  nameWithType: DFA.Merge(int, int)
  nameWithType.vb: DFA.Merge(Integer, Integer)
- uid: Automata.Core.DFA.Merge*
  name: Merge
  href: Automata.Core.DFA.html#Automata_Core_DFA_Merge_
  commentId: Overload:Automata.Core.DFA.Merge
  isSpec: "True"
  fullName: Automata.Core.DFA.Merge
  nameWithType: DFA.Merge
- uid: Automata.Core.DFA.Minimized
  name: Minimized()
  href: Automata.Core.DFA.html#Automata_Core_DFA_Minimized
  commentId: M:Automata.Core.DFA.Minimized
  fullName: Automata.Core.DFA.Minimized()
  nameWithType: DFA.Minimized()
- uid: Automata.Core.DFA.Minimized*
  name: Minimized
  href: Automata.Core.DFA.html#Automata_Core_DFA_Minimized_
  commentId: Overload:Automata.Core.DFA.Minimized
  isSpec: "True"
  fullName: Automata.Core.DFA.Minimized
  nameWithType: DFA.Minimized
- uid: Automata.Core.DFA.Reversed
  name: Reversed()
  href: Automata.Core.DFA.html#Automata_Core_DFA_Reversed
  commentId: M:Automata.Core.DFA.Reversed
  fullName: Automata.Core.DFA.Reversed()
  nameWithType: DFA.Reversed()
- uid: Automata.Core.DFA.Reversed*
  name: Reversed
  href: Automata.Core.DFA.html#Automata_Core_DFA_Reversed_
  commentId: Overload:Automata.Core.DFA.Reversed
  isSpec: "True"
  fullName: Automata.Core.DFA.Reversed
  nameWithType: DFA.Reversed
- uid: Automata.Core.DFA.Split(System.Int64)
  name: Split(long)
  href: Automata.Core.DFA.html#Automata_Core_DFA_Split_System_Int64_
  commentId: M:Automata.Core.DFA.Split(System.Int64)
  name.vb: Split(Long)
  fullName: Automata.Core.DFA.Split(long)
  fullName.vb: Automata.Core.DFA.Split(Long)
  nameWithType: DFA.Split(long)
  nameWithType.vb: DFA.Split(Long)
- uid: Automata.Core.DFA.Split*
  name: Split
  href: Automata.Core.DFA.html#Automata_Core_DFA_Split_
  commentId: Overload:Automata.Core.DFA.Split
  isSpec: "True"
  fullName: Automata.Core.DFA.Split
  nameWithType: DFA.Split
- uid: Automata.Core.DFA.ToNFA
  name: ToNFA()
  href: Automata.Core.DFA.html#Automata_Core_DFA_ToNFA
  commentId: M:Automata.Core.DFA.ToNFA
  fullName: Automata.Core.DFA.ToNFA()
  nameWithType: DFA.ToNFA()
- uid: Automata.Core.DFA.ToNFA*
  name: ToNFA
  href: Automata.Core.DFA.html#Automata_Core_DFA_ToNFA_
  commentId: Overload:Automata.Core.DFA.ToNFA
  isSpec: "True"
  fullName: Automata.Core.DFA.ToNFA
  nameWithType: DFA.ToNFA
- uid: Automata.Core.DFA.Transitions
  name: Transitions
  href: Automata.Core.DFA.html#Automata_Core_DFA_Transitions
  commentId: P:Automata.Core.DFA.Transitions
  fullName: Automata.Core.DFA.Transitions
  nameWithType: DFA.Transitions
- uid: Automata.Core.DFA.Transitions*
  name: Transitions
  href: Automata.Core.DFA.html#Automata_Core_DFA_Transitions_
  commentId: Overload:Automata.Core.DFA.Transitions
  isSpec: "True"
  fullName: Automata.Core.DFA.Transitions
  nameWithType: DFA.Transitions
- uid: Automata.Core.EpsilonTransition
  name: EpsilonTransition
  href: Automata.Core.EpsilonTransition.html
  commentId: T:Automata.Core.EpsilonTransition
  fullName: Automata.Core.EpsilonTransition
  nameWithType: EpsilonTransition
- uid: Automata.Core.EpsilonTransition.#ctor(System.Int32,System.Int32)
  name: EpsilonTransition(int, int)
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition__ctor_System_Int32_System_Int32_
  commentId: M:Automata.Core.EpsilonTransition.#ctor(System.Int32,System.Int32)
  name.vb: New(Integer, Integer)
  fullName: Automata.Core.EpsilonTransition.EpsilonTransition(int, int)
  fullName.vb: Automata.Core.EpsilonTransition.New(Integer, Integer)
  nameWithType: EpsilonTransition.EpsilonTransition(int, int)
  nameWithType.vb: EpsilonTransition.New(Integer, Integer)
- uid: Automata.Core.EpsilonTransition.#ctor*
  name: EpsilonTransition
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition__ctor_
  commentId: Overload:Automata.Core.EpsilonTransition.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.EpsilonTransition.EpsilonTransition
  fullName.vb: Automata.Core.EpsilonTransition.New
  nameWithType: EpsilonTransition.EpsilonTransition
  nameWithType.vb: EpsilonTransition.New
- uid: Automata.Core.EpsilonTransition.CompareByToState
  name: CompareByToState()
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_CompareByToState
  commentId: M:Automata.Core.EpsilonTransition.CompareByToState
  fullName: Automata.Core.EpsilonTransition.CompareByToState()
  nameWithType: EpsilonTransition.CompareByToState()
- uid: Automata.Core.EpsilonTransition.CompareByToState*
  name: CompareByToState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_CompareByToState_
  commentId: Overload:Automata.Core.EpsilonTransition.CompareByToState
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.CompareByToState
  nameWithType: EpsilonTransition.CompareByToState
- uid: Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  name: CompareTo(EpsilonTransition)
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_CompareTo_Automata_Core_EpsilonTransition_
  commentId: M:Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  fullName: Automata.Core.EpsilonTransition.CompareTo(Automata.Core.EpsilonTransition)
  nameWithType: EpsilonTransition.CompareTo(EpsilonTransition)
- uid: Automata.Core.EpsilonTransition.CompareTo*
  name: CompareTo
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_CompareTo_
  commentId: Overload:Automata.Core.EpsilonTransition.CompareTo
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.CompareTo
  nameWithType: EpsilonTransition.CompareTo
- uid: Automata.Core.EpsilonTransition.Epsilon
  name: Epsilon
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Epsilon
  commentId: F:Automata.Core.EpsilonTransition.Epsilon
  fullName: Automata.Core.EpsilonTransition.Epsilon
  nameWithType: EpsilonTransition.Epsilon
- uid: Automata.Core.EpsilonTransition.FromState
  name: FromState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_FromState
  commentId: P:Automata.Core.EpsilonTransition.FromState
  fullName: Automata.Core.EpsilonTransition.FromState
  nameWithType: EpsilonTransition.FromState
- uid: Automata.Core.EpsilonTransition.FromState*
  name: FromState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_FromState_
  commentId: Overload:Automata.Core.EpsilonTransition.FromState
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.FromState
  nameWithType: EpsilonTransition.FromState
- uid: Automata.Core.EpsilonTransition.Reverse
  name: Reverse()
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Reverse
  commentId: M:Automata.Core.EpsilonTransition.Reverse
  fullName: Automata.Core.EpsilonTransition.Reverse()
  nameWithType: EpsilonTransition.Reverse()
- uid: Automata.Core.EpsilonTransition.Reverse*
  name: Reverse
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_Reverse_
  commentId: Overload:Automata.Core.EpsilonTransition.Reverse
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.Reverse
  nameWithType: EpsilonTransition.Reverse
- uid: Automata.Core.EpsilonTransition.ToState
  name: ToState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_ToState
  commentId: P:Automata.Core.EpsilonTransition.ToState
  fullName: Automata.Core.EpsilonTransition.ToState
  nameWithType: EpsilonTransition.ToState
- uid: Automata.Core.EpsilonTransition.ToState*
  name: ToState
  href: Automata.Core.EpsilonTransition.html#Automata_Core_EpsilonTransition_ToState_
  commentId: Overload:Automata.Core.EpsilonTransition.ToState
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransition.ToState
  nameWithType: EpsilonTransition.ToState
- uid: Automata.Core.EpsilonTransitionSet
  name: EpsilonTransitionSet
  href: Automata.Core.EpsilonTransitionSet.html
  commentId: T:Automata.Core.EpsilonTransitionSet
  fullName: Automata.Core.EpsilonTransitionSet
  nameWithType: EpsilonTransitionSet
- uid: Automata.Core.EpsilonTransitionSet.#ctor
  name: EpsilonTransitionSet()
  href: Automata.Core.EpsilonTransitionSet.html#Automata_Core_EpsilonTransitionSet__ctor
  commentId: M:Automata.Core.EpsilonTransitionSet.#ctor
  name.vb: New()
  fullName: Automata.Core.EpsilonTransitionSet.EpsilonTransitionSet()
  fullName.vb: Automata.Core.EpsilonTransitionSet.New()
  nameWithType: EpsilonTransitionSet.EpsilonTransitionSet()
  nameWithType.vb: EpsilonTransitionSet.New()
- uid: Automata.Core.EpsilonTransitionSet.#ctor(System.Collections.Generic.IEnumerable{Automata.Core.EpsilonTransition})
  name: EpsilonTransitionSet(IEnumerable<EpsilonTransition>)
  href: Automata.Core.EpsilonTransitionSet.html#Automata_Core_EpsilonTransitionSet__ctor_System_Collections_Generic_IEnumerable_Automata_Core_EpsilonTransition__
  commentId: M:Automata.Core.EpsilonTransitionSet.#ctor(System.Collections.Generic.IEnumerable{Automata.Core.EpsilonTransition})
  name.vb: New(IEnumerable(Of EpsilonTransition))
  fullName: Automata.Core.EpsilonTransitionSet.EpsilonTransitionSet(System.Collections.Generic.IEnumerable<Automata.Core.EpsilonTransition>)
  fullName.vb: Automata.Core.EpsilonTransitionSet.New(System.Collections.Generic.IEnumerable(Of Automata.Core.EpsilonTransition))
  nameWithType: EpsilonTransitionSet.EpsilonTransitionSet(IEnumerable<EpsilonTransition>)
  nameWithType.vb: EpsilonTransitionSet.New(IEnumerable(Of EpsilonTransition))
- uid: Automata.Core.EpsilonTransitionSet.#ctor*
  name: EpsilonTransitionSet
  href: Automata.Core.EpsilonTransitionSet.html#Automata_Core_EpsilonTransitionSet__ctor_
  commentId: Overload:Automata.Core.EpsilonTransitionSet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.EpsilonTransitionSet.EpsilonTransitionSet
  fullName.vb: Automata.Core.EpsilonTransitionSet.New
  nameWithType: EpsilonTransitionSet.EpsilonTransitionSet
  nameWithType.vb: EpsilonTransitionSet.New
- uid: Automata.Core.EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet{System.Int32})
  name: ReachableStatesOnEpsilonInPlace(HashSet<int>)
  href: Automata.Core.EpsilonTransitionSet.html#Automata_Core_EpsilonTransitionSet_ReachableStatesOnEpsilonInPlace_System_Collections_Generic_HashSet_System_Int32__
  commentId: M:Automata.Core.EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet{System.Int32})
  name.vb: ReachableStatesOnEpsilonInPlace(HashSet(Of Integer))
  fullName: Automata.Core.EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet<int>)
  fullName.vb: Automata.Core.EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace(System.Collections.Generic.HashSet(Of Integer))
  nameWithType: EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace(HashSet<int>)
  nameWithType.vb: EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace(HashSet(Of Integer))
- uid: Automata.Core.EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace*
  name: ReachableStatesOnEpsilonInPlace
  href: Automata.Core.EpsilonTransitionSet.html#Automata_Core_EpsilonTransitionSet_ReachableStatesOnEpsilonInPlace_
  commentId: Overload:Automata.Core.EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace
  nameWithType: EpsilonTransitionSet.ReachableStatesOnEpsilonInPlace
- uid: Automata.Core.EpsilonTransitionSet.ReachableStatesOnSingleEpsilon(System.Int32)
  name: ReachableStatesOnSingleEpsilon(int)
  href: Automata.Core.EpsilonTransitionSet.html#Automata_Core_EpsilonTransitionSet_ReachableStatesOnSingleEpsilon_System_Int32_
  commentId: M:Automata.Core.EpsilonTransitionSet.ReachableStatesOnSingleEpsilon(System.Int32)
  name.vb: ReachableStatesOnSingleEpsilon(Integer)
  fullName: Automata.Core.EpsilonTransitionSet.ReachableStatesOnSingleEpsilon(int)
  fullName.vb: Automata.Core.EpsilonTransitionSet.ReachableStatesOnSingleEpsilon(Integer)
  nameWithType: EpsilonTransitionSet.ReachableStatesOnSingleEpsilon(int)
  nameWithType.vb: EpsilonTransitionSet.ReachableStatesOnSingleEpsilon(Integer)
- uid: Automata.Core.EpsilonTransitionSet.ReachableStatesOnSingleEpsilon*
  name: ReachableStatesOnSingleEpsilon
  href: Automata.Core.EpsilonTransitionSet.html#Automata_Core_EpsilonTransitionSet_ReachableStatesOnSingleEpsilon_
  commentId: Overload:Automata.Core.EpsilonTransitionSet.ReachableStatesOnSingleEpsilon
  isSpec: "True"
  fullName: Automata.Core.EpsilonTransitionSet.ReachableStatesOnSingleEpsilon
  nameWithType: EpsilonTransitionSet.ReachableStatesOnSingleEpsilon
- uid: Automata.Core.IFsa
  name: IFsa
  href: Automata.Core.IFsa.html
  commentId: T:Automata.Core.IFsa
  fullName: Automata.Core.IFsa
  nameWithType: IFsa
- uid: Automata.Core.IFsa.Alphabet
  name: Alphabet
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_Alphabet
  commentId: P:Automata.Core.IFsa.Alphabet
  fullName: Automata.Core.IFsa.Alphabet
  nameWithType: IFsa.Alphabet
- uid: Automata.Core.IFsa.Alphabet*
  name: Alphabet
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_Alphabet_
  commentId: Overload:Automata.Core.IFsa.Alphabet
  isSpec: "True"
  fullName: Automata.Core.IFsa.Alphabet
  nameWithType: IFsa.Alphabet
- uid: Automata.Core.IFsa.EpsilonFree
  name: EpsilonFree
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_EpsilonFree
  commentId: P:Automata.Core.IFsa.EpsilonFree
  fullName: Automata.Core.IFsa.EpsilonFree
  nameWithType: IFsa.EpsilonFree
- uid: Automata.Core.IFsa.EpsilonFree*
  name: EpsilonFree
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_EpsilonFree_
  commentId: Overload:Automata.Core.IFsa.EpsilonFree
  isSpec: "True"
  fullName: Automata.Core.IFsa.EpsilonFree
  nameWithType: IFsa.EpsilonFree
- uid: Automata.Core.IFsa.EpsilonTransitions
  name: EpsilonTransitions
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_EpsilonTransitions
  commentId: P:Automata.Core.IFsa.EpsilonTransitions
  fullName: Automata.Core.IFsa.EpsilonTransitions
  nameWithType: IFsa.EpsilonTransitions
- uid: Automata.Core.IFsa.EpsilonTransitions*
  name: EpsilonTransitions
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_EpsilonTransitions_
  commentId: Overload:Automata.Core.IFsa.EpsilonTransitions
  isSpec: "True"
  fullName: Automata.Core.IFsa.EpsilonTransitions
  nameWithType: IFsa.EpsilonTransitions
- uid: Automata.Core.IFsa.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsFinal_System_Int32_
  commentId: M:Automata.Core.IFsa.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.IFsa.IsFinal(int)
  fullName.vb: Automata.Core.IFsa.IsFinal(Integer)
  nameWithType: IFsa.IsFinal(int)
  nameWithType.vb: IFsa.IsFinal(Integer)
- uid: Automata.Core.IFsa.IsFinal*
  name: IsFinal
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsFinal_
  commentId: Overload:Automata.Core.IFsa.IsFinal
  isSpec: "True"
  fullName: Automata.Core.IFsa.IsFinal
  nameWithType: IFsa.IsFinal
- uid: Automata.Core.IFsa.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsInitial_System_Int32_
  commentId: M:Automata.Core.IFsa.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.IFsa.IsInitial(int)
  fullName.vb: Automata.Core.IFsa.IsInitial(Integer)
  nameWithType: IFsa.IsInitial(int)
  nameWithType.vb: IFsa.IsInitial(Integer)
- uid: Automata.Core.IFsa.IsInitial*
  name: IsInitial
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_IsInitial_
  commentId: Overload:Automata.Core.IFsa.IsInitial
  isSpec: "True"
  fullName: Automata.Core.IFsa.IsInitial
  nameWithType: IFsa.IsInitial
- uid: Automata.Core.IFsa.Transitions
  name: Transitions
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_Transitions
  commentId: P:Automata.Core.IFsa.Transitions
  fullName: Automata.Core.IFsa.Transitions
  nameWithType: IFsa.Transitions
- uid: Automata.Core.IFsa.Transitions*
  name: Transitions
  href: Automata.Core.IFsa.html#Automata_Core_IFsa_Transitions_
  commentId: Overload:Automata.Core.IFsa.Transitions
  isSpec: "True"
  fullName: Automata.Core.IFsa.Transitions
  nameWithType: IFsa.Transitions
- uid: Automata.Core.ITransition`1
  name: ITransition<T>
  href: Automata.Core.ITransition-1.html
  commentId: T:Automata.Core.ITransition`1
  name.vb: ITransition(Of T)
  fullName: Automata.Core.ITransition<T>
  fullName.vb: Automata.Core.ITransition(Of T)
  nameWithType: ITransition<T>
  nameWithType.vb: ITransition(Of T)
- uid: Automata.Core.ITransition`1.CompareByToState
  name: CompareByToState()
  href: Automata.Core.ITransition-1.html#Automata_Core_ITransition_1_CompareByToState
  commentId: M:Automata.Core.ITransition`1.CompareByToState
  fullName: Automata.Core.ITransition<T>.CompareByToState()
  fullName.vb: Automata.Core.ITransition(Of T).CompareByToState()
  nameWithType: ITransition<T>.CompareByToState()
  nameWithType.vb: ITransition(Of T).CompareByToState()
- uid: Automata.Core.ITransition`1.CompareByToState*
  name: CompareByToState
  href: Automata.Core.ITransition-1.html#Automata_Core_ITransition_1_CompareByToState_
  commentId: Overload:Automata.Core.ITransition`1.CompareByToState
  isSpec: "True"
  fullName: Automata.Core.ITransition<T>.CompareByToState
  fullName.vb: Automata.Core.ITransition(Of T).CompareByToState
  nameWithType: ITransition<T>.CompareByToState
  nameWithType.vb: ITransition(Of T).CompareByToState
- uid: Automata.Core.ITransition`1.FromState
  name: FromState
  href: Automata.Core.ITransition-1.html#Automata_Core_ITransition_1_FromState
  commentId: P:Automata.Core.ITransition`1.FromState
  fullName: Automata.Core.ITransition<T>.FromState
  fullName.vb: Automata.Core.ITransition(Of T).FromState
  nameWithType: ITransition<T>.FromState
  nameWithType.vb: ITransition(Of T).FromState
- uid: Automata.Core.ITransition`1.FromState*
  name: FromState
  href: Automata.Core.ITransition-1.html#Automata_Core_ITransition_1_FromState_
  commentId: Overload:Automata.Core.ITransition`1.FromState
  isSpec: "True"
  fullName: Automata.Core.ITransition<T>.FromState
  fullName.vb: Automata.Core.ITransition(Of T).FromState
  nameWithType: ITransition<T>.FromState
  nameWithType.vb: ITransition(Of T).FromState
- uid: Automata.Core.ITransition`1.ToState
  name: ToState
  href: Automata.Core.ITransition-1.html#Automata_Core_ITransition_1_ToState
  commentId: P:Automata.Core.ITransition`1.ToState
  fullName: Automata.Core.ITransition<T>.ToState
  fullName.vb: Automata.Core.ITransition(Of T).ToState
  nameWithType: ITransition<T>.ToState
  nameWithType.vb: ITransition(Of T).ToState
- uid: Automata.Core.ITransition`1.ToState*
  name: ToState
  href: Automata.Core.ITransition-1.html#Automata_Core_ITransition_1_ToState_
  commentId: Overload:Automata.Core.ITransition`1.ToState
  isSpec: "True"
  fullName: Automata.Core.ITransition<T>.ToState
  fullName.vb: Automata.Core.ITransition(Of T).ToState
  nameWithType: ITransition<T>.ToState
  nameWithType.vb: ITransition(Of T).ToState
- uid: Automata.Core.IntSet
  name: IntSet
  href: Automata.Core.IntSet.html
  commentId: T:Automata.Core.IntSet
  fullName: Automata.Core.IntSet
  nameWithType: IntSet
- uid: Automata.Core.IntSet.#ctor(System.Collections.Generic.IEnumerable{System.Int32})
  name: IntSet(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.#ctor(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: New(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IntSet(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.New(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IntSet(IEnumerable<int>)
  nameWithType.vb: IntSet.New(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.#ctor(System.Collections.Generic.ISet{System.Int32})
  name: IntSet(ISet<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_System_Collections_Generic_ISet_System_Int32__
  commentId: M:Automata.Core.IntSet.#ctor(System.Collections.Generic.ISet{System.Int32})
  name.vb: New(ISet(Of Integer))
  fullName: Automata.Core.IntSet.IntSet(System.Collections.Generic.ISet<int>)
  fullName.vb: Automata.Core.IntSet.New(System.Collections.Generic.ISet(Of Integer))
  nameWithType: IntSet.IntSet(ISet<int>)
  nameWithType.vb: IntSet.New(ISet(Of Integer))
- uid: Automata.Core.IntSet.#ctor*
  name: IntSet
  href: Automata.Core.IntSet.html#Automata_Core_IntSet__ctor_
  commentId: Overload:Automata.Core.IntSet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.IntSet.IntSet
  fullName.vb: Automata.Core.IntSet.New
  nameWithType: IntSet.IntSet
  nameWithType.vb: IntSet.New
- uid: Automata.Core.IntSet.Contains(System.Int32)
  name: Contains(int)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Contains_System_Int32_
  commentId: M:Automata.Core.IntSet.Contains(System.Int32)
  name.vb: Contains(Integer)
  fullName: Automata.Core.IntSet.Contains(int)
  fullName.vb: Automata.Core.IntSet.Contains(Integer)
  nameWithType: IntSet.Contains(int)
  nameWithType.vb: IntSet.Contains(Integer)
- uid: Automata.Core.IntSet.Contains*
  name: Contains
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Contains_
  commentId: Overload:Automata.Core.IntSet.Contains
  isSpec: "True"
  fullName: Automata.Core.IntSet.Contains
  nameWithType: IntSet.Contains
- uid: Automata.Core.IntSet.Count
  name: Count
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Count
  commentId: P:Automata.Core.IntSet.Count
  fullName: Automata.Core.IntSet.Count
  nameWithType: IntSet.Count
- uid: Automata.Core.IntSet.Count*
  name: Count
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Count_
  commentId: Overload:Automata.Core.IntSet.Count
  isSpec: "True"
  fullName: Automata.Core.IntSet.Count
  nameWithType: IntSet.Count
- uid: Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  name: Equals(IntSet?)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_Automata_Core_IntSet_
  commentId: M:Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  name.vb: Equals(IntSet)
  fullName: Automata.Core.IntSet.Equals(Automata.Core.IntSet?)
  fullName.vb: Automata.Core.IntSet.Equals(Automata.Core.IntSet)
  nameWithType: IntSet.Equals(IntSet?)
  nameWithType.vb: IntSet.Equals(IntSet)
- uid: Automata.Core.IntSet.Equals(System.Object)
  name: Equals(object?)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_System_Object_
  commentId: M:Automata.Core.IntSet.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Automata.Core.IntSet.Equals(object?)
  fullName.vb: Automata.Core.IntSet.Equals(Object)
  nameWithType: IntSet.Equals(object?)
  nameWithType.vb: IntSet.Equals(Object)
- uid: Automata.Core.IntSet.Equals*
  name: Equals
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Equals_
  commentId: Overload:Automata.Core.IntSet.Equals
  isSpec: "True"
  fullName: Automata.Core.IntSet.Equals
  nameWithType: IntSet.Equals
- uid: Automata.Core.IntSet.GetEnumerator
  name: GetEnumerator()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetEnumerator
  commentId: M:Automata.Core.IntSet.GetEnumerator
  fullName: Automata.Core.IntSet.GetEnumerator()
  nameWithType: IntSet.GetEnumerator()
- uid: Automata.Core.IntSet.GetEnumerator*
  name: GetEnumerator
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetEnumerator_
  commentId: Overload:Automata.Core.IntSet.GetEnumerator
  isSpec: "True"
  fullName: Automata.Core.IntSet.GetEnumerator
  nameWithType: IntSet.GetEnumerator
- uid: Automata.Core.IntSet.GetHashCode
  name: GetHashCode()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetHashCode
  commentId: M:Automata.Core.IntSet.GetHashCode
  fullName: Automata.Core.IntSet.GetHashCode()
  nameWithType: IntSet.GetHashCode()
- uid: Automata.Core.IntSet.GetHashCode*
  name: GetHashCode
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_GetHashCode_
  commentId: Overload:Automata.Core.IntSet.GetHashCode
  isSpec: "True"
  fullName: Automata.Core.IntSet.GetHashCode
  nameWithType: IntSet.GetHashCode
- uid: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsProperSubsetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSubsetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsProperSubsetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsProperSubsetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsProperSubsetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsProperSubsetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSubsetOf_
  commentId: Overload:Automata.Core.IntSet.IsProperSubsetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsProperSubsetOf
  nameWithType: IntSet.IsProperSubsetOf
- uid: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsProperSupersetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSupersetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsProperSupersetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsProperSupersetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsProperSupersetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsProperSupersetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsProperSupersetOf_
  commentId: Overload:Automata.Core.IntSet.IsProperSupersetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsProperSupersetOf
  nameWithType: IntSet.IsProperSupersetOf
- uid: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsSubsetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSubsetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsSubsetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsSubsetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsSubsetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsSubsetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsSubsetOf*
  name: IsSubsetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSubsetOf_
  commentId: Overload:Automata.Core.IntSet.IsSubsetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsSubsetOf
  nameWithType: IntSet.IsSubsetOf
- uid: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name: IsSupersetOf(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSupersetOf_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: IsSupersetOf(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.IsSupersetOf(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.IsSupersetOf(IEnumerable<int>)
  nameWithType.vb: IntSet.IsSupersetOf(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.IsSupersetOf*
  name: IsSupersetOf
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_IsSupersetOf_
  commentId: Overload:Automata.Core.IntSet.IsSupersetOf
  isSpec: "True"
  fullName: Automata.Core.IntSet.IsSupersetOf
  nameWithType: IntSet.IsSupersetOf
- uid: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable{System.Int32})
  name: Overlaps(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Overlaps_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Overlaps(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.Overlaps(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.Overlaps(IEnumerable<int>)
  nameWithType.vb: IntSet.Overlaps(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.Overlaps*
  name: Overlaps
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_Overlaps_
  commentId: Overload:Automata.Core.IntSet.Overlaps
  isSpec: "True"
  fullName: Automata.Core.IntSet.Overlaps
  nameWithType: IntSet.Overlaps
- uid: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable{System.Int32})
  name: SetEquals(IEnumerable<int>)
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_SetEquals_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: SetEquals(IEnumerable(Of Integer))
  fullName: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.IntSet.SetEquals(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: IntSet.SetEquals(IEnumerable<int>)
  nameWithType.vb: IntSet.SetEquals(IEnumerable(Of Integer))
- uid: Automata.Core.IntSet.SetEquals*
  name: SetEquals
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_SetEquals_
  commentId: Overload:Automata.Core.IntSet.SetEquals
  isSpec: "True"
  fullName: Automata.Core.IntSet.SetEquals
  nameWithType: IntSet.SetEquals
- uid: Automata.Core.IntSet.ToString
  name: ToString()
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_ToString
  commentId: M:Automata.Core.IntSet.ToString
  fullName: Automata.Core.IntSet.ToString()
  nameWithType: IntSet.ToString()
- uid: Automata.Core.IntSet.ToString*
  name: ToString
  href: Automata.Core.IntSet.html#Automata_Core_IntSet_ToString_
  commentId: Overload:Automata.Core.IntSet.ToString
  isSpec: "True"
  fullName: Automata.Core.IntSet.ToString
  nameWithType: IntSet.ToString
- uid: Automata.Core.NFA
  name: NFA
  href: Automata.Core.NFA.html
  commentId: T:Automata.Core.NFA
  fullName: Automata.Core.NFA
  nameWithType: NFA
- uid: Automata.Core.NFA.#ctor
  name: NFA()
  href: Automata.Core.NFA.html#Automata_Core_NFA__ctor
  commentId: M:Automata.Core.NFA.#ctor
  name.vb: New()
  fullName: Automata.Core.NFA.NFA()
  fullName.vb: Automata.Core.NFA.New()
  nameWithType: NFA.NFA()
  nameWithType.vb: NFA.New()
- uid: Automata.Core.NFA.#ctor(Automata.Core.Alphabet)
  name: NFA(Alphabet)
  href: Automata.Core.NFA.html#Automata_Core_NFA__ctor_Automata_Core_Alphabet_
  commentId: M:Automata.Core.NFA.#ctor(Automata.Core.Alphabet)
  name.vb: New(Alphabet)
  fullName: Automata.Core.NFA.NFA(Automata.Core.Alphabet)
  fullName.vb: Automata.Core.NFA.New(Automata.Core.Alphabet)
  nameWithType: NFA.NFA(Alphabet)
  nameWithType.vb: NFA.New(Alphabet)
- uid: Automata.Core.NFA.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name: NFA(IEnumerable<IEnumerable<string>>)
  href: Automata.Core.NFA.html#Automata_Core_NFA__ctor_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___
  commentId: M:Automata.Core.NFA.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name.vb: New(IEnumerable(Of IEnumerable(Of String)))
  fullName: Automata.Core.NFA.NFA(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>)
  fullName.vb: Automata.Core.NFA.New(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)))
  nameWithType: NFA.NFA(IEnumerable<IEnumerable<string>>)
  nameWithType.vb: NFA.New(IEnumerable(Of IEnumerable(Of String)))
- uid: Automata.Core.NFA.#ctor*
  name: NFA
  href: Automata.Core.NFA.html#Automata_Core_NFA__ctor_
  commentId: Overload:Automata.Core.NFA.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.NFA.NFA
  fullName.vb: Automata.Core.NFA.New
  nameWithType: NFA.NFA
  nameWithType.vb: NFA.New
- uid: Automata.Core.NFA.Add(Automata.Core.EpsilonTransition)
  name: Add(EpsilonTransition)
  href: Automata.Core.NFA.html#Automata_Core_NFA_Add_Automata_Core_EpsilonTransition_
  commentId: M:Automata.Core.NFA.Add(Automata.Core.EpsilonTransition)
  fullName: Automata.Core.NFA.Add(Automata.Core.EpsilonTransition)
  nameWithType: NFA.Add(EpsilonTransition)
- uid: Automata.Core.NFA.Add(Automata.Core.SymbolicTransition)
  name: Add(SymbolicTransition)
  href: Automata.Core.NFA.html#Automata_Core_NFA_Add_Automata_Core_SymbolicTransition_
  commentId: M:Automata.Core.NFA.Add(Automata.Core.SymbolicTransition)
  fullName: Automata.Core.NFA.Add(Automata.Core.SymbolicTransition)
  nameWithType: NFA.Add(SymbolicTransition)
- uid: Automata.Core.NFA.Add*
  name: Add
  href: Automata.Core.NFA.html#Automata_Core_NFA_Add_
  commentId: Overload:Automata.Core.NFA.Add
  isSpec: "True"
  fullName: Automata.Core.NFA.Add
  nameWithType: NFA.Add
- uid: Automata.Core.NFA.Alphabet
  name: Alphabet
  href: Automata.Core.NFA.html#Automata_Core_NFA_Alphabet
  commentId: P:Automata.Core.NFA.Alphabet
  fullName: Automata.Core.NFA.Alphabet
  nameWithType: NFA.Alphabet
- uid: Automata.Core.NFA.Alphabet*
  name: Alphabet
  href: Automata.Core.NFA.html#Automata_Core_NFA_Alphabet_
  commentId: Overload:Automata.Core.NFA.Alphabet
  isSpec: "True"
  fullName: Automata.Core.NFA.Alphabet
  nameWithType: NFA.Alphabet
- uid: Automata.Core.NFA.EpsilonFree
  name: EpsilonFree
  href: Automata.Core.NFA.html#Automata_Core_NFA_EpsilonFree
  commentId: P:Automata.Core.NFA.EpsilonFree
  fullName: Automata.Core.NFA.EpsilonFree
  nameWithType: NFA.EpsilonFree
- uid: Automata.Core.NFA.EpsilonFree*
  name: EpsilonFree
  href: Automata.Core.NFA.html#Automata_Core_NFA_EpsilonFree_
  commentId: Overload:Automata.Core.NFA.EpsilonFree
  isSpec: "True"
  fullName: Automata.Core.NFA.EpsilonFree
  nameWithType: NFA.EpsilonFree
- uid: Automata.Core.NFA.FinalStates
  name: FinalStates
  href: Automata.Core.NFA.html#Automata_Core_NFA_FinalStates
  commentId: P:Automata.Core.NFA.FinalStates
  fullName: Automata.Core.NFA.FinalStates
  nameWithType: NFA.FinalStates
- uid: Automata.Core.NFA.FinalStates*
  name: FinalStates
  href: Automata.Core.NFA.html#Automata_Core_NFA_FinalStates_
  commentId: Overload:Automata.Core.NFA.FinalStates
  isSpec: "True"
  fullName: Automata.Core.NFA.FinalStates
  nameWithType: NFA.FinalStates
- uid: Automata.Core.NFA.InitialStates
  name: InitialStates
  href: Automata.Core.NFA.html#Automata_Core_NFA_InitialStates
  commentId: P:Automata.Core.NFA.InitialStates
  fullName: Automata.Core.NFA.InitialStates
  nameWithType: NFA.InitialStates
- uid: Automata.Core.NFA.InitialStates*
  name: InitialStates
  href: Automata.Core.NFA.html#Automata_Core_NFA_InitialStates_
  commentId: Overload:Automata.Core.NFA.InitialStates
  isSpec: "True"
  fullName: Automata.Core.NFA.InitialStates
  nameWithType: NFA.InitialStates
- uid: Automata.Core.NFA.IsFinal(System.Int32)
  name: IsFinal(int)
  href: Automata.Core.NFA.html#Automata_Core_NFA_IsFinal_System_Int32_
  commentId: M:Automata.Core.NFA.IsFinal(System.Int32)
  name.vb: IsFinal(Integer)
  fullName: Automata.Core.NFA.IsFinal(int)
  fullName.vb: Automata.Core.NFA.IsFinal(Integer)
  nameWithType: NFA.IsFinal(int)
  nameWithType.vb: NFA.IsFinal(Integer)
- uid: Automata.Core.NFA.IsFinal*
  name: IsFinal
  href: Automata.Core.NFA.html#Automata_Core_NFA_IsFinal_
  commentId: Overload:Automata.Core.NFA.IsFinal
  isSpec: "True"
  fullName: Automata.Core.NFA.IsFinal
  nameWithType: NFA.IsFinal
- uid: Automata.Core.NFA.IsInitial(System.Int32)
  name: IsInitial(int)
  href: Automata.Core.NFA.html#Automata_Core_NFA_IsInitial_System_Int32_
  commentId: M:Automata.Core.NFA.IsInitial(System.Int32)
  name.vb: IsInitial(Integer)
  fullName: Automata.Core.NFA.IsInitial(int)
  fullName.vb: Automata.Core.NFA.IsInitial(Integer)
  nameWithType: NFA.IsInitial(int)
  nameWithType.vb: NFA.IsInitial(Integer)
- uid: Automata.Core.NFA.IsInitial*
  name: IsInitial
  href: Automata.Core.NFA.html#Automata_Core_NFA_IsInitial_
  commentId: Overload:Automata.Core.NFA.IsInitial
  isSpec: "True"
  fullName: Automata.Core.NFA.IsInitial
  nameWithType: NFA.IsInitial
- uid: Automata.Core.NFA.MaxState
  name: MaxState
  href: Automata.Core.NFA.html#Automata_Core_NFA_MaxState
  commentId: P:Automata.Core.NFA.MaxState
  fullName: Automata.Core.NFA.MaxState
  nameWithType: NFA.MaxState
- uid: Automata.Core.NFA.MaxState*
  name: MaxState
  href: Automata.Core.NFA.html#Automata_Core_NFA_MaxState_
  commentId: Overload:Automata.Core.NFA.MaxState
  isSpec: "True"
  fullName: Automata.Core.NFA.MaxState
  nameWithType: NFA.MaxState
- uid: Automata.Core.NFA.MinState
  name: MinState
  href: Automata.Core.NFA.html#Automata_Core_NFA_MinState
  commentId: P:Automata.Core.NFA.MinState
  fullName: Automata.Core.NFA.MinState
  nameWithType: NFA.MinState
- uid: Automata.Core.NFA.MinState*
  name: MinState
  href: Automata.Core.NFA.html#Automata_Core_NFA_MinState_
  commentId: Overload:Automata.Core.NFA.MinState
  isSpec: "True"
  fullName: Automata.Core.NFA.MinState
  nameWithType: NFA.MinState
- uid: Automata.Core.NFA.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name: SetFinal(IEnumerable<int>, bool)
  href: Automata.Core.NFA.html#Automata_Core_NFA_SetFinal_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_
  commentId: M:Automata.Core.NFA.SetFinal(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name.vb: SetFinal(IEnumerable(Of Integer), Boolean)
  fullName: Automata.Core.NFA.SetFinal(System.Collections.Generic.IEnumerable<int>, bool)
  fullName.vb: Automata.Core.NFA.SetFinal(System.Collections.Generic.IEnumerable(Of Integer), Boolean)
  nameWithType: NFA.SetFinal(IEnumerable<int>, bool)
  nameWithType.vb: NFA.SetFinal(IEnumerable(Of Integer), Boolean)
- uid: Automata.Core.NFA.SetFinal(System.Int32,System.Boolean)
  name: SetFinal(int, bool)
  href: Automata.Core.NFA.html#Automata_Core_NFA_SetFinal_System_Int32_System_Boolean_
  commentId: M:Automata.Core.NFA.SetFinal(System.Int32,System.Boolean)
  name.vb: SetFinal(Integer, Boolean)
  fullName: Automata.Core.NFA.SetFinal(int, bool)
  fullName.vb: Automata.Core.NFA.SetFinal(Integer, Boolean)
  nameWithType: NFA.SetFinal(int, bool)
  nameWithType.vb: NFA.SetFinal(Integer, Boolean)
- uid: Automata.Core.NFA.SetFinal*
  name: SetFinal
  href: Automata.Core.NFA.html#Automata_Core_NFA_SetFinal_
  commentId: Overload:Automata.Core.NFA.SetFinal
  isSpec: "True"
  fullName: Automata.Core.NFA.SetFinal
  nameWithType: NFA.SetFinal
- uid: Automata.Core.NFA.SetInitial(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name: SetInitial(IEnumerable<int>, bool)
  href: Automata.Core.NFA.html#Automata_Core_NFA_SetInitial_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_
  commentId: M:Automata.Core.NFA.SetInitial(System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)
  name.vb: SetInitial(IEnumerable(Of Integer), Boolean)
  fullName: Automata.Core.NFA.SetInitial(System.Collections.Generic.IEnumerable<int>, bool)
  fullName.vb: Automata.Core.NFA.SetInitial(System.Collections.Generic.IEnumerable(Of Integer), Boolean)
  nameWithType: NFA.SetInitial(IEnumerable<int>, bool)
  nameWithType.vb: NFA.SetInitial(IEnumerable(Of Integer), Boolean)
- uid: Automata.Core.NFA.SetInitial(System.Int32,System.Boolean)
  name: SetInitial(int, bool)
  href: Automata.Core.NFA.html#Automata_Core_NFA_SetInitial_System_Int32_System_Boolean_
  commentId: M:Automata.Core.NFA.SetInitial(System.Int32,System.Boolean)
  name.vb: SetInitial(Integer, Boolean)
  fullName: Automata.Core.NFA.SetInitial(int, bool)
  fullName.vb: Automata.Core.NFA.SetInitial(Integer, Boolean)
  nameWithType: NFA.SetInitial(int, bool)
  nameWithType.vb: NFA.SetInitial(Integer, Boolean)
- uid: Automata.Core.NFA.SetInitial*
  name: SetInitial
  href: Automata.Core.NFA.html#Automata_Core_NFA_SetInitial_
  commentId: Overload:Automata.Core.NFA.SetInitial
  isSpec: "True"
  fullName: Automata.Core.NFA.SetInitial
  nameWithType: NFA.SetInitial
- uid: Automata.Core.NFA.ToDFA
  name: ToDFA()
  href: Automata.Core.NFA.html#Automata_Core_NFA_ToDFA
  commentId: M:Automata.Core.NFA.ToDFA
  fullName: Automata.Core.NFA.ToDFA()
  nameWithType: NFA.ToDFA()
- uid: Automata.Core.NFA.ToDFA*
  name: ToDFA
  href: Automata.Core.NFA.html#Automata_Core_NFA_ToDFA_
  commentId: Overload:Automata.Core.NFA.ToDFA
  isSpec: "True"
  fullName: Automata.Core.NFA.ToDFA
  nameWithType: NFA.ToDFA
- uid: Automata.Core.NFA.ToMinimizedDFA
  name: ToMinimizedDFA()
  href: Automata.Core.NFA.html#Automata_Core_NFA_ToMinimizedDFA
  commentId: M:Automata.Core.NFA.ToMinimizedDFA
  fullName: Automata.Core.NFA.ToMinimizedDFA()
  nameWithType: NFA.ToMinimizedDFA()
- uid: Automata.Core.NFA.ToMinimizedDFA*
  name: ToMinimizedDFA
  href: Automata.Core.NFA.html#Automata_Core_NFA_ToMinimizedDFA_
  commentId: Overload:Automata.Core.NFA.ToMinimizedDFA
  isSpec: "True"
  fullName: Automata.Core.NFA.ToMinimizedDFA
  nameWithType: NFA.ToMinimizedDFA
- uid: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.EpsilonTransition})
  name: UnionWith(IEnumerable<EpsilonTransition>)
  href: Automata.Core.NFA.html#Automata_Core_NFA_UnionWith_System_Collections_Generic_IEnumerable_Automata_Core_EpsilonTransition__
  commentId: M:Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.EpsilonTransition})
  name.vb: UnionWith(IEnumerable(Of EpsilonTransition))
  fullName: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable<Automata.Core.EpsilonTransition>)
  fullName.vb: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable(Of Automata.Core.EpsilonTransition))
  nameWithType: NFA.UnionWith(IEnumerable<EpsilonTransition>)
  nameWithType.vb: NFA.UnionWith(IEnumerable(Of EpsilonTransition))
- uid: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.SymbolicTransition})
  name: UnionWith(IEnumerable<SymbolicTransition>)
  href: Automata.Core.NFA.html#Automata_Core_NFA_UnionWith_System_Collections_Generic_IEnumerable_Automata_Core_SymbolicTransition__
  commentId: M:Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable{Automata.Core.SymbolicTransition})
  name.vb: UnionWith(IEnumerable(Of SymbolicTransition))
  fullName: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable<Automata.Core.SymbolicTransition>)
  fullName.vb: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable(Of Automata.Core.SymbolicTransition))
  nameWithType: NFA.UnionWith(IEnumerable<SymbolicTransition>)
  nameWithType.vb: NFA.UnionWith(IEnumerable(Of SymbolicTransition))
- uid: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name: UnionWith(IEnumerable<IEnumerable<string>>)
  href: Automata.Core.NFA.html#Automata_Core_NFA_UnionWith_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___
  commentId: M:Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  name.vb: UnionWith(IEnumerable(Of IEnumerable(Of String)))
  fullName: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>)
  fullName.vb: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)))
  nameWithType: NFA.UnionWith(IEnumerable<IEnumerable<string>>)
  nameWithType.vb: NFA.UnionWith(IEnumerable(Of IEnumerable(Of String)))
- uid: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  name: UnionWith(IEnumerable<string>)
  href: Automata.Core.NFA.html#Automata_Core_NFA_UnionWith_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable{System.String})
  name.vb: UnionWith(IEnumerable(Of String))
  fullName: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: Automata.Core.NFA.UnionWith(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: NFA.UnionWith(IEnumerable<string>)
  nameWithType.vb: NFA.UnionWith(IEnumerable(Of String))
- uid: Automata.Core.NFA.UnionWith*
  name: UnionWith
  href: Automata.Core.NFA.html#Automata_Core_NFA_UnionWith_
  commentId: Overload:Automata.Core.NFA.UnionWith
  isSpec: "True"
  fullName: Automata.Core.NFA.UnionWith
  nameWithType: NFA.UnionWith
- uid: Automata.Core.SymbolicTransition
  name: SymbolicTransition
  href: Automata.Core.SymbolicTransition.html
  commentId: T:Automata.Core.SymbolicTransition
  fullName: Automata.Core.SymbolicTransition
  nameWithType: SymbolicTransition
- uid: Automata.Core.SymbolicTransition.#ctor
  name: SymbolicTransition()
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition__ctor
  commentId: M:Automata.Core.SymbolicTransition.#ctor
  name.vb: New()
  fullName: Automata.Core.SymbolicTransition.SymbolicTransition()
  fullName.vb: Automata.Core.SymbolicTransition.New()
  nameWithType: SymbolicTransition.SymbolicTransition()
  nameWithType.vb: SymbolicTransition.New()
- uid: Automata.Core.SymbolicTransition.#ctor(System.Int32,System.Int32,System.Int32)
  name: SymbolicTransition(int, int, int)
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition__ctor_System_Int32_System_Int32_System_Int32_
  commentId: M:Automata.Core.SymbolicTransition.#ctor(System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer)
  fullName: Automata.Core.SymbolicTransition.SymbolicTransition(int, int, int)
  fullName.vb: Automata.Core.SymbolicTransition.New(Integer, Integer, Integer)
  nameWithType: SymbolicTransition.SymbolicTransition(int, int, int)
  nameWithType.vb: SymbolicTransition.New(Integer, Integer, Integer)
- uid: Automata.Core.SymbolicTransition.#ctor*
  name: SymbolicTransition
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition__ctor_
  commentId: Overload:Automata.Core.SymbolicTransition.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.SymbolicTransition.SymbolicTransition
  fullName.vb: Automata.Core.SymbolicTransition.New
  nameWithType: SymbolicTransition.SymbolicTransition
  nameWithType.vb: SymbolicTransition.New
- uid: Automata.Core.SymbolicTransition.CompareByToState
  name: CompareByToState()
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_CompareByToState
  commentId: M:Automata.Core.SymbolicTransition.CompareByToState
  fullName: Automata.Core.SymbolicTransition.CompareByToState()
  nameWithType: SymbolicTransition.CompareByToState()
- uid: Automata.Core.SymbolicTransition.CompareByToState*
  name: CompareByToState
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_CompareByToState_
  commentId: Overload:Automata.Core.SymbolicTransition.CompareByToState
  isSpec: "True"
  fullName: Automata.Core.SymbolicTransition.CompareByToState
  nameWithType: SymbolicTransition.CompareByToState
- uid: Automata.Core.SymbolicTransition.CompareTo(Automata.Core.SymbolicTransition)
  name: CompareTo(SymbolicTransition)
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_CompareTo_Automata_Core_SymbolicTransition_
  commentId: M:Automata.Core.SymbolicTransition.CompareTo(Automata.Core.SymbolicTransition)
  fullName: Automata.Core.SymbolicTransition.CompareTo(Automata.Core.SymbolicTransition)
  nameWithType: SymbolicTransition.CompareTo(SymbolicTransition)
- uid: Automata.Core.SymbolicTransition.CompareTo*
  name: CompareTo
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_CompareTo_
  commentId: Overload:Automata.Core.SymbolicTransition.CompareTo
  isSpec: "True"
  fullName: Automata.Core.SymbolicTransition.CompareTo
  nameWithType: SymbolicTransition.CompareTo
- uid: Automata.Core.SymbolicTransition.FromState
  name: FromState
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_FromState
  commentId: P:Automata.Core.SymbolicTransition.FromState
  fullName: Automata.Core.SymbolicTransition.FromState
  nameWithType: SymbolicTransition.FromState
- uid: Automata.Core.SymbolicTransition.FromState*
  name: FromState
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_FromState_
  commentId: Overload:Automata.Core.SymbolicTransition.FromState
  isSpec: "True"
  fullName: Automata.Core.SymbolicTransition.FromState
  nameWithType: SymbolicTransition.FromState
- uid: Automata.Core.SymbolicTransition.Reverse
  name: Reverse()
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_Reverse
  commentId: M:Automata.Core.SymbolicTransition.Reverse
  fullName: Automata.Core.SymbolicTransition.Reverse()
  nameWithType: SymbolicTransition.Reverse()
- uid: Automata.Core.SymbolicTransition.Reverse*
  name: Reverse
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_Reverse_
  commentId: Overload:Automata.Core.SymbolicTransition.Reverse
  isSpec: "True"
  fullName: Automata.Core.SymbolicTransition.Reverse
  nameWithType: SymbolicTransition.Reverse
- uid: Automata.Core.SymbolicTransition.Symbol
  name: Symbol
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_Symbol
  commentId: P:Automata.Core.SymbolicTransition.Symbol
  fullName: Automata.Core.SymbolicTransition.Symbol
  nameWithType: SymbolicTransition.Symbol
- uid: Automata.Core.SymbolicTransition.Symbol*
  name: Symbol
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_Symbol_
  commentId: Overload:Automata.Core.SymbolicTransition.Symbol
  isSpec: "True"
  fullName: Automata.Core.SymbolicTransition.Symbol
  nameWithType: SymbolicTransition.Symbol
- uid: Automata.Core.SymbolicTransition.ToState
  name: ToState
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_ToState
  commentId: P:Automata.Core.SymbolicTransition.ToState
  fullName: Automata.Core.SymbolicTransition.ToState
  nameWithType: SymbolicTransition.ToState
- uid: Automata.Core.SymbolicTransition.ToState*
  name: ToState
  href: Automata.Core.SymbolicTransition.html#Automata_Core_SymbolicTransition_ToState_
  commentId: Overload:Automata.Core.SymbolicTransition.ToState
  isSpec: "True"
  fullName: Automata.Core.SymbolicTransition.ToState
  nameWithType: SymbolicTransition.ToState
- uid: Automata.Core.SymbolicTransitionSet
  name: SymbolicTransitionSet
  href: Automata.Core.SymbolicTransitionSet.html
  commentId: T:Automata.Core.SymbolicTransitionSet
  fullName: Automata.Core.SymbolicTransitionSet
  nameWithType: SymbolicTransitionSet
- uid: Automata.Core.SymbolicTransitionSet.#ctor
  name: SymbolicTransitionSet()
  href: Automata.Core.SymbolicTransitionSet.html#Automata_Core_SymbolicTransitionSet__ctor
  commentId: M:Automata.Core.SymbolicTransitionSet.#ctor
  name.vb: New()
  fullName: Automata.Core.SymbolicTransitionSet.SymbolicTransitionSet()
  fullName.vb: Automata.Core.SymbolicTransitionSet.New()
  nameWithType: SymbolicTransitionSet.SymbolicTransitionSet()
  nameWithType.vb: SymbolicTransitionSet.New()
- uid: Automata.Core.SymbolicTransitionSet.#ctor(System.Collections.Generic.IEnumerable{Automata.Core.SymbolicTransition})
  name: SymbolicTransitionSet(IEnumerable<SymbolicTransition>)
  href: Automata.Core.SymbolicTransitionSet.html#Automata_Core_SymbolicTransitionSet__ctor_System_Collections_Generic_IEnumerable_Automata_Core_SymbolicTransition__
  commentId: M:Automata.Core.SymbolicTransitionSet.#ctor(System.Collections.Generic.IEnumerable{Automata.Core.SymbolicTransition})
  name.vb: New(IEnumerable(Of SymbolicTransition))
  fullName: Automata.Core.SymbolicTransitionSet.SymbolicTransitionSet(System.Collections.Generic.IEnumerable<Automata.Core.SymbolicTransition>)
  fullName.vb: Automata.Core.SymbolicTransitionSet.New(System.Collections.Generic.IEnumerable(Of Automata.Core.SymbolicTransition))
  nameWithType: SymbolicTransitionSet.SymbolicTransitionSet(IEnumerable<SymbolicTransition>)
  nameWithType.vb: SymbolicTransitionSet.New(IEnumerable(Of SymbolicTransition))
- uid: Automata.Core.SymbolicTransitionSet.#ctor*
  name: SymbolicTransitionSet
  href: Automata.Core.SymbolicTransitionSet.html#Automata_Core_SymbolicTransitionSet__ctor_
  commentId: Overload:Automata.Core.SymbolicTransitionSet.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.SymbolicTransitionSet.SymbolicTransitionSet
  fullName.vb: Automata.Core.SymbolicTransitionSet.New
  nameWithType: SymbolicTransitionSet.SymbolicTransitionSet
  nameWithType.vb: SymbolicTransitionSet.New
- uid: Automata.Core.SymbolicTransitionSet.GetAvailableSymbols(System.Collections.Generic.IEnumerable{System.Int32})
  name: GetAvailableSymbols(IEnumerable<int>)
  href: Automata.Core.SymbolicTransitionSet.html#Automata_Core_SymbolicTransitionSet_GetAvailableSymbols_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Automata.Core.SymbolicTransitionSet.GetAvailableSymbols(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: GetAvailableSymbols(IEnumerable(Of Integer))
  fullName: Automata.Core.SymbolicTransitionSet.GetAvailableSymbols(System.Collections.Generic.IEnumerable<int>)
  fullName.vb: Automata.Core.SymbolicTransitionSet.GetAvailableSymbols(System.Collections.Generic.IEnumerable(Of Integer))
  nameWithType: SymbolicTransitionSet.GetAvailableSymbols(IEnumerable<int>)
  nameWithType.vb: SymbolicTransitionSet.GetAvailableSymbols(IEnumerable(Of Integer))
- uid: Automata.Core.SymbolicTransitionSet.GetAvailableSymbols*
  name: GetAvailableSymbols
  href: Automata.Core.SymbolicTransitionSet.html#Automata_Core_SymbolicTransitionSet_GetAvailableSymbols_
  commentId: Overload:Automata.Core.SymbolicTransitionSet.GetAvailableSymbols
  isSpec: "True"
  fullName: Automata.Core.SymbolicTransitionSet.GetAvailableSymbols
  nameWithType: SymbolicTransitionSet.GetAvailableSymbols
- uid: Automata.Core.SymbolicTransitionSet.ReachableStates(System.Int32,System.Int32)
  name: ReachableStates(int, int)
  href: Automata.Core.SymbolicTransitionSet.html#Automata_Core_SymbolicTransitionSet_ReachableStates_System_Int32_System_Int32_
  commentId: M:Automata.Core.SymbolicTransitionSet.ReachableStates(System.Int32,System.Int32)
  name.vb: ReachableStates(Integer, Integer)
  fullName: Automata.Core.SymbolicTransitionSet.ReachableStates(int, int)
  fullName.vb: Automata.Core.SymbolicTransitionSet.ReachableStates(Integer, Integer)
  nameWithType: SymbolicTransitionSet.ReachableStates(int, int)
  nameWithType.vb: SymbolicTransitionSet.ReachableStates(Integer, Integer)
- uid: Automata.Core.SymbolicTransitionSet.ReachableStates*
  name: ReachableStates
  href: Automata.Core.SymbolicTransitionSet.html#Automata_Core_SymbolicTransitionSet_ReachableStates_
  commentId: Overload:Automata.Core.SymbolicTransitionSet.ReachableStates
  isSpec: "True"
  fullName: Automata.Core.SymbolicTransitionSet.ReachableStates
  nameWithType: SymbolicTransitionSet.ReachableStates
- uid: Automata.Core.Transition
  name: Transition
  href: Automata.Core.Transition.html
  commentId: T:Automata.Core.Transition
  fullName: Automata.Core.Transition
  nameWithType: Transition
- uid: Automata.Core.Transition.#ctor
  name: Transition()
  href: Automata.Core.Transition.html#Automata_Core_Transition__ctor
  commentId: M:Automata.Core.Transition.#ctor
  name.vb: New()
  fullName: Automata.Core.Transition.Transition()
  fullName.vb: Automata.Core.Transition.New()
  nameWithType: Transition.Transition()
  nameWithType.vb: Transition.New()
- uid: Automata.Core.Transition.#ctor(System.Int32,System.Int32,System.Int32)
  name: Transition(int, int, int)
  href: Automata.Core.Transition.html#Automata_Core_Transition__ctor_System_Int32_System_Int32_System_Int32_
  commentId: M:Automata.Core.Transition.#ctor(System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer)
  fullName: Automata.Core.Transition.Transition(int, int, int)
  fullName.vb: Automata.Core.Transition.New(Integer, Integer, Integer)
  nameWithType: Transition.Transition(int, int, int)
  nameWithType.vb: Transition.New(Integer, Integer, Integer)
- uid: Automata.Core.Transition.#ctor*
  name: Transition
  href: Automata.Core.Transition.html#Automata_Core_Transition__ctor_
  commentId: Overload:Automata.Core.Transition.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.Transition.Transition
  fullName.vb: Automata.Core.Transition.New
  nameWithType: Transition.Transition
  nameWithType.vb: Transition.New
- uid: Automata.Core.Transition.CompareByToState
  name: CompareByToState()
  href: Automata.Core.Transition.html#Automata_Core_Transition_CompareByToState
  commentId: M:Automata.Core.Transition.CompareByToState
  fullName: Automata.Core.Transition.CompareByToState()
  nameWithType: Transition.CompareByToState()
- uid: Automata.Core.Transition.CompareByToState*
  name: CompareByToState
  href: Automata.Core.Transition.html#Automata_Core_Transition_CompareByToState_
  commentId: Overload:Automata.Core.Transition.CompareByToState
  isSpec: "True"
  fullName: Automata.Core.Transition.CompareByToState
  nameWithType: Transition.CompareByToState
- uid: Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  name: CompareTo(Transition)
  href: Automata.Core.Transition.html#Automata_Core_Transition_CompareTo_Automata_Core_Transition_
  commentId: M:Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  fullName: Automata.Core.Transition.CompareTo(Automata.Core.Transition)
  nameWithType: Transition.CompareTo(Transition)
- uid: Automata.Core.Transition.CompareTo*
  name: CompareTo
  href: Automata.Core.Transition.html#Automata_Core_Transition_CompareTo_
  commentId: Overload:Automata.Core.Transition.CompareTo
  isSpec: "True"
  fullName: Automata.Core.Transition.CompareTo
  nameWithType: Transition.CompareTo
- uid: Automata.Core.Transition.FromState
  name: FromState
  href: Automata.Core.Transition.html#Automata_Core_Transition_FromState
  commentId: P:Automata.Core.Transition.FromState
  fullName: Automata.Core.Transition.FromState
  nameWithType: Transition.FromState
- uid: Automata.Core.Transition.FromState*
  name: FromState
  href: Automata.Core.Transition.html#Automata_Core_Transition_FromState_
  commentId: Overload:Automata.Core.Transition.FromState
  isSpec: "True"
  fullName: Automata.Core.Transition.FromState
  nameWithType: Transition.FromState
- uid: Automata.Core.Transition.Reverse
  name: Reverse()
  href: Automata.Core.Transition.html#Automata_Core_Transition_Reverse
  commentId: M:Automata.Core.Transition.Reverse
  fullName: Automata.Core.Transition.Reverse()
  nameWithType: Transition.Reverse()
- uid: Automata.Core.Transition.Reverse*
  name: Reverse
  href: Automata.Core.Transition.html#Automata_Core_Transition_Reverse_
  commentId: Overload:Automata.Core.Transition.Reverse
  isSpec: "True"
  fullName: Automata.Core.Transition.Reverse
  nameWithType: Transition.Reverse
- uid: Automata.Core.Transition.Symbol
  name: Symbol
  href: Automata.Core.Transition.html#Automata_Core_Transition_Symbol
  commentId: P:Automata.Core.Transition.Symbol
  fullName: Automata.Core.Transition.Symbol
  nameWithType: Transition.Symbol
- uid: Automata.Core.Transition.Symbol*
  name: Symbol
  href: Automata.Core.Transition.html#Automata_Core_Transition_Symbol_
  commentId: Overload:Automata.Core.Transition.Symbol
  isSpec: "True"
  fullName: Automata.Core.Transition.Symbol
  nameWithType: Transition.Symbol
- uid: Automata.Core.Transition.ToState
  name: ToState
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToState
  commentId: P:Automata.Core.Transition.ToState
  fullName: Automata.Core.Transition.ToState
  nameWithType: Transition.ToState
- uid: Automata.Core.Transition.ToState*
  name: ToState
  href: Automata.Core.Transition.html#Automata_Core_Transition_ToState_
  commentId: Overload:Automata.Core.Transition.ToState
  isSpec: "True"
  fullName: Automata.Core.Transition.ToState
  nameWithType: Transition.ToState
- uid: Automata.Core.TransitionSet`1
  name: TransitionSet<T>
  href: Automata.Core.TransitionSet-1.html
  commentId: T:Automata.Core.TransitionSet`1
  name.vb: TransitionSet(Of T)
  fullName: Automata.Core.TransitionSet<T>
  fullName.vb: Automata.Core.TransitionSet(Of T)
  nameWithType: TransitionSet<T>
  nameWithType.vb: TransitionSet(Of T)
- uid: Automata.Core.TransitionSet`1.#ctor
  name: TransitionSet()
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1__ctor
  commentId: M:Automata.Core.TransitionSet`1.#ctor
  name.vb: New()
  fullName: Automata.Core.TransitionSet<T>.TransitionSet()
  fullName.vb: Automata.Core.TransitionSet(Of T).New()
  nameWithType: TransitionSet<T>.TransitionSet()
  nameWithType.vb: TransitionSet(Of T).New()
- uid: Automata.Core.TransitionSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name: TransitionSet(IEnumerable<T>)
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1__ctor_System_Collections_Generic_IEnumerable__0__
  commentId: M:Automata.Core.TransitionSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  name.vb: New(IEnumerable(Of T))
  fullName: Automata.Core.TransitionSet<T>.TransitionSet(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Automata.Core.TransitionSet(Of T).New(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: TransitionSet<T>.TransitionSet(IEnumerable<T>)
  nameWithType.vb: TransitionSet(Of T).New(IEnumerable(Of T))
- uid: Automata.Core.TransitionSet`1.#ctor*
  name: TransitionSet
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1__ctor_
  commentId: Overload:Automata.Core.TransitionSet`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Automata.Core.TransitionSet<T>.TransitionSet
  fullName.vb: Automata.Core.TransitionSet(Of T).New
  nameWithType: TransitionSet<T>.TransitionSet
  nameWithType.vb: TransitionSet(Of T).New
- uid: Automata.Core.TransitionSet`1.Add(`0)
  name: Add(T)
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_Add__0_
  commentId: M:Automata.Core.TransitionSet`1.Add(`0)
  fullName: Automata.Core.TransitionSet<T>.Add(T)
  fullName.vb: Automata.Core.TransitionSet(Of T).Add(T)
  nameWithType: TransitionSet<T>.Add(T)
  nameWithType.vb: TransitionSet(Of T).Add(T)
- uid: Automata.Core.TransitionSet`1.Add*
  name: Add
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_Add_
  commentId: Overload:Automata.Core.TransitionSet`1.Add
  isSpec: "True"
  fullName: Automata.Core.TransitionSet<T>.Add
  fullName.vb: Automata.Core.TransitionSet(Of T).Add
  nameWithType: TransitionSet<T>.Add
  nameWithType.vb: TransitionSet(Of T).Add
- uid: Automata.Core.TransitionSet`1.Count
  name: Count
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_Count
  commentId: P:Automata.Core.TransitionSet`1.Count
  fullName: Automata.Core.TransitionSet<T>.Count
  fullName.vb: Automata.Core.TransitionSet(Of T).Count
  nameWithType: TransitionSet<T>.Count
  nameWithType.vb: TransitionSet(Of T).Count
- uid: Automata.Core.TransitionSet`1.Count*
  name: Count
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_Count_
  commentId: Overload:Automata.Core.TransitionSet`1.Count
  isSpec: "True"
  fullName: Automata.Core.TransitionSet<T>.Count
  fullName.vb: Automata.Core.TransitionSet(Of T).Count
  nameWithType: TransitionSet<T>.Count
  nameWithType.vb: TransitionSet(Of T).Count
- uid: Automata.Core.TransitionSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  name: ExceptWith(IEnumerable<T>)
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_ExceptWith_System_Collections_Generic_IEnumerable__0__
  commentId: M:Automata.Core.TransitionSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  name.vb: ExceptWith(IEnumerable(Of T))
  fullName: Automata.Core.TransitionSet<T>.ExceptWith(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Automata.Core.TransitionSet(Of T).ExceptWith(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: TransitionSet<T>.ExceptWith(IEnumerable<T>)
  nameWithType.vb: TransitionSet(Of T).ExceptWith(IEnumerable(Of T))
- uid: Automata.Core.TransitionSet`1.ExceptWith*
  name: ExceptWith
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_ExceptWith_
  commentId: Overload:Automata.Core.TransitionSet`1.ExceptWith
  isSpec: "True"
  fullName: Automata.Core.TransitionSet<T>.ExceptWith
  fullName.vb: Automata.Core.TransitionSet(Of T).ExceptWith
  nameWithType: TransitionSet<T>.ExceptWith
  nameWithType.vb: TransitionSet(Of T).ExceptWith
- uid: Automata.Core.TransitionSet`1.MaxState
  name: MaxState
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_MaxState
  commentId: P:Automata.Core.TransitionSet`1.MaxState
  fullName: Automata.Core.TransitionSet<T>.MaxState
  fullName.vb: Automata.Core.TransitionSet(Of T).MaxState
  nameWithType: TransitionSet<T>.MaxState
  nameWithType.vb: TransitionSet(Of T).MaxState
- uid: Automata.Core.TransitionSet`1.MaxState*
  name: MaxState
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_MaxState_
  commentId: Overload:Automata.Core.TransitionSet`1.MaxState
  isSpec: "True"
  fullName: Automata.Core.TransitionSet<T>.MaxState
  fullName.vb: Automata.Core.TransitionSet(Of T).MaxState
  nameWithType: TransitionSet<T>.MaxState
  nameWithType.vb: TransitionSet(Of T).MaxState
- uid: Automata.Core.TransitionSet`1.MinState
  name: MinState
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_MinState
  commentId: P:Automata.Core.TransitionSet`1.MinState
  fullName: Automata.Core.TransitionSet<T>.MinState
  fullName.vb: Automata.Core.TransitionSet(Of T).MinState
  nameWithType: TransitionSet<T>.MinState
  nameWithType.vb: TransitionSet(Of T).MinState
- uid: Automata.Core.TransitionSet`1.MinState*
  name: MinState
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_MinState_
  commentId: Overload:Automata.Core.TransitionSet`1.MinState
  isSpec: "True"
  fullName: Automata.Core.TransitionSet<T>.MinState
  fullName.vb: Automata.Core.TransitionSet(Of T).MinState
  nameWithType: TransitionSet<T>.MinState
  nameWithType.vb: TransitionSet(Of T).MinState
- uid: Automata.Core.TransitionSet`1.Remove(`0)
  name: Remove(T)
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_Remove__0_
  commentId: M:Automata.Core.TransitionSet`1.Remove(`0)
  fullName: Automata.Core.TransitionSet<T>.Remove(T)
  fullName.vb: Automata.Core.TransitionSet(Of T).Remove(T)
  nameWithType: TransitionSet<T>.Remove(T)
  nameWithType.vb: TransitionSet(Of T).Remove(T)
- uid: Automata.Core.TransitionSet`1.Remove*
  name: Remove
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_Remove_
  commentId: Overload:Automata.Core.TransitionSet`1.Remove
  isSpec: "True"
  fullName: Automata.Core.TransitionSet<T>.Remove
  fullName.vb: Automata.Core.TransitionSet(Of T).Remove
  nameWithType: TransitionSet<T>.Remove
  nameWithType.vb: TransitionSet(Of T).Remove
- uid: Automata.Core.TransitionSet`1.Transitions
  name: Transitions
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_Transitions
  commentId: P:Automata.Core.TransitionSet`1.Transitions
  fullName: Automata.Core.TransitionSet<T>.Transitions
  fullName.vb: Automata.Core.TransitionSet(Of T).Transitions
  nameWithType: TransitionSet<T>.Transitions
  nameWithType.vb: TransitionSet(Of T).Transitions
- uid: Automata.Core.TransitionSet`1.Transitions*
  name: Transitions
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_Transitions_
  commentId: Overload:Automata.Core.TransitionSet`1.Transitions
  isSpec: "True"
  fullName: Automata.Core.TransitionSet<T>.Transitions
  fullName.vb: Automata.Core.TransitionSet(Of T).Transitions
  nameWithType: TransitionSet<T>.Transitions
  nameWithType.vb: TransitionSet(Of T).Transitions
- uid: Automata.Core.TransitionSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  name: UnionWith(IEnumerable<T>)
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_UnionWith_System_Collections_Generic_IEnumerable__0__
  commentId: M:Automata.Core.TransitionSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  name.vb: UnionWith(IEnumerable(Of T))
  fullName: Automata.Core.TransitionSet<T>.UnionWith(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Automata.Core.TransitionSet(Of T).UnionWith(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: TransitionSet<T>.UnionWith(IEnumerable<T>)
  nameWithType.vb: TransitionSet(Of T).UnionWith(IEnumerable(Of T))
- uid: Automata.Core.TransitionSet`1.UnionWith*
  name: UnionWith
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_UnionWith_
  commentId: Overload:Automata.Core.TransitionSet`1.UnionWith
  isSpec: "True"
  fullName: Automata.Core.TransitionSet<T>.UnionWith
  fullName.vb: Automata.Core.TransitionSet(Of T).UnionWith
  nameWithType: TransitionSet<T>.UnionWith
  nameWithType.vb: TransitionSet(Of T).UnionWith
- uid: Automata.Core.TransitionSet`1.orderByFromState
  name: orderByFromState
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_orderByFromState
  commentId: F:Automata.Core.TransitionSet`1.orderByFromState
  fullName: Automata.Core.TransitionSet<T>.orderByFromState
  fullName.vb: Automata.Core.TransitionSet(Of T).orderByFromState
  nameWithType: TransitionSet<T>.orderByFromState
  nameWithType.vb: TransitionSet(Of T).orderByFromState
- uid: Automata.Core.TransitionSet`1.orderByToState
  name: orderByToState
  href: Automata.Core.TransitionSet-1.html#Automata_Core_TransitionSet_1_orderByToState
  commentId: F:Automata.Core.TransitionSet`1.orderByToState
  fullName: Automata.Core.TransitionSet<T>.orderByToState
  fullName.vb: Automata.Core.TransitionSet(Of T).orderByToState
  nameWithType: TransitionSet<T>.orderByToState
  nameWithType.vb: TransitionSet(Of T).orderByToState
- uid: Automata.Visualization
  name: Automata.Visualization
  href: Automata.Visualization.html
  commentId: N:Automata.Visualization
  fullName: Automata.Visualization
  nameWithType: Automata.Visualization
- uid: Automata.Visualization.ConsoleWindow
  name: ConsoleWindow
  href: Automata.Visualization.ConsoleWindow.html
  commentId: T:Automata.Visualization.ConsoleWindow
  fullName: Automata.Visualization.ConsoleWindow
  nameWithType: ConsoleWindow
- uid: Automata.Visualization.ConsoleWindow.ClearText
  name: ClearText()
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_ClearText
  commentId: M:Automata.Visualization.ConsoleWindow.ClearText
  fullName: Automata.Visualization.ConsoleWindow.ClearText()
  nameWithType: ConsoleWindow.ClearText()
- uid: Automata.Visualization.ConsoleWindow.ClearText*
  name: ClearText
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_ClearText_
  commentId: Overload:Automata.Visualization.ConsoleWindow.ClearText
  isSpec: "True"
  fullName: Automata.Visualization.ConsoleWindow.ClearText
  nameWithType: ConsoleWindow.ClearText
- uid: Automata.Visualization.ConsoleWindow.Create
  name: Create()
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_Create
  commentId: M:Automata.Visualization.ConsoleWindow.Create
  fullName: Automata.Visualization.ConsoleWindow.Create()
  nameWithType: ConsoleWindow.Create()
- uid: Automata.Visualization.ConsoleWindow.Create*
  name: Create
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_Create_
  commentId: Overload:Automata.Visualization.ConsoleWindow.Create
  isSpec: "True"
  fullName: Automata.Visualization.ConsoleWindow.Create
  nameWithType: ConsoleWindow.Create
- uid: Automata.Visualization.ConsoleWindow.Dispose(System.Boolean)
  name: Dispose(bool)
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_Dispose_System_Boolean_
  commentId: M:Automata.Visualization.ConsoleWindow.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: Automata.Visualization.ConsoleWindow.Dispose(bool)
  fullName.vb: Automata.Visualization.ConsoleWindow.Dispose(Boolean)
  nameWithType: ConsoleWindow.Dispose(bool)
  nameWithType.vb: ConsoleWindow.Dispose(Boolean)
- uid: Automata.Visualization.ConsoleWindow.Dispose*
  name: Dispose
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_Dispose_
  commentId: Overload:Automata.Visualization.ConsoleWindow.Dispose
  isSpec: "True"
  fullName: Automata.Visualization.ConsoleWindow.Dispose
  nameWithType: ConsoleWindow.Dispose
- uid: Automata.Visualization.ConsoleWindow.IsAlive
  name: IsAlive
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_IsAlive
  commentId: P:Automata.Visualization.ConsoleWindow.IsAlive
  fullName: Automata.Visualization.ConsoleWindow.IsAlive
  nameWithType: ConsoleWindow.IsAlive
- uid: Automata.Visualization.ConsoleWindow.IsAlive*
  name: IsAlive
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_IsAlive_
  commentId: Overload:Automata.Visualization.ConsoleWindow.IsAlive
  isSpec: "True"
  fullName: Automata.Visualization.ConsoleWindow.IsAlive
  nameWithType: ConsoleWindow.IsAlive
- uid: Automata.Visualization.ConsoleWindow.ShowGraph(Microsoft.Msagl.Drawing.Graph)
  name: ShowGraph(Graph)
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_ShowGraph_Microsoft_Msagl_Drawing_Graph_
  commentId: M:Automata.Visualization.ConsoleWindow.ShowGraph(Microsoft.Msagl.Drawing.Graph)
  fullName: Automata.Visualization.ConsoleWindow.ShowGraph(Microsoft.Msagl.Drawing.Graph)
  nameWithType: ConsoleWindow.ShowGraph(Graph)
- uid: Automata.Visualization.ConsoleWindow.ShowGraph*
  name: ShowGraph
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_ShowGraph_
  commentId: Overload:Automata.Visualization.ConsoleWindow.ShowGraph
  isSpec: "True"
  fullName: Automata.Visualization.ConsoleWindow.ShowGraph
  nameWithType: ConsoleWindow.ShowGraph
- uid: Automata.Visualization.ConsoleWindow.Write(System.String,System.Nullable{System.Drawing.Color})
  name: Write(string, Color?)
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_Write_System_String_System_Nullable_System_Drawing_Color__
  commentId: M:Automata.Visualization.ConsoleWindow.Write(System.String,System.Nullable{System.Drawing.Color})
  name.vb: Write(String, Color?)
  fullName: Automata.Visualization.ConsoleWindow.Write(string, System.Drawing.Color?)
  fullName.vb: Automata.Visualization.ConsoleWindow.Write(String, System.Drawing.Color?)
  nameWithType: ConsoleWindow.Write(string, Color?)
  nameWithType.vb: ConsoleWindow.Write(String, Color?)
- uid: Automata.Visualization.ConsoleWindow.Write*
  name: Write
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_Write_
  commentId: Overload:Automata.Visualization.ConsoleWindow.Write
  isSpec: "True"
  fullName: Automata.Visualization.ConsoleWindow.Write
  nameWithType: ConsoleWindow.Write
- uid: Automata.Visualization.ConsoleWindow.WriteLine(System.String,System.Nullable{System.Drawing.Color})
  name: WriteLine(string, Color?)
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_WriteLine_System_String_System_Nullable_System_Drawing_Color__
  commentId: M:Automata.Visualization.ConsoleWindow.WriteLine(System.String,System.Nullable{System.Drawing.Color})
  name.vb: WriteLine(String, Color?)
  fullName: Automata.Visualization.ConsoleWindow.WriteLine(string, System.Drawing.Color?)
  fullName.vb: Automata.Visualization.ConsoleWindow.WriteLine(String, System.Drawing.Color?)
  nameWithType: ConsoleWindow.WriteLine(string, Color?)
  nameWithType.vb: ConsoleWindow.WriteLine(String, Color?)
- uid: Automata.Visualization.ConsoleWindow.WriteLine*
  name: WriteLine
  href: Automata.Visualization.ConsoleWindow.html#Automata_Visualization_ConsoleWindow_WriteLine_
  commentId: Overload:Automata.Visualization.ConsoleWindow.WriteLine
  isSpec: "True"
  fullName: Automata.Visualization.ConsoleWindow.WriteLine
  nameWithType: ConsoleWindow.WriteLine
- uid: Automata.Visualization.GraphFactory
  name: GraphFactory
  href: Automata.Visualization.GraphFactory.html
  commentId: T:Automata.Visualization.GraphFactory
  fullName: Automata.Visualization.GraphFactory
  nameWithType: GraphFactory
- uid: Automata.Visualization.GraphFactory.ConfigNode(Microsoft.Msagl.Drawing.Node,System.Boolean,System.Boolean)
  name: ConfigNode(Node, bool, bool)
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_ConfigNode_Microsoft_Msagl_Drawing_Node_System_Boolean_System_Boolean_
  commentId: M:Automata.Visualization.GraphFactory.ConfigNode(Microsoft.Msagl.Drawing.Node,System.Boolean,System.Boolean)
  name.vb: ConfigNode(Node, Boolean, Boolean)
  fullName: Automata.Visualization.GraphFactory.ConfigNode(Microsoft.Msagl.Drawing.Node, bool, bool)
  fullName.vb: Automata.Visualization.GraphFactory.ConfigNode(Microsoft.Msagl.Drawing.Node, Boolean, Boolean)
  nameWithType: GraphFactory.ConfigNode(Node, bool, bool)
  nameWithType.vb: GraphFactory.ConfigNode(Node, Boolean, Boolean)
- uid: Automata.Visualization.GraphFactory.ConfigNode*
  name: ConfigNode
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_ConfigNode_
  commentId: Overload:Automata.Visualization.GraphFactory.ConfigNode
  isSpec: "True"
  fullName: Automata.Visualization.GraphFactory.ConfigNode
  nameWithType: GraphFactory.ConfigNode
- uid: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.IFsa,Microsoft.Msagl.Drawing.LayerDirection,System.Boolean)
  name: CreateGraph(IFsa, LayerDirection, bool)
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_Automata_Core_IFsa_Microsoft_Msagl_Drawing_LayerDirection_System_Boolean_
  commentId: M:Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.IFsa,Microsoft.Msagl.Drawing.LayerDirection,System.Boolean)
  name.vb: CreateGraph(IFsa, LayerDirection, Boolean)
  fullName: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.IFsa, Microsoft.Msagl.Drawing.LayerDirection, bool)
  fullName.vb: Automata.Visualization.GraphFactory.CreateGraph(Automata.Core.IFsa, Microsoft.Msagl.Drawing.LayerDirection, Boolean)
  nameWithType: GraphFactory.CreateGraph(IFsa, LayerDirection, bool)
  nameWithType.vb: GraphFactory.CreateGraph(IFsa, LayerDirection, Boolean)
- uid: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)
  name: CreateGraph(IEnumerable<IEnumerable<string>>, bool)
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___System_Boolean_
  commentId: M:Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}},System.Boolean)
  name.vb: CreateGraph(IEnumerable(Of IEnumerable(Of String)), Boolean)
  fullName: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>, bool)
  fullName.vb: Automata.Visualization.GraphFactory.CreateGraph(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)), Boolean)
  nameWithType: GraphFactory.CreateGraph(IEnumerable<IEnumerable<string>>, bool)
  nameWithType.vb: GraphFactory.CreateGraph(IEnumerable(Of IEnumerable(Of String)), Boolean)
- uid: Automata.Visualization.GraphFactory.CreateGraph*
  name: CreateGraph
  href: Automata.Visualization.GraphFactory.html#Automata_Visualization_GraphFactory_CreateGraph_
  commentId: Overload:Automata.Visualization.GraphFactory.CreateGraph
  isSpec: "True"
  fullName: Automata.Visualization.GraphFactory.CreateGraph
  nameWithType: GraphFactory.CreateGraph
- uid: Automata.Visualization.GraphView
  name: GraphView
  href: Automata.Visualization.GraphView.html
  commentId: T:Automata.Visualization.GraphView
  fullName: Automata.Visualization.GraphView
  nameWithType: GraphView
- uid: Automata.Visualization.GraphView.Dispose(System.Boolean)
  name: Dispose(bool)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Dispose_System_Boolean_
  commentId: M:Automata.Visualization.GraphView.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: Automata.Visualization.GraphView.Dispose(bool)
  fullName.vb: Automata.Visualization.GraphView.Dispose(Boolean)
  nameWithType: GraphView.Dispose(bool)
  nameWithType.vb: GraphView.Dispose(Boolean)
- uid: Automata.Visualization.GraphView.Dispose*
  name: Dispose
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Dispose_
  commentId: Overload:Automata.Visualization.GraphView.Dispose
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.Dispose
  nameWithType: GraphView.Dispose
- uid: Automata.Visualization.GraphView.Invoke(System.Action)
  name: Invoke(Action)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Invoke_System_Action_
  commentId: M:Automata.Visualization.GraphView.Invoke(System.Action)
  fullName: Automata.Visualization.GraphView.Invoke(System.Action)
  nameWithType: GraphView.Invoke(Action)
- uid: Automata.Visualization.GraphView.Invoke*
  name: Invoke
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_Invoke_
  commentId: Overload:Automata.Visualization.GraphView.Invoke
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.Invoke
  nameWithType: GraphView.Invoke
- uid: Automata.Visualization.GraphView.OpenNew
  name: OpenNew()
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew
  commentId: M:Automata.Visualization.GraphView.OpenNew
  fullName: Automata.Visualization.GraphView.OpenNew()
  nameWithType: GraphView.OpenNew()
- uid: Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  name: OpenNew(Graph)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew_Microsoft_Msagl_Drawing_Graph_
  commentId: M:Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  fullName: Automata.Visualization.GraphView.OpenNew(Microsoft.Msagl.Drawing.Graph)
  nameWithType: GraphView.OpenNew(Graph)
- uid: Automata.Visualization.GraphView.OpenNew*
  name: OpenNew
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_OpenNew_
  commentId: Overload:Automata.Visualization.GraphView.OpenNew
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.OpenNew
  nameWithType: GraphView.OpenNew
- uid: Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  name: SetGraph(Graph)
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_SetGraph_Microsoft_Msagl_Drawing_Graph_
  commentId: M:Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  fullName: Automata.Visualization.GraphView.SetGraph(Microsoft.Msagl.Drawing.Graph)
  nameWithType: GraphView.SetGraph(Graph)
- uid: Automata.Visualization.GraphView.SetGraph*
  name: SetGraph
  href: Automata.Visualization.GraphView.html#Automata_Visualization_GraphView_SetGraph_
  commentId: Overload:Automata.Visualization.GraphView.SetGraph
  isSpec: "True"
  fullName: Automata.Visualization.GraphView.SetGraph
  nameWithType: GraphView.SetGraph
